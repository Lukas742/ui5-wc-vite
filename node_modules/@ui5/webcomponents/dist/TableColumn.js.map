{"version":3,"file":"TableColumn.js","sourceRoot":"","sources":["../src/TableColumn.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,UAAU,MAAM,4CAA4C,CAAC;AACpE,OAAO,SAAS,MAAM,sDAAsD,CAAC;AAC7E,OAAO,aAAa,MAAM,0DAA0D,CAAC;AACrF,OAAO,QAAQ,MAAM,qDAAqD,CAAC;AAC3E,OAAO,OAAO,MAAM,+CAA+C,CAAC;AACpE,OAAO,mBAAmB,MAAM,kDAAkD,CAAC;AACnF,OAAO,uBAAuB,MAAM,oCAAoC,CAAC;AAEzE,SAAS;AACT,OAAO,iBAAiB,MAAM,uCAAuC,CAAC;AAEtE;;;;;;;;;;;;GAYG;AAOH,IAAM,WAAW,GAAjB,MAAM,WAAY,SAAQ,UAAU;CAyDnC,CAAA;AA7CA;IADC,QAAQ,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC;6CACvC;AAQlB;IADC,QAAQ,EAAE;8CACQ;AAWnB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;gDACN;AAatB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,uBAAuB,EAAE,YAAY,EAAE,uBAAuB,CAAC,KAAK,EAAE,CAAC;iDAC7C;AAM5C;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;0CACZ;AAMhB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;yCACb;AAxDV,WAAW;IANhB,aAAa,CAAC;QACd,GAAG,EAAE,kBAAkB;QACvB,MAAM,EAAE,iBAAiB;QACzB,QAAQ,EAAE,SAAS;QACnB,QAAQ,EAAE,mBAAmB;KAC7B,CAAC;GACI,WAAW,CAyDhB;AAED,WAAW,CAAC,MAAM,EAAE,CAAC;AAErB,eAAe,WAAW,CAAC","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\nimport TableColumnTemplate from \"./generated/templates/TableColumnTemplate.lit.js\";\nimport TableColumnPopinDisplay from \"./types/TableColumnPopinDisplay.js\";\n\n// Styles\nimport tableColumnStyles from \"./generated/themes/TableColumn.css.js\";\n\n/**\n * @class\n *\n * ### Overview\n *\n * The `ui5-table-column` component allows to define column specific properties that are applied\n * when rendering the `ui5-table` component.\n * @constructor\n * @extends UI5Element\n * @public\n * @slot {Node[]} default - Defines the content of the column header\n * @csspart column - Used to style the native `th` element\n */\n@customElement({\n\ttag: \"ui5-table-column\",\n\tstyles: tableColumnStyles,\n\trenderer: litRender,\n\ttemplate: TableColumnTemplate,\n})\nclass TableColumn extends UI5Element {\n\t/**\n\t * Defines the minimum table width required to display this column. By default it is always displayed.\n\t *\n\t * The responsive behavior of the `ui5-table` is determined by this property. As an example, by setting\n\t * `minWidth` property to `400` sets the minimum width to 400 pixels, and\tshows this column on tablet (and desktop) but hides it on mobile.\n\t *\n\t * For further responsive design options, see `demandPopin` property.\n\t * @default Infinity\n\t * @public\n\t */\n\t@property({ validator: Integer, defaultValue: Infinity })\n\tminWidth!: number;\n\n\t/**\n\t * The text for the column when it pops in.\n\t * @default \"\"\n\t * @public\n\t */\n\t@property()\n\tpopinText!: string;\n\n\t/**\n\t * According to your `minWidth` settings, the component can be hidden\n\t * in different screen sizes.\n\t *\n\t * Setting this property to `true`, shows this column as pop-in instead of hiding it.\n\t * @default false\n\t * @public\n\t */\n\t@property({ type: Boolean })\n\tdemandPopin!: boolean;\n\n\t/**\n\t * Defines how the popin row is displayed.\n\t *\n\t * **The available values are:**\n\t *\n\t * - `Block`\n\t * - `Inline`\n\t * @default \"Block\"\n\t * @public\n\t */\n\t@property({ type: TableColumnPopinDisplay, defaultValue: TableColumnPopinDisplay.Block })\n\tpopinDisplay!: `${TableColumnPopinDisplay}`;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\tfirst!: boolean;\n\n\t/**\n\t * @private\n\t */\n\t@property({ type: Boolean })\n\tlast!: boolean;\n}\n\nTableColumn.define();\n\nexport default TableColumn;\n"]}