import "./chunk-TYBBYZKD.js";
import {
  fetchI18nBundle,
  getI18nBundleData
} from "./chunk-ORF6YVUE.js";
import {
  deepEqual_default
} from "./chunk-UWFUXSOF.js";
import {
  CalendarType_default,
  CalendarType_default3 as CalendarType_default2,
  CalendarUtils_default,
  CalendarWeekNumbering_default2 as CalendarWeekNumbering_default,
  Configuration_default,
  Core_default,
  LocaleData_default,
  Locale_default,
  Log_default,
  TimezoneUtil_default,
  UI5Date_default,
  UniversalDate_default,
  assert_default,
  extend_default,
  getCalendarType,
  getFirstDayOfWeek,
  getSecondaryCalendarType
} from "./chunk-BWZI5OG7.js";
import {
  EventProvider_default,
  VersionInfo_default,
  boot,
  cancelRender,
  createLinkInHead_default,
  createStyle,
  fetchCldr,
  getFeature,
  getLocale_default,
  getNoConflict,
  getSharedResource_default,
  getSingletonElementInstance_default,
  getTheme,
  getUrl,
  hasStyle,
  isAndroid,
  isChrome,
  isCombi,
  isDesktop,
  isIOS,
  isLegacyThemeFamily,
  isPhone,
  isSafari,
  isTablet,
  isTagRegistered,
  markAsRtlAware,
  merge_default,
  reRenderAllUI5Elements,
  recordTagRegistrationFailure,
  registerFeature,
  registerTag,
  registerThemePropertiesLoader,
  renderDeferred,
  renderFinished,
  renderImmediately,
  shouldPreloadLinks,
  shouldUseLinks
} from "./chunk-GBZ2GERS.js";
import "./chunk-6WDZWUHI.js";

// node_modules/@ui5/webcomponents-base/dist/decorators/customElement.js
var customElement = (tagNameOrComponentSettings = {}) => {
  return (target) => {
    if (!Object.prototype.hasOwnProperty.call(target, "metadata")) {
      target.metadata = {};
    }
    if (typeof tagNameOrComponentSettings === "string") {
      target.metadata.tag = tagNameOrComponentSettings;
      return;
    }
    const { tag: tag2, languageAware, themeAware, fastNavigation } = tagNameOrComponentSettings;
    target.metadata.tag = tag2;
    if (languageAware) {
      target.metadata.languageAware = languageAware;
    }
    if (themeAware) {
      target.metadata.themeAware = themeAware;
    }
    if (fastNavigation) {
      target.metadata.fastNavigation = fastNavigation;
    }
    ["render", "renderer", "template", "staticAreaTemplate", "styles", "staticAreaStyles", "dependencies"].forEach((customElementEntity) => {
      const _customElementEntity = customElementEntity === "render" ? "renderer" : customElementEntity;
      const customElementEntityValue = tagNameOrComponentSettings[_customElementEntity];
      customElementEntityValue && Object.defineProperty(target, customElementEntity, {
        get: () => customElementEntityValue
      });
    });
  };
};
var customElement_default = customElement;

// node_modules/@ui5/webcomponents-base/dist/decorators/property.js
var property = (propData) => {
  return (target, propertyKey) => {
    const ctor = target.constructor;
    if (!Object.prototype.hasOwnProperty.call(ctor, "metadata")) {
      ctor.metadata = {};
    }
    const metadata = ctor.metadata;
    if (!metadata.properties) {
      metadata.properties = {};
    }
    const propsMetadata = metadata.properties;
    if (!propsMetadata[propertyKey]) {
      propsMetadata[propertyKey] = propData || { type: String };
    }
  };
};
var property_default = property;

// node_modules/@ui5/webcomponents-base/dist/decorators/slot.js
var slot = (slotData) => {
  return (target, slotKey) => {
    const ctor = target.constructor;
    if (!Object.prototype.hasOwnProperty.call(ctor, "metadata")) {
      ctor.metadata = {};
    }
    const metadata = ctor.metadata;
    if (!metadata.slots) {
      metadata.slots = {};
    }
    const slotMetadata = metadata.slots;
    if (slotData && slotData.default && slotMetadata.default) {
      throw new Error("Only one slot can be the default slot.");
    }
    const key = slotData && slotData.default ? "default" : slotKey;
    slotData = slotData || { type: HTMLElement };
    if (!slotData.type) {
      slotData.type = HTMLElement;
    }
    if (!slotMetadata[key]) {
      slotMetadata[key] = slotData;
    }
    if (slotData.default) {
      delete slotMetadata.default.default;
      slotMetadata.default.propertyName = slotKey;
    }
    ctor.metadata.managedSlots = true;
  };
};
var slot_default = slot;

// node_modules/@ui5/webcomponents-base/dist/decorators/event.js
var event = (name21, data = {}) => {
  return (target) => {
    if (!Object.prototype.hasOwnProperty.call(target, "metadata")) {
      target.metadata = {};
    }
    const metadata = target.metadata;
    if (!metadata.events) {
      metadata.events = {};
    }
    const eventsMetadata = metadata.events;
    if (!eventsMetadata[name21]) {
      eventsMetadata[name21] = data;
    }
  };
};
var event_default = event;

// node_modules/@ui5/webcomponents-localization/dist/sap/base/strings/formatMessage.js
var rMessageFormat = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g;
var fnFormatMessage = function(sPattern, aValues) {
  assert_default(typeof sPattern === "string" || sPattern instanceof String, "pattern must be string");
  if (arguments.length > 2 || aValues != null && !Array.isArray(aValues)) {
    aValues = Array.prototype.slice.call(arguments, 1);
  }
  aValues = aValues || [];
  return sPattern.replace(rMessageFormat, function($0, $1, $2, $3, offset) {
    if ($1) {
      return "'";
    } else if ($2) {
      return $2.replace(/''/g, "'");
    } else if ($3) {
      return String(aValues[parseInt($3)]);
    }
    throw new Error("formatMessage: pattern syntax error at pos. " + offset);
  });
};
var formatMessage_default = fnFormatMessage;

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/Supportability.js
var Supportability_default = {
  collectOriginInfo() {
    return false;
  }
};

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/format/DateFormat.js
var DateFormat = function() {
  throw new Error();
};
var mDateFormatTypes = {
  DATE: "date",
  TIME: "time",
  DATETIME: "datetime",
  DATETIME_WITH_TIMEZONE: "datetimeWithTimezone"
};
var mCldrDatePattern = {};
var checkTimezoneParameterType = function(sTimezone) {
  if (typeof sTimezone !== "string" && !(sTimezone instanceof String) && sTimezone != null) {
    throw new TypeError("The given timezone must be a string.");
  }
};
DateFormat.oDateInfo = {
  type: mDateFormatTypes.DATE,
  oDefaultFormatOptions: {
    style: "medium",
    relativeScale: "day",
    relativeStyle: "wide"
  },
  aFallbackFormatOptions: [{
    style: "short"
  }, {
    style: "medium"
  }, {
    pattern: "yyyy-MM-dd"
  }, {
    pattern: "yyyyMMdd",
    strictParsing: true
  }],
  bShortFallbackFormatOptions: true,
  bPatternFallbackWithoutDelimiter: true,
  getPattern: function(oLocaleData, sStyle, sCalendarType) {
    return oLocaleData.getDatePattern(sStyle, sCalendarType);
  },
  oRequiredParts: {
    "text": true,
    "year": true,
    "weekYear": true,
    "month": true,
    "day": true
  },
  aRelativeScales: ["year", "month", "week", "day"],
  aRelativeParseScales: ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
  aIntervalCompareFields: ["Era", "FullYear", "Quarter", "Month", "Week", "Date"]
};
DateFormat.oDateTimeInfo = {
  type: mDateFormatTypes.DATETIME,
  oDefaultFormatOptions: {
    style: "medium",
    relativeScale: "auto",
    relativeStyle: "wide"
  },
  aFallbackFormatOptions: [{
    style: "short"
  }, {
    style: "medium"
  }, {
    pattern: "yyyy-MM-dd'T'HH:mm:ss"
  }, {
    pattern: "yyyyMMdd HHmmss"
  }],
  getPattern: function(oLocaleData, sStyle, sCalendarType) {
    var iSlashIndex = sStyle.indexOf("/");
    if (iSlashIndex > 0) {
      return oLocaleData.getCombinedDateTimePattern(sStyle.substr(0, iSlashIndex), sStyle.substr(iSlashIndex + 1), sCalendarType);
    } else {
      return oLocaleData.getCombinedDateTimePattern(sStyle, sStyle, sCalendarType);
    }
  },
  oRequiredParts: {
    "text": true,
    "year": true,
    "weekYear": true,
    "month": true,
    "day": true,
    "hour0_23": true,
    "hour1_24": true,
    "hour0_11": true,
    "hour1_12": true
  },
  aRelativeScales: ["year", "month", "week", "day", "hour", "minute", "second"],
  aRelativeParseScales: ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
  aIntervalCompareFields: ["Era", "FullYear", "Quarter", "Month", "Week", "Date", "DayPeriod", "Hours", "Minutes", "Seconds"]
};
DateFormat._getDateTimeWithTimezoneInfo = function(oFormatOptions) {
  var bShowDate = oFormatOptions.showDate === void 0 || oFormatOptions.showDate;
  var bShowTime = oFormatOptions.showTime === void 0 || oFormatOptions.showTime;
  var bShowTimezone = oFormatOptions.showTimezone === void 0 || oFormatOptions.showTimezone;
  var oBaselineType = DateFormat.oDateTimeInfo;
  if (bShowDate && !bShowTime) {
    oBaselineType = DateFormat.oDateInfo;
  } else if (!bShowDate && bShowTime) {
    oBaselineType = DateFormat.oTimeInfo;
  }
  return Object.assign({}, oBaselineType, {
    type: mDateFormatTypes.DATETIME_WITH_TIMEZONE,
    // This function is used to transform the pattern of the fallbackFormatOptions to a timezone pattern.
    getTimezonePattern: function(sPattern) {
      if (!bShowDate && !bShowTime && bShowTimezone) {
        return "VV";
      } else if (!bShowTimezone) {
        return sPattern;
      } else {
        return sPattern + " VV";
      }
    },
    getPattern: function(oLocaleData, sStyle, sCalendarType) {
      if (!bShowDate && !bShowTime && bShowTimezone) {
        return "VV";
      }
      if (!bShowTimezone) {
        return oBaselineType.getPattern(oLocaleData, sStyle, sCalendarType);
      }
      var sPattern = oBaselineType.getPattern(oLocaleData, sStyle, sCalendarType);
      return oLocaleData.applyTimezonePattern(sPattern);
    }
  });
};
DateFormat.oTimeInfo = {
  type: mDateFormatTypes.TIME,
  oDefaultFormatOptions: {
    style: "medium",
    relativeScale: "auto",
    relativeStyle: "wide"
  },
  aFallbackFormatOptions: [{
    style: "short"
  }, {
    style: "medium"
  }, {
    pattern: "HH:mm:ss"
  }, {
    pattern: "HHmmss"
  }],
  getPattern: function(oLocaleData, sStyle, sCalendarType) {
    return oLocaleData.getTimePattern(sStyle, sCalendarType);
  },
  oRequiredParts: {
    "text": true,
    "hour0_23": true,
    "hour1_24": true,
    "hour0_11": true,
    "hour1_12": true
  },
  aRelativeScales: ["hour", "minute", "second"],
  aRelativeParseScales: ["year", "quarter", "month", "week", "day", "hour", "minute", "second"],
  aIntervalCompareFields: ["DayPeriod", "Hours", "Minutes", "Seconds"]
};
DateFormat.getInstance = function(oFormatOptions, oLocale) {
  return this.getDateInstance(oFormatOptions, oLocale);
};
DateFormat.getDateInstance = function(oFormatOptions, oLocale) {
  return this.createInstance(oFormatOptions, oLocale, this.oDateInfo);
};
DateFormat.getDateTimeInstance = function(oFormatOptions, oLocale) {
  return this.createInstance(oFormatOptions, oLocale, this.oDateTimeInfo);
};
DateFormat.getDateTimeWithTimezoneInstance = function(oFormatOptions, oLocale) {
  if (oFormatOptions && !(oFormatOptions instanceof Locale_default)) {
    (function() {
      oFormatOptions = Object.assign({}, oFormatOptions);
      if (typeof oFormatOptions.showTimezone === "string") {
        var sShowTimezone = oFormatOptions.showTimezone;
        if (oFormatOptions.showDate === void 0 && oFormatOptions.showTime === void 0) {
          if (sShowTimezone === "Hide") {
            oFormatOptions.showTimezone = false;
          } else if (sShowTimezone === "Only") {
            oFormatOptions.showDate = false;
            oFormatOptions.showTime = false;
          }
        }
        oFormatOptions.showTimezone = sShowTimezone !== "Hide";
      }
    })();
    if (oFormatOptions.showDate === false && oFormatOptions.showTime === false && oFormatOptions.showTimezone === false) {
      throw new TypeError("Invalid Configuration. One of the following format options must be true: showDate, showTime or showTimezone.");
    }
  }
  return this.createInstance(oFormatOptions, oLocale, DateFormat._getDateTimeWithTimezoneInfo(oFormatOptions || {}));
};
DateFormat.getTimeInstance = function(oFormatOptions, oLocale) {
  return this.createInstance(oFormatOptions, oLocale, this.oTimeInfo);
};
DateFormat.createInstance = function(oFormatOptions, oLocale, oInfo, bIsFallback) {
  var aFallbackFormatOptions, oFormat, sPattern;
  oFormat = Object.create(this.prototype);
  if (oFormatOptions instanceof Locale_default) {
    oLocale = oFormatOptions;
    oFormatOptions = void 0;
  }
  if (!oLocale) {
    oLocale = Configuration_default.getFormatSettings().getFormatLocale();
  }
  oFormat.oLocale = oLocale;
  oFormat.oLocaleData = LocaleData_default.getInstance(oLocale);
  oFormat.oFormatOptions = extend_default({}, oInfo.oDefaultFormatOptions, oFormatOptions);
  if (oInfo.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    oFormat.oFormatOptions.interval = false;
    oFormat.oFormatOptions.singleIntervalValue = false;
    oFormat.oFormatOptions.UTC = false;
  } else {
    oFormat.oFormatOptions.showTimezone = void 0;
    oFormat.oFormatOptions.showDate = void 0;
    oFormat.oFormatOptions.showTime = void 0;
  }
  oFormat.type = oInfo.type;
  if (!oFormat.oFormatOptions.calendarType) {
    oFormat.oFormatOptions.calendarType = Configuration_default.getCalendarType();
  }
  if (oFormat.oFormatOptions.firstDayOfWeek === void 0 && oFormat.oFormatOptions.minimalDaysInFirstWeek !== void 0 || oFormat.oFormatOptions.firstDayOfWeek !== void 0 && oFormat.oFormatOptions.minimalDaysInFirstWeek === void 0) {
    throw new TypeError("Format options firstDayOfWeek and minimalDaysInFirstWeek need both to be set, but only one was provided.");
  }
  if (oFormat.oFormatOptions.calendarWeekNumbering && !Object.values(CalendarWeekNumbering_default).includes(oFormat.oFormatOptions.calendarWeekNumbering)) {
    throw new TypeError("Illegal format option calendarWeekNumbering: '" + oFormat.oFormatOptions.calendarWeekNumbering + "'");
  }
  if (!oFormat.oFormatOptions.pattern) {
    if (oFormat.oFormatOptions.format) {
      oFormat.oFormatOptions.pattern = oFormat.oLocaleData.getCustomDateTimePattern(oFormat.oFormatOptions.format, oFormat.oFormatOptions.calendarType);
    } else {
      oFormat.oFormatOptions.pattern = oInfo.getPattern(oFormat.oLocaleData, oFormat.oFormatOptions.style, oFormat.oFormatOptions.calendarType);
    }
  }
  if (oFormat.oFormatOptions.interval) {
    var sSinglePattern, sDelimiter = oFormat.oFormatOptions.intervalDelimiter;
    if (oFormat.oFormatOptions.format) {
      oFormat.intervalPatterns = oFormat.oLocaleData.getCustomIntervalPattern(oFormat.oFormatOptions.format, null, oFormat.oFormatOptions.calendarType);
      if (typeof oFormat.intervalPatterns === "string") {
        oFormat.intervalPatterns = [oFormat.intervalPatterns];
      }
      sSinglePattern = oFormat.oLocaleData.getCustomDateTimePattern(oFormat.oFormatOptions.format, oFormat.oFormatOptions.calendarType);
      oFormat.intervalPatterns.push(sSinglePattern);
    } else {
      sSinglePattern = oFormat.oFormatOptions.pattern;
      oFormat.intervalPatterns = [
        // when 'format' option is not set, generate the combined interval pattern
        oFormat.oLocaleData.getCombinedIntervalPattern(oFormat.oFormatOptions.pattern, oFormat.oFormatOptions.calendarType),
        // Put the single date pattern into the array in case the date interval is formatted as a single date
        oFormat.oFormatOptions.pattern
      ];
    }
    oFormat.intervalPatterns.push(oFormat.oFormatOptions.pattern + " - " + oFormat.oFormatOptions.pattern);
    if (sDelimiter) {
      sDelimiter = sDelimiter.replace(/'/g, "''");
      sDelimiter = "'" + sDelimiter + "'";
      oFormat.intervalPatterns.unshift(sSinglePattern + sDelimiter + sSinglePattern);
    }
    oFormat.intervalPatterns = Array.from(new Set(oFormat.intervalPatterns));
  }
  if (!bIsFallback) {
    aFallbackFormatOptions = oInfo.aFallbackFormatOptions;
    if (oInfo.bShortFallbackFormatOptions) {
      sPattern = oInfo.getPattern(oFormat.oLocaleData, "short");
      aFallbackFormatOptions = aFallbackFormatOptions.concat(DateFormat._createFallbackOptionsWithoutDelimiter(sPattern));
    }
    if (oFormat.oFormatOptions.pattern && oInfo.bPatternFallbackWithoutDelimiter) {
      aFallbackFormatOptions = DateFormat._createFallbackOptionsWithoutDelimiter(oFormat.oFormatOptions.pattern).concat(aFallbackFormatOptions);
    }
    aFallbackFormatOptions = aFallbackFormatOptions.reduce(function(aFallbacks, oOptions) {
      var aKeys = Object.keys(oOptions), bDuplicate = aFallbacks.some(function(oOptions0) {
        return Object.keys(oOptions0).length === aKeys.length && aKeys.every(function(sKey) {
          return oOptions0[sKey] === oOptions[sKey];
        });
      });
      if (!bDuplicate) {
        aFallbacks.push(oOptions);
      }
      return aFallbacks;
    }, []);
    oFormat.aFallbackFormats = DateFormat._createFallbackFormat(aFallbackFormatOptions, oFormat.oFormatOptions.calendarType, oLocale, oInfo, oFormat.oFormatOptions);
  }
  oFormat.oRequiredParts = oInfo.oRequiredParts;
  oFormat.aRelativeScales = oInfo.aRelativeScales;
  oFormat.aRelativeParseScales = oInfo.aRelativeParseScales;
  oFormat.aIntervalCompareFields = oInfo.aIntervalCompareFields;
  oFormat.init();
  return oFormat;
};
DateFormat.prototype.init = function() {
  var sCalendarType = this.oFormatOptions.calendarType;
  this.aMonthsAbbrev = this.oLocaleData._getMonthsWithAlternatives("abbreviated", sCalendarType);
  this.aMonthsWide = this.oLocaleData.getMonths("wide", sCalendarType);
  this.aMonthsNarrow = this.oLocaleData.getMonths("narrow", sCalendarType);
  this.aMonthsAbbrevSt = this.oLocaleData._getMonthsStandAloneWithAlternatives("abbreviated", sCalendarType);
  this.aMonthsWideSt = this.oLocaleData.getMonthsStandAlone("wide", sCalendarType);
  this.aMonthsNarrowSt = this.oLocaleData.getMonthsStandAlone("narrow", sCalendarType);
  this.aDaysAbbrev = this.oLocaleData.getDays("abbreviated", sCalendarType);
  this.aDaysWide = this.oLocaleData.getDays("wide", sCalendarType);
  this.aDaysNarrow = this.oLocaleData.getDays("narrow", sCalendarType);
  this.aDaysShort = this.oLocaleData.getDays("short", sCalendarType);
  this.aDaysAbbrevSt = this.oLocaleData.getDaysStandAlone("abbreviated", sCalendarType);
  this.aDaysWideSt = this.oLocaleData.getDaysStandAlone("wide", sCalendarType);
  this.aDaysNarrowSt = this.oLocaleData.getDaysStandAlone("narrow", sCalendarType);
  this.aDaysShortSt = this.oLocaleData.getDaysStandAlone("short", sCalendarType);
  this.aQuartersAbbrev = this.oLocaleData.getQuarters("abbreviated", sCalendarType);
  this.aQuartersWide = this.oLocaleData.getQuarters("wide", sCalendarType);
  this.aQuartersNarrow = this.oLocaleData.getQuarters("narrow", sCalendarType);
  this.aQuartersAbbrevSt = this.oLocaleData.getQuartersStandAlone("abbreviated", sCalendarType);
  this.aQuartersWideSt = this.oLocaleData.getQuartersStandAlone("wide", sCalendarType);
  this.aQuartersNarrowSt = this.oLocaleData.getQuartersStandAlone("narrow", sCalendarType);
  this.aErasNarrow = this.oLocaleData.getEras("narrow", sCalendarType);
  this.aErasAbbrev = this.oLocaleData.getEras("abbreviated", sCalendarType);
  this.aErasWide = this.oLocaleData.getEras("wide", sCalendarType);
  this.aDayPeriodsAbbrev = this.oLocaleData.getDayPeriods("abbreviated", sCalendarType);
  this.aDayPeriodsNarrow = this.oLocaleData.getDayPeriods("narrow", sCalendarType);
  this.aDayPeriodsWide = this.oLocaleData.getDayPeriods("wide", sCalendarType);
  this.oFlexibleDayPeriodsAbbrev = this.oLocaleData.getFlexibleDayPeriods("abbreviated", sCalendarType);
  this.oFlexibleDayPeriodsNarrow = this.oLocaleData.getFlexibleDayPeriods("narrow", sCalendarType);
  this.oFlexibleDayPeriodsWide = this.oLocaleData.getFlexibleDayPeriods("wide", sCalendarType);
  this.oFlexibleDayPeriodsAbbrevSt = this.oLocaleData.getFlexibleDayPeriodsStandAlone("abbreviated", sCalendarType);
  this.oFlexibleDayPeriodsNarrowSt = this.oLocaleData.getFlexibleDayPeriodsStandAlone("narrow", sCalendarType);
  this.oFlexibleDayPeriodsWideSt = this.oLocaleData.getFlexibleDayPeriodsStandAlone("wide", sCalendarType);
  this.aFormatArray = this.parseCldrDatePattern(this.oFormatOptions.pattern);
  this.sAllowedCharacters = this.getAllowedCharacters(this.aFormatArray);
};
DateFormat._createFallbackFormat = function(aFallbackFormatOptions, sCalendarType, oLocale, oInfo, oParentFormatOptions) {
  return aFallbackFormatOptions.map(function(oOptions) {
    var oFormatOptions = Object.assign({}, oOptions);
    oFormatOptions.showDate = oParentFormatOptions.showDate;
    oFormatOptions.showTime = oParentFormatOptions.showTime;
    oFormatOptions.showTimezone = oParentFormatOptions.showTimezone;
    if (typeof oInfo.getTimezonePattern === "function" && oFormatOptions.pattern) {
      oFormatOptions.pattern = oInfo.getTimezonePattern(oFormatOptions.pattern);
    }
    if (oParentFormatOptions.interval) {
      oFormatOptions.interval = true;
    }
    oFormatOptions.calendarType = sCalendarType;
    return DateFormat.createInstance(oFormatOptions, oLocale, oInfo, true);
  });
};
DateFormat._createFallbackOptionsWithoutDelimiter = function(sBasePattern) {
  var rNonDateFields = /[^dMyGU]/g, oDayReplace = {
    regex: /d+/g,
    replace: "dd"
  }, oMonthReplace = {
    regex: /M+/g,
    replace: "MM"
  }, oYearReplace = {
    regex: /[yU]+/g,
    replace: ["yyyy", "yy"]
  };
  sBasePattern = sBasePattern.replace(rNonDateFields, "");
  sBasePattern = sBasePattern.replace(oDayReplace.regex, oDayReplace.replace);
  sBasePattern = sBasePattern.replace(oMonthReplace.regex, oMonthReplace.replace);
  return oYearReplace.replace.map(function(sReplace) {
    return {
      pattern: sBasePattern.replace(oYearReplace.regex, sReplace),
      strictParsing: true
    };
  });
};
var oParseHelper = {
  isNumber: function(iCharCode) {
    return iCharCode >= 48 && iCharCode <= 57;
  },
  findNumbers: function(sValue, iMaxLength) {
    var iLength = 0;
    while (iLength < iMaxLength && this.isNumber(sValue.charCodeAt(iLength))) {
      iLength++;
    }
    return sValue.substr(0, iLength);
  },
  /**
   * Returns if the given string starts with another given string ignoring the case.
   *
   * Takes the locale into account to ensure the characters are interpreted the right way.
   *
   * First, an exact case check is performed to remain backward compatible, then a case-insensitive check
   * based on the locale is done.
   *
   * When during the case conversion the length of the string changes we cannot safely match
   * it and return <code>false</code>.
   *
   * @param {string} sValue the value to check, e.g. "März 2013"
   * @param {string} sSubstring the string to compare it with, e.g. "MÄRZ"
   * @param {string} sLocale the locale, e.g. "de-DE"
   * @returns {boolean} true if the given string <code>sValue</code> starts with <code>sSubstring</code>
   * @private
   */
  startsWithIgnoreCase: function(sValue, sSubstring, sLocale) {
    if (sValue.startsWith(sSubstring)) {
      return true;
    }
    try {
      var sSubToLocaleUpperCase = sSubstring.toLocaleUpperCase(sLocale);
      var sValueUpperCase = sValue.toLocaleUpperCase(sLocale);
      if (sSubToLocaleUpperCase.length !== sSubstring.length || sValueUpperCase.length !== sValue.length) {
        return false;
      }
      return sValueUpperCase.startsWith(sSubToLocaleUpperCase);
    } catch (e) {
      return false;
    }
  },
  /**
   * Finds the longest matching entry for which the following applies:
   * * <code>sValue</code> starts with the found entry
   *
   * The index of the finding in <code>aList</code> and the length of the match is returned.
   * The case is ignored and the given locale is used for the string comparison.
   *
   * @example
   * findEntry("MÄRZ 2013", ["Januar", "Februar", "März", "April", ...], "de-DE");
   * // {length: 4, index: 2}
   * @example
   * findEntry("Sep 2013", [..., "Aug", ["Sept", "Sep"], "Oct", ...], "en-GB");
   * // {length: 3, index: 8}
   *
   * @param {string} sValue the input value, e.g. "MÄRZ 2013"
   * @param {string[]|Array<string[]>} aList
   *   The list of values to check, e.g. ["Januar", "Februar", "März", "April", ...]; the list may contain also
   *   arrays of strings containing alternatives, e.g. [..., "Aug", ["Sept", "Sep"], "Oct", ...]
   * @param {string} sLocale the locale which is used for the string comparison, e.g. "de-DE"
   * @returns {{length: number, index: number}} the length of the match in sValue, the index in the list of values
   *   e.g. length: 4, index: 2 ("MÄRZ")
   * @private
   */
  findEntry: function(sValue, aList, sLocale) {
    let iFoundIndex = -1;
    let iMatchedLength = 0;
    aList.forEach((vEntry, j) => {
      (Array.isArray(vEntry) ? vEntry : [vEntry]).forEach((sEntry) => {
        if (sEntry.length > iMatchedLength && this.startsWithIgnoreCase(sValue, sEntry, sLocale)) {
          iFoundIndex = j;
          iMatchedLength = sEntry.length;
        }
      });
    });
    return {
      index: iFoundIndex,
      length: iMatchedLength
    };
  },
  /**
   * Parses a given timezone
   *
   * @param {string} sValue String to parse, e.g. "-0800", "-08:00", "-08"
   * @param {boolean} bColonSeparated Whether or not the values are colon separated, e.g. "-08:00"
   * @returns {{tzDiff: number, length: number}} Object containing the timezone difference in seconds and the length of the parsed segment
   */
  parseTZ: function(sValue, bColonSeparated) {
    var iLength = 0;
    var iTZFactor = sValue.charAt(0) === "+" ? -1 : 1;
    var sPart;
    if (sValue[0] === "Z") {
      return {
        length: 1,
        tzDiff: 0
      };
    }
    iLength++;
    sPart = this.findNumbers(sValue.substr(iLength), 2);
    var iTZDiffHour = parseInt(sPart);
    iLength += 2;
    if (bColonSeparated) {
      iLength++;
    }
    sPart = this.findNumbers(sValue.substr(iLength), 2);
    var iTZDiff = 0;
    if (sPart) {
      iLength += 2;
      iTZDiff = parseInt(sPart);
    }
    return {
      length: iLength,
      tzDiff: (iTZDiff + 60 * iTZDiffHour) * 60 * iTZFactor
    };
  },
  /**
   * Returns <code>false</code> if the given pattern symbol name is required and the value for that part is
   * invalid, otherwise <code>true</code> is returned.
   *
   * @param {string} sSymbolName
   *   A unique pattern symbol name
   * @param {boolean} bPartInvalid
   *   Whether the value for the given pattern symbol name is invalid
   * @param {sap.ui.core.format.DateFormat} oFormat
   *   The <code>DateFormat</code> instance
   * @returns {boolean}
   *   <code>false</code> if the given pattern symbol name is required and the value for that part is invalid,
   *   otherwise <code>true</code>
   */
  checkValid: function(sSymbolName, bPartInvalid, oFormat) {
    if (sSymbolName in oFormat.oRequiredParts && bPartInvalid) {
      return false;
    }
    return true;
  }
};
DateFormat._oParseHelper = oParseHelper;
DateFormat._createPatternSymbol = function(mParameters) {
  var fnIsNumeric = typeof mParameters.isNumeric === "function" && mParameters.isNumeric || function() {
    return mParameters.isNumeric || false;
  };
  return {
    name: mParameters.name,
    /**
     * Formatter for a pattern symbol.
     *
     * @param {Object<string, any>} oField
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {sap.ui.core.date.UniversalDate} oDate
     *   The date object to format
     * @param {boolean} bUTC
     *   Whether the UTC option is set
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @returns {string}
     *   The formatted date information for this date pattern part
     */
    format: mParameters.format || function() {
      return "";
    },
    /**
     * Parser for a pattern symbol.
     *
     * @param {string} sValue
     *   The given input
     * @param {Object<string, any>} oPart
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @param {object} oConfig
     *   The configuration object for parsing the value
     * @param {object} oConfig.dateValue
     *   The already parsed date fields
     * @param {boolean} oConfig.exactLength
     *   Whether parsing with the exact length specified by {@link DateFormat#parseCldrDatePattern} is needed
     * @param {object[]} oConfig.formatArray
     *   The complete format array as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {int} oConfig.index
     *   The current index in the format array
     * @param {boolean} oConfig.strict
     *   Whether to disallow overflows for component values of a date (see
     *   https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date).
     *   Note that the corresponding checks are just for number ranges which are possible <em>at max</em>
     *   without overflow; the check for day does not consider the month and year to compute the maximum
     *   number of days allowed.
     * @param {string} sTimezone
     *   The IANA timezone ID
     * @returns {object}
     *   The parsed date information for this date pattern part; could contain the property <code>valid</code>
     *   set to <code>false</code> if parsing was not successful
     */
    parse: mParameters.parse || function() {
      return {};
    },
    /**
     * Evaluates whether this symbol has a numeric representation.
     *
     * @param {int} [iDigits] The number of repetitions of the pattern symbol, e.g. <code>3</code> for "aaa"
     * @returns {boolean} Whether this symbol has a numeric representation
     */
    isNumeric: fnIsNumeric
  };
};
DateFormat.prototype.oSymbols = {
  "": DateFormat._createPatternSymbol({
    name: "text",
    format: function(oField, oDate) {
      return oField.value;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sChar;
      var bValid = true;
      var iValueIndex = 0;
      var iPatternIndex = 0;
      var sDelimiter = "-~‐‑‒–—﹘﹣－～";
      const sPartValue = DateFormat._normalize(oPart.value);
      for (; iPatternIndex < sPartValue.length; iPatternIndex++) {
        sChar = sPartValue.charAt(iPatternIndex);
        if (sChar === " ") {
          while (sValue.charAt(iValueIndex) === " ") {
            iValueIndex++;
          }
        } else if (sDelimiter.includes(sChar)) {
          if (!sDelimiter.includes(sValue.charAt(iValueIndex))) {
            bValid = false;
          }
          iValueIndex++;
        } else {
          if (sValue.charAt(iValueIndex) !== sChar) {
            bValid = false;
          }
          iValueIndex++;
        }
        if (!bValid) {
          break;
        }
      }
      if (bValid) {
        return {
          length: iValueIndex
        };
      } else {
        var bPartInvalid = false;
        if (oConfig.index < oConfig.formatArray.length - 1) {
          bPartInvalid = oConfig.formatArray[oConfig.index + 1].type in oFormat.oRequiredParts;
        }
        return {
          valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat)
        };
      }
    }
  }),
  "G": DateFormat._createPatternSymbol({
    name: "era",
    format: function(oField, oDate, bUTC, oFormat) {
      var iEra = oDate.getUTCEra();
      if (oField.digits <= 3) {
        return oFormat.aErasAbbrev[iEra];
      } else if (oField.digits === 4) {
        return oFormat.aErasWide[iEra];
      } else {
        return oFormat.aErasNarrow[iEra];
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var aErasVariants = [oFormat.aErasWide, oFormat.aErasAbbrev, oFormat.aErasNarrow];
      for (var i = 0; i < aErasVariants.length; i++) {
        var aVariants = aErasVariants[i];
        var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oFound.index !== -1) {
          return {
            era: oFound.index,
            length: oFound.length
          };
        }
      }
      return {
        era: oFormat.aErasWide.length - 1,
        valid: oParseHelper.checkValid(oPart.type, true, oFormat)
      };
    }
  }),
  "y": DateFormat._createPatternSymbol({
    name: "year",
    format: function(oField, oDate, bUTC, oFormat) {
      var iYear = oDate.getUTCFullYear();
      var sYear = String(iYear);
      var sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oField.digits === 2 && sYear.length > 2) {
        sYear = sYear.substr(sYear.length - 2);
      }
      if (sCalendarType !== CalendarType_default2.Japanese && oField.digits === 1 && iYear < 100) {
        sYear = sYear.padStart(4, "0");
      }
      return sYear.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iExpectedDigits, sPart, bPartInvalid, sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oPart.digits === 1) {
        iExpectedDigits = 4;
      } else if (oPart.digits === 2) {
        iExpectedDigits = 2;
      } else {
        iExpectedDigits = oPart.digits;
      }
      sPart = oParseHelper.findNumbers(sValue, iExpectedDigits);
      bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length !== iExpectedDigits;
      var iYear = parseInt(sPart);
      if (sCalendarType !== CalendarType_default2.Japanese && sPart.length <= 2) {
        var oCurrentDate = UniversalDate_default.getInstance(UI5Date_default.getInstance(), sCalendarType), iCurrentYear = oCurrentDate.getUTCFullYear(), iCurrentCentury = Math.floor(iCurrentYear / 100), iYearDiff = iCurrentCentury * 100 + iYear - iCurrentYear;
        if (iYearDiff < -70) {
          iYear += (iCurrentCentury + 1) * 100;
        } else if (iYearDiff < 30) {
          iYear += iCurrentCentury * 100;
        } else {
          iYear += (iCurrentCentury - 1) * 100;
        }
      }
      return {
        length: sPart.length,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat),
        year: iYear
      };
    },
    isNumeric: true
  }),
  "Y": DateFormat._createPatternSymbol({
    name: "weekYear",
    format: function(oField, oDate, bUTC, oFormat) {
      var oWeek = oDate.getUTCWeek(oFormat.oLocale, getCalendarWeekParameter(oFormat.oFormatOptions));
      var iWeekYear = oWeek.year;
      var sWeekYear = String(iWeekYear);
      var sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oField.digits === 2 && sWeekYear.length > 2) {
        sWeekYear = sWeekYear.substr(sWeekYear.length - 2);
      }
      if (sCalendarType !== CalendarType_default2.Japanese && oField.digits === 1 && iWeekYear < 100) {
        sWeekYear = sWeekYear.padStart(4, "0");
      }
      return sWeekYear.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iExpectedDigits, sPart, bPartInvalid, sCalendarType = oFormat.oFormatOptions.calendarType;
      if (oPart.digits === 1) {
        iExpectedDigits = 4;
      } else if (oPart.digits === 2) {
        iExpectedDigits = 2;
      } else {
        iExpectedDigits = oPart.digits;
      }
      sPart = oParseHelper.findNumbers(sValue, iExpectedDigits);
      bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length !== iExpectedDigits;
      var iYear = parseInt(sPart);
      var iWeekYear = iYear;
      if (sCalendarType !== CalendarType_default2.Japanese && sPart.length <= 2) {
        var oCurrentDate = UniversalDate_default.getInstance(UI5Date_default.getInstance(), sCalendarType), iCurrentYear = oCurrentDate.getUTCFullYear(), iCurrentCentury = Math.floor(iCurrentYear / 100), iYearDiff = iCurrentCentury * 100 + iWeekYear - iCurrentYear;
        if (iYearDiff < -70) {
          iWeekYear += (iCurrentCentury + 1) * 100;
        } else if (iYearDiff < 30) {
          iWeekYear += iCurrentCentury * 100;
        } else {
          iWeekYear += (iCurrentCentury - 1) * 100;
        }
      }
      return {
        length: sPart.length,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat),
        year: iYear,
        weekYear: iWeekYear
      };
    },
    isNumeric: true
  }),
  "M": DateFormat._createPatternSymbol({
    name: "month",
    format: function(oField, oDate, bUTC, oFormat) {
      var iMonth = oDate.getUTCMonth();
      if (oField.digits === 3) {
        const vName = oFormat.aMonthsAbbrev[iMonth];
        return Array.isArray(vName) ? vName[0] : vName;
      } else if (oField.digits === 4) {
        return oFormat.aMonthsWide[iMonth];
      } else if (oField.digits > 4) {
        return oFormat.aMonthsNarrow[iMonth];
      } else {
        return String(iMonth + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iMonth, sPart, bPartInvalid, bValid, aMonthsVariants = [oFormat.aMonthsWide, oFormat.aMonthsWideSt, oFormat.aMonthsAbbrev, oFormat.aMonthsAbbrevSt, oFormat.aMonthsNarrow, oFormat.aMonthsNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iMonth = parseInt(sPart) - 1;
        if (oConfig.strict && (iMonth > 11 || iMonth < 0)) {
          bValid = false;
        }
      } else {
        for (var i = 0; i < aMonthsVariants.length; i++) {
          var aVariants = aMonthsVariants[i];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              month: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        month: iMonth,
        length: sPart ? sPart.length : 0,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "L": DateFormat._createPatternSymbol({
    name: "monthStandalone",
    format: function(oField, oDate, bUTC, oFormat) {
      var iMonth = oDate.getUTCMonth();
      if (oField.digits === 3) {
        const vName = oFormat.aMonthsAbbrevSt[iMonth];
        return Array.isArray(vName) ? vName[0] : vName;
      } else if (oField.digits === 4) {
        return oFormat.aMonthsWideSt[iMonth];
      } else if (oField.digits > 4) {
        return oFormat.aMonthsNarrowSt[iMonth];
      } else {
        return String(iMonth + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iMonth, sPart, bPartInvalid, bValid, aMonthsVariants = [oFormat.aMonthsWide, oFormat.aMonthsWideSt, oFormat.aMonthsAbbrev, oFormat.aMonthsAbbrevSt, oFormat.aMonthsNarrow, oFormat.aMonthsNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iMonth = parseInt(sPart) - 1;
        if (oConfig.strict && (iMonth > 11 || iMonth < 0)) {
          bValid = false;
        }
      } else {
        for (var i = 0; i < aMonthsVariants.length; i++) {
          var aVariants = aMonthsVariants[i];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              month: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        month: iMonth,
        length: sPart ? sPart.length : 0,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "w": DateFormat._createPatternSymbol({
    name: "weekInYear",
    format: function(oField, oDate, bUTC, oFormat) {
      var oWeek = oDate.getUTCWeek(oFormat.oLocale, getCalendarWeekParameter(oFormat.oFormatOptions));
      var iWeek = oWeek.week;
      var sWeek = String(iWeek + 1);
      if (oField.digits < 3) {
        sWeek = sWeek.padStart(oField.digits, "0");
      } else {
        sWeek = oFormat.oLocaleData.getCalendarWeek(oField.digits === 3 ? "narrow" : "wide", sWeek.padStart(2, "0"));
      }
      return sWeek;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart, bPartInvalid, bValid, iWeek, iLength = 0;
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, 2);
        iLength = sPart.length;
        iWeek = parseInt(sPart) - 1;
        bPartInvalid = !sPart || oConfig.exactLength && iLength < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      } else {
        sPart = oFormat.oLocaleData.getCalendarWeek(oPart.digits === 3 ? "narrow" : "wide");
        sPart = sPart.replace("{0}", "([0-9]+)");
        var rWeekNumber = new RegExp(sPart), oResult = rWeekNumber.exec(sValue);
        if (oResult) {
          iLength = oResult[0].length;
          iWeek = parseInt(oResult[oResult.length - 1]) - 1;
        } else {
          bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
        }
      }
      return {
        length: iLength,
        valid: bValid,
        week: iWeek
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "W": DateFormat._createPatternSymbol({
    name: "weekInMonth"
  }),
  "D": DateFormat._createPatternSymbol({
    name: "dayInYear"
  }),
  "d": DateFormat._createPatternSymbol({
    name: "day",
    format: function(oField, oDate) {
      var iDate = oDate.getUTCDate();
      return String(iDate).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat), iDay = parseInt(sPart);
      if (oConfig.strict && (iDay > 31 || iDay < 1)) {
        bValid = false;
      }
      return {
        day: iDay,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "Q": DateFormat._createPatternSymbol({
    name: "quarter",
    format: function(oField, oDate, bUTC, oFormat) {
      var iQuarter = oDate.getUTCQuarter();
      if (oField.digits === 3) {
        return oFormat.aQuartersAbbrev[iQuarter];
      } else if (oField.digits === 4) {
        return oFormat.aQuartersWide[iQuarter];
      } else if (oField.digits > 4) {
        return oFormat.aQuartersNarrow[iQuarter];
      } else {
        return String(iQuarter + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart, bPartInvalid, iQuarter, bValid;
      var aQuartersVariants = [oFormat.aQuartersWide, oFormat.aQuartersWideSt, oFormat.aQuartersAbbrev, oFormat.aQuartersAbbrevSt, oFormat.aQuartersNarrow, oFormat.aQuartersNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iQuarter = parseInt(sPart) - 1;
        if (oConfig.strict && iQuarter > 3) {
          bValid = false;
        }
      } else {
        for (var i = 0; i < aQuartersVariants.length; i++) {
          var aVariants = aQuartersVariants[i];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              quarter: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        length: sPart ? sPart.length : 0,
        quarter: iQuarter,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "q": DateFormat._createPatternSymbol({
    name: "quarterStandalone",
    format: function(oField, oDate, bUTC, oFormat) {
      var iQuarter = oDate.getUTCQuarter();
      if (oField.digits === 3) {
        return oFormat.aQuartersAbbrevSt[iQuarter];
      } else if (oField.digits === 4) {
        return oFormat.aQuartersWideSt[iQuarter];
      } else if (oField.digits > 4) {
        return oFormat.aQuartersNarrowSt[iQuarter];
      } else {
        return String(iQuarter + 1).padStart(oField.digits, "0");
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart, bPartInvalid, iQuarter, bValid;
      var aQuartersVariants = [oFormat.aQuartersWide, oFormat.aQuartersWideSt, oFormat.aQuartersAbbrev, oFormat.aQuartersAbbrevSt, oFormat.aQuartersNarrow, oFormat.aQuartersNarrowSt];
      if (oPart.digits < 3) {
        sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2));
        bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2;
        bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
        iQuarter = parseInt(sPart) - 1;
        if (oConfig.strict && iQuarter > 3) {
          bValid = false;
        }
      } else {
        for (var i = 0; i < aQuartersVariants.length; i++) {
          var aVariants = aQuartersVariants[i];
          var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              quarter: oFound.index,
              length: oFound.length
            };
          }
        }
        bValid = oParseHelper.checkValid(oPart.type, true, oFormat);
      }
      return {
        length: sPart ? sPart.length : 0,
        quarter: iQuarter,
        valid: bValid
      };
    },
    isNumeric: function(iDigits) {
      return iDigits < 3;
    }
  }),
  "F": DateFormat._createPatternSymbol({
    name: "dayOfWeekInMonth"
  }),
  "E": DateFormat._createPatternSymbol({
    name: "dayNameInWeek",
    //Day of week name, format style.
    format: function(oField, oDate, bUTC, oFormat) {
      var iDay = oDate.getUTCDay();
      if (oField.digits < 4) {
        return oFormat.aDaysAbbrev[iDay];
      } else if (oField.digits === 4) {
        return oFormat.aDaysWide[iDay];
      } else if (oField.digits === 5) {
        return oFormat.aDaysNarrow[iDay];
      } else {
        return oFormat.aDaysShort[iDay];
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var aDaysVariants = [oFormat.aDaysWide, oFormat.aDaysWideSt, oFormat.aDaysAbbrev, oFormat.aDaysAbbrevSt, oFormat.aDaysShort, oFormat.aDaysShortSt, oFormat.aDaysNarrow, oFormat.aDaysNarrowSt];
      for (var i = 0; i < aDaysVariants.length; i++) {
        var aVariants = aDaysVariants[i];
        var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oFound.index !== -1) {
          return {
            // gets translated to dayOfWeek where the day of week is relative to the week
            dayOfWeek: oFound.index,
            length: oFound.length
          };
        }
      }
    }
  }),
  "c": DateFormat._createPatternSymbol({
    name: "dayNameInWeekStandalone",
    format: function(oField, oDate, bUTC, oFormat) {
      var iDay = oDate.getUTCDay();
      if (oField.digits < 4) {
        return oFormat.aDaysAbbrevSt[iDay];
      } else if (oField.digits === 4) {
        return oFormat.aDaysWideSt[iDay];
      } else if (oField.digits === 5) {
        return oFormat.aDaysNarrowSt[iDay];
      } else {
        return oFormat.aDaysShortSt[iDay];
      }
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var aDaysVariants = [oFormat.aDaysWide, oFormat.aDaysWideSt, oFormat.aDaysAbbrev, oFormat.aDaysAbbrevSt, oFormat.aDaysShort, oFormat.aDaysShortSt, oFormat.aDaysNarrow, oFormat.aDaysNarrowSt];
      for (var i = 0; i < aDaysVariants.length; i++) {
        var aVariants = aDaysVariants[i];
        var oFound = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oFound.index !== -1) {
          return {
            day: oFound.index,
            length: oFound.length
          };
        }
      }
    }
  }),
  // day number of week (depends on locale's first day of week)
  // e.g. Thursday
  // "de": 4 (firstDay: 1)
  // "en": 5 (firstDay: 0)
  // "ar": 6 (firstDay: 6)
  "u": DateFormat._createPatternSymbol({
    name: "dayNumberOfWeek",
    format: function(oField, oDate, bUTC, oFormat) {
      var iDay = oDate.getUTCDay();
      return oFormat._adaptDayOfWeek(iDay);
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, oPart.digits), bPartInvalid = oConfig.exactLength && sPart.length !== oPart.digits;
      return {
        dayNumberOfWeek: parseInt(sPart),
        length: sPart.length,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat)
      };
    },
    isNumeric: true
  }),
  "a": DateFormat._createPatternSymbol({
    name: "amPmMarker",
    /**
     * Formats the day period.
     *
     * @param {Object<string, any>} oField
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {number} oField.digits
     *   The number of repetitions of the pattern symbol, e.g. <code>3</code> for "aaa"
     * @param {string} oField.symbol
     *   The pattern symbol "a"
     * @param {string} oField.type
     *   The symbol name "amPmMarker"
     * @param {sap.ui.core.date.UniversalDate} oDate
     *   The date to format
     * @param {boolean} [bUTC]
     *   Whether the UTC option is set; not used
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @returns {string}
     *   The formatted day period, e.g. "AM" for symbol "a"
     */
    format: function(oField, oDate, bUTC, oFormat) {
      var iDayPeriod = oDate.getUTCDayPeriod();
      if (oField.digits <= 3) {
        return oFormat.aDayPeriodsAbbrev[iDayPeriod];
      } else if (oField.digits === 4) {
        return oFormat.aDayPeriodsWide[iDayPeriod];
      } else {
        return oFormat.aDayPeriodsNarrow[iDayPeriod];
      }
    },
    /**
     * Parses the day period from a given input string.
     *
     * @param {string} sValue
     *   The given input, e.g. "am 13:37"
     * @param {Object<string, any>} oPart
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {number} oPart.digits
     *   The number of repetitions of the pattern symbol, e.g. <code>3</code> for "aaa"
     * @param {string} oPart.symbol
     *   The pattern symbol "a"
     * @param {string} oPart.type
     *   The symbol name "amPmMarker"
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @param {Object<string, any>} [oConfig]
     *   The configuration object for parsing the value
     * @param {object[]} [oConfig.formatArray]
     *   The complete format array as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {object} [oConfig.dateValue]
     *   The already parsed date fields
     * @param {number} [oConfig.index]
     *   The index in the format array
     * @param {boolean} [oConfig.strict]
     *   Whether to use the strict option
     * @param {string} [sTimezone]
     *   The IANA timezone ID
     * @returns {{length : number, pm : boolean}|{}}
     *   An object with the <code>length</code> of the match and the parsed <code>pm</code>
     *   value; or an object with property valid <code>false</code> if it could not be
     *   parsed correctly
     */
    parse: function(sValue, oPart, oFormat, oConfig, sTimezone) {
      var rAMPM, bAMPMAlternativeCase, oEntry, i, aMatch, aVariants, aDayPeriodsVariants = [oFormat.aDayPeriodsWide, oFormat.aDayPeriodsAbbrev, oFormat.aDayPeriodsNarrow];
      rAMPM = /[aApP](?:\.)?[\x20\xA0]?[mM](?:\.)?/;
      aMatch = sValue.match(rAMPM);
      bAMPMAlternativeCase = aMatch && aMatch.index === 0;
      function removeSpacesAndDots(sValue2) {
        return sValue2.replace(/[\x20\xA0]/g, "").replace(/\./g, "");
      }
      if (bAMPMAlternativeCase) {
        sValue = removeSpacesAndDots(sValue);
      }
      for (i = 0; i < aDayPeriodsVariants.length; i += 1) {
        aVariants = aDayPeriodsVariants[i].map((sDayPeriod) => {
          return DateFormat._normalize(sDayPeriod);
        });
        if (bAMPMAlternativeCase) {
          aVariants = aVariants.map(removeSpacesAndDots);
        }
        oEntry = oParseHelper.findEntry(sValue, aVariants, oFormat.oLocaleData.sCLDRLocaleId);
        if (oEntry.index !== -1) {
          return {
            pm: oEntry.index === 1,
            // am/pm alternative may include an additional dot, e.g. "am."
            // therefore the length for the am/pm alternative is the length of the
            // match
            length: bAMPMAlternativeCase ? aMatch[0].length : oEntry.length
          };
        }
      }
      return {
        valid: false
      };
    }
  }),
  "B": DateFormat._createPatternSymbol({
    name: "flexibleDayPeriod",
    /**
     * Formats the flexible day period.
     *
     * @param {Object<string, any>} oField
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {int} oField.digits
     *   The number of repetitions of the pattern symbol, e.g. <code>3</code> for "BBB"
     * @param {sap.ui.core.date.UniversalDate} oDate
     *   The date object to format
     * @param {boolean} bUTC
     *   Whether the UTC option is set; not used
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @returns {string}
     *   The selected day period e.g. "in the afternoon" for the according style width
     *   "abbreviated", "narrow" or "wide"
     */
    format: function(oField, oDate, bUTC, oFormat) {
      var bContainsHour = oFormat.aFormatArray.some(function(oFormatElement) {
        return "hHKk".includes(oFormatElement.symbol);
      }), sFlexibleDayPeriod = oFormat.oLocaleData.getFlexibleDayPeriodOfTime(oDate.getUTCHours(), oDate.getUTCMinutes());
      if (bContainsHour) {
        if (oField.digits <= 3) {
          return oFormat.oFlexibleDayPeriodsAbbrev[sFlexibleDayPeriod];
        }
        if (oField.digits === 4) {
          return oFormat.oFlexibleDayPeriodsWide[sFlexibleDayPeriod];
        }
        return oFormat.oFlexibleDayPeriodsNarrow[sFlexibleDayPeriod];
      }
      if (oField.digits <= 3) {
        return oFormat.oFlexibleDayPeriodsAbbrevSt[sFlexibleDayPeriod];
      }
      if (oField.digits === 4) {
        return oFormat.oFlexibleDayPeriodsWideSt[sFlexibleDayPeriod];
      }
      return oFormat.oFlexibleDayPeriodsNarrowSt[sFlexibleDayPeriod];
    },
    /**
     * Parses the flexible day period from a given input string.
     *
     * @param {string} sValue
     *   The given input, e.g. "in the afternoon 01:37"
     * @param {Object<string, any>} oPart
     *   The date pattern field as parsed by {@link DateFormat#parseCldrDatePattern}
     * @param {sap.ui.core.format.DateFormat} oFormat
     *   The <code>DateFormat</code> instance
     * @param {object} oConfig
     *   The configuration object for parsing the value
     * @returns {{flexDayPeriod: string, length: number}|{valid: boolean}}
     *   An object with the parsed <code>flexDayPeriod</code> and the <code>length</code>
     *   value of the match; otherwise, an object with property <code>valid</code>
     *   <code>false</code> if it could not be parsed correctly or in case it is attempted
     *   to parse a string with a stand-alone format
     */
    parse: function(sValue, oPart, oFormat, oConfig) {
      var i, oFound, oVariant, bContainsHour = oFormat.aFormatArray.some(function(oFormatElement) {
        return "hHKk".includes(oFormatElement.symbol);
      }), aFlexibleDayPeriodVariants = [oFormat.oFlexibleDayPeriodsWide, oFormat.oFlexibleDayPeriodsAbbrev, oFormat.oFlexibleDayPeriodsNarrow];
      if (bContainsHour) {
        for (i = 0; i < aFlexibleDayPeriodVariants.length; i++) {
          oVariant = aFlexibleDayPeriodVariants[i];
          oFound = oParseHelper.findEntry(sValue, Object.values(oVariant), oFormat.oLocaleData.sCLDRLocaleId);
          if (oFound.index !== -1) {
            return {
              flexDayPeriod: Object.keys(oVariant)[oFound.index],
              length: oFound.length
            };
          }
        }
      }
      return {
        valid: false
      };
    }
  }),
  "H": DateFormat._createPatternSymbol({
    name: "hour0_23",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      return String(iHours).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iHours > 23) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "k": DateFormat._createPatternSymbol({
    name: "hour1_24",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      var sHours = iHours === 0 ? "24" : String(iHours);
      return sHours.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (iHours === 24) {
        iHours = 0;
      }
      if (oConfig.strict && iHours > 23) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "K": DateFormat._createPatternSymbol({
    name: "hour0_11",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      var sHours = String(iHours > 11 ? iHours - 12 : iHours);
      return sHours.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iHours > 11) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "h": DateFormat._createPatternSymbol({
    name: "hour1_12",
    format: function(oField, oDate) {
      var iHours = oDate.getUTCHours();
      var sHours;
      if (iHours > 12) {
        sHours = String(iHours - 12);
      } else if (iHours === 0) {
        sHours = "12";
      } else {
        sHours = String(iHours);
      }
      return sHours.padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var bPM = oConfig.dateValue.pm, sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iHours = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (iHours === 12) {
        iHours = 0;
        bPM = bPM === void 0 ? true : bPM;
      }
      if (oConfig.strict && iHours > 11) {
        bValid = false;
      }
      return {
        hour: iHours,
        length: sPart.length,
        pm: bPM,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "m": DateFormat._createPatternSymbol({
    name: "minute",
    format: function(oField, oDate) {
      var iMinutes = oDate.getUTCMinutes();
      return String(iMinutes).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, Math.max(oPart.digits, 2)), iMinutes = parseInt(sPart), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < 2, bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iMinutes > 59) {
        bValid = false;
      }
      return {
        length: sPart.length,
        minute: iMinutes,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "s": DateFormat._createPatternSymbol({
    name: "second",
    format: function(oField, oDate) {
      var iSeconds = oDate.getUTCSeconds();
      return String(iSeconds).padStart(oField.digits, "0");
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iExpectedDigits = Math.max(oPart.digits, 2), sPart = oParseHelper.findNumbers(sValue, iExpectedDigits), bPartInvalid = sPart === "" || oConfig.exactLength && sPart.length < iExpectedDigits, iSeconds = parseInt(sPart), bValid = oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat);
      if (oConfig.strict && iSeconds > 59) {
        bValid = false;
      }
      return {
        length: sPart.length,
        second: iSeconds,
        valid: bValid
      };
    },
    isNumeric: true
  }),
  "S": DateFormat._createPatternSymbol({
    name: "fractionalsecond",
    format: function(oField, oDate) {
      var iMilliseconds = oDate.getUTCMilliseconds();
      var sMilliseconds = String(iMilliseconds);
      var sFractionalseconds = sMilliseconds.padStart(3, "0");
      sFractionalseconds = sFractionalseconds.substr(0, oField.digits);
      sFractionalseconds = sFractionalseconds.padEnd(oField.digits, "0");
      return sFractionalseconds;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var sPart = oParseHelper.findNumbers(sValue, oPart.digits), iLength = sPart.length, bPartInvalid = oConfig.exactLength && iLength < oPart.digits;
      sPart = sPart.substr(0, 3);
      sPart = sPart.padEnd(3, "0");
      var iMilliseconds = parseInt(sPart);
      return {
        length: iLength,
        millisecond: iMilliseconds,
        valid: oParseHelper.checkValid(oPart.type, bPartInvalid, oFormat)
      };
    },
    isNumeric: true
  }),
  "z": DateFormat._createPatternSymbol({
    name: "timezoneGeneral",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      if (oField.digits > 3 && oDate.getTimezoneLong && oDate.getTimezoneLong()) {
        return oDate.getTimezoneLong();
      } else if (oDate.getTimezoneShort && oDate.getTimezoneShort()) {
        return oDate.getTimezoneShort();
      }
      var iTimezoneOffset = TimezoneUtil_default.calculateOffset(oDate, sTimezone);
      var sTimeZone = "GMT";
      var iTZOffset = Math.abs(iTimezoneOffset / 60);
      var bPositiveOffset = iTimezoneOffset > 0;
      var iHourOffset = Math.floor(iTZOffset / 60);
      var iMinuteOffset = Math.floor(iTZOffset % 60);
      if (!bUTC && iTZOffset !== 0) {
        sTimeZone += bPositiveOffset ? "-" : "+";
        sTimeZone += String(iHourOffset).padStart(2, "0");
        sTimeZone += ":";
        sTimeZone += String(iMinuteOffset).padStart(2, "0");
      } else {
        sTimeZone += "Z";
      }
      return sTimeZone;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      var iLength = 0;
      var iTZDiff;
      var oTZ = sValue.substring(0, 3);
      if (oTZ === "GMT" || oTZ === "UTC") {
        iLength = 3;
      } else if (sValue.substring(0, 2) === "UT") {
        iLength = 2;
      } else if (sValue.charAt(0) === "Z") {
        iLength = 1;
        iTZDiff = 0;
      } else {
        return {
          error: "cannot be parsed correctly by sap.ui.core.format.DateFormat: The given timezone is not supported!"
        };
      }
      if (sValue.charAt(0) !== "Z") {
        var oParsedTZ = oParseHelper.parseTZ(sValue.substr(iLength), true);
        iLength += oParsedTZ.length;
        iTZDiff = oParsedTZ.tzDiff;
      }
      return {
        length: iLength,
        tzDiff: iTZDiff
      };
    }
  }),
  "Z": DateFormat._createPatternSymbol({
    name: "timezoneRFC822",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      var iTimezoneOffset = TimezoneUtil_default.calculateOffset(oDate, sTimezone);
      var iTZOffset = Math.abs(iTimezoneOffset / 60);
      var bPositiveOffset = iTimezoneOffset > 0;
      var iHourOffset = Math.floor(iTZOffset / 60);
      var iMinuteOffset = Math.floor(iTZOffset % 60);
      var sTimeZone = "";
      if (!bUTC) {
        sTimeZone += bPositiveOffset ? "-" : "+";
        sTimeZone += String(iHourOffset).padStart(2, "0");
        sTimeZone += String(iMinuteOffset).padStart(2, "0");
      }
      return sTimeZone;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      return oParseHelper.parseTZ(sValue, false);
    }
  }),
  "X": DateFormat._createPatternSymbol({
    name: "timezoneISO8601",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      var iTimezoneOffset = TimezoneUtil_default.calculateOffset(oDate, sTimezone);
      var iTZOffset = Math.abs(iTimezoneOffset / 60);
      var bPositiveOffset = iTimezoneOffset > 0;
      var iHourOffset = Math.floor(iTZOffset / 60);
      var iMinuteOffset = Math.floor(iTZOffset % 60);
      var sTimeZone = "";
      if (!bUTC && iTZOffset !== 0) {
        sTimeZone += bPositiveOffset ? "-" : "+";
        sTimeZone += String(iHourOffset).padStart(2, "0");
        if (oField.digits > 1 || iMinuteOffset > 0) {
          if (oField.digits === 3 || oField.digits === 5) {
            sTimeZone += ":";
          }
          sTimeZone += String(iMinuteOffset).padStart(2, "0");
        }
      } else {
        sTimeZone += "Z";
      }
      return sTimeZone;
    },
    parse: function(sValue, oPart, oFormat, oConfig) {
      if (sValue.charAt(0) === "Z") {
        return {
          length: 1,
          tzDiff: 0
        };
      } else {
        return oParseHelper.parseTZ(sValue, oPart.digits === 3 || oPart.digits === 5);
      }
    }
  }),
  "V": DateFormat._createPatternSymbol({
    name: "timezoneID",
    format: function(oField, oDate, bUTC, oFormat, sTimezone) {
      if (!bUTC && oField.digits === 2) {
        return oFormat.oLocaleData.getTimezoneTranslations()[sTimezone] || sTimezone;
      }
      return "";
    },
    parse: function(sValue, oPart, oFormat, oConfig, sTimezone) {
      var oTimezoneParsed = {
        timezone: "",
        length: 0
      };
      if (oPart.digits === 2) {
        var mTimezoneTranslations = oFormat.oLocaleData.getTimezoneTranslations();
        if (sValue === mTimezoneTranslations[sTimezone]) {
          return {
            timezone: sTimezone,
            length: sValue.length
          };
        }
        var aTimezoneTranslations = Object.values(mTimezoneTranslations);
        var oTimezoneResult = oParseHelper.findEntry(sValue, aTimezoneTranslations, oFormat.oLocaleData.sCLDRLocaleId);
        if (oTimezoneResult.index !== -1) {
          return {
            timezone: Object.keys(mTimezoneTranslations)[oTimezoneResult.index],
            length: oTimezoneResult.length
          };
        }
        var sCurrentValue = "";
        for (var i = sValue.length; i > 0; i -= 1) {
          sCurrentValue = sValue.slice(0, i);
          if (TimezoneUtil_default.isValidTimezone(sCurrentValue)) {
            oTimezoneParsed.timezone = sCurrentValue;
            oTimezoneParsed.length = sCurrentValue.length;
            break;
          }
        }
      }
      return oTimezoneParsed;
    }
  })
};
DateFormat.prototype._format = function(oJSDate, bUTC, sTimezone) {
  if (this.oFormatOptions.relative) {
    var sRes = this.formatRelative(oJSDate, bUTC, this.oFormatOptions.relativeRange, sTimezone);
    if (sRes) {
      return sRes;
    }
  }
  var sCalendarType = this.oFormatOptions.calendarType;
  var oDate = UniversalDate_default.getInstance(oJSDate, sCalendarType);
  var aBuffer = [], oPart, sResult, sSymbol;
  for (var i = 0; i < this.aFormatArray.length; i++) {
    oPart = this.aFormatArray[i];
    sSymbol = oPart.symbol || "";
    aBuffer.push(this.oSymbols[sSymbol].format(oPart, oDate, bUTC, this, sTimezone));
  }
  sResult = aBuffer.join("");
  if (Supportability_default.collectOriginInfo()) {
    sResult = new String(sResult);
    sResult.originInfo = {
      source: "Common Locale Data Repository",
      locale: this.oLocale.toString(),
      style: this.oFormatOptions.style,
      pattern: this.oFormatOptions.pattern
    };
  }
  return sResult;
};
DateFormat.prototype.format = function(vJSDate, bUTC) {
  var sTimezone;
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    sTimezone = bUTC;
    bUTC = false;
    checkTimezoneParameterType(sTimezone);
    if (sTimezone && !TimezoneUtil_default.isValidTimezone(sTimezone)) {
      Log_default.error("The given timezone isn't valid.");
      return "";
    }
  }
  var sCalendarType = this.oFormatOptions.calendarType, sResult;
  if (bUTC === void 0) {
    bUTC = this.oFormatOptions.UTC;
  }
  sTimezone = sTimezone || Configuration_default.getTimezone();
  if (Array.isArray(vJSDate)) {
    if (!this.oFormatOptions.interval) {
      Log_default.error("Non-interval DateFormat can't format more than one date instance.");
      return "";
    }
    if (vJSDate.length !== 2) {
      Log_default.error("Interval DateFormat can only format with 2 date instances but " + vJSDate.length + " is given.");
      return "";
    }
    vJSDate = vJSDate.map(function(oJSDate) {
      return convertToTimezone(oJSDate, sTimezone, bUTC);
    });
    if (this.oFormatOptions.singleIntervalValue) {
      if (vJSDate[0] === null) {
        Log_default.error("First date instance which is passed to the interval DateFormat shouldn't be null.");
        return "";
      }
      if (vJSDate[1] === null) {
        sResult = this._format(vJSDate[0], bUTC, sTimezone);
      }
    }
    if (sResult === void 0) {
      if (!vJSDate.every(isValidDateObject)) {
        Log_default.error("At least one date instance which is passed to the interval DateFormat isn't valid.");
        return "";
      }
      sResult = this._formatInterval(vJSDate, bUTC);
    }
  } else {
    if (!isValidDateObject(vJSDate)) {
      if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE && this.oFormatOptions.pattern.includes("VV")) {
        return this.oLocaleData.getTimezoneTranslations()[sTimezone] || sTimezone;
      }
      Log_default.error("The given date instance isn't valid.");
      return "";
    }
    if (this.oFormatOptions.interval) {
      Log_default.error("Interval DateFormat expects an array with two dates for the first argument but only one date is given.");
      return "";
    }
    vJSDate = convertToTimezone(vJSDate, sTimezone, bUTC);
    sResult = this._format(vJSDate, bUTC, sTimezone);
  }
  if (sCalendarType === CalendarType_default2.Japanese && this.oLocale.getLanguage() === "ja") {
    sResult = sResult.replace(/(^|[^\d])1年/g, "$1元年");
  }
  return sResult;
};
DateFormat.prototype._useCustomIntervalDelimiter = function(oDiffFields) {
  var aTokens;
  if (!this.oFormatOptions.intervalDelimiter) {
    return false;
  }
  if (this.oFormatOptions.format) {
    aTokens = this.oLocaleData._parseSkeletonFormat(this.oFormatOptions.format);
    return aTokens.some(function(oToken) {
      return oDiffFields[oToken.group];
    });
  }
  return true;
};
DateFormat.prototype._formatInterval = function(aJSDates, bUTC) {
  var oDate, oPart, sPattern, sSymbol, aBuffer = [], sCalendarType = this.oFormatOptions.calendarType, aFormatArray = [], oFromDate = UniversalDate_default.getInstance(aJSDates[0], sCalendarType), oToDate = UniversalDate_default.getInstance(aJSDates[1], sCalendarType), oDiffFields = this._getDiffFields([oFromDate, oToDate]);
  if (!oDiffFields) {
    return this._format(aJSDates[0], bUTC);
  }
  if (this._useCustomIntervalDelimiter(oDiffFields)) {
    sPattern = this.intervalPatterns[0];
  } else if (this.oFormatOptions.format) {
    sPattern = this.oLocaleData.getCustomIntervalPattern(this.oFormatOptions.format, oDiffFields, sCalendarType);
  } else {
    sPattern = this.oLocaleData.getCombinedIntervalPattern(this.oFormatOptions.pattern, sCalendarType);
  }
  aFormatArray = this.parseCldrDatePattern(sPattern);
  oDate = oFromDate;
  for (var i = 0; i < aFormatArray.length; i++) {
    oPart = aFormatArray[i];
    sSymbol = oPart.symbol || "";
    if (oPart.repeat) {
      oDate = oToDate;
    }
    aBuffer.push(this.oSymbols[sSymbol].format(oPart, oDate, bUTC, this));
  }
  return aBuffer.join("");
};
var mFieldToGroup = {
  Era: "Era",
  FullYear: "Year",
  Quarter: "Quarter",
  Month: "Month",
  Week: "Week",
  Date: "Day",
  DayPeriod: "DayPeriod",
  Hours: "Hour",
  Minutes: "Minute",
  Seconds: "Second"
};
DateFormat.prototype._getDiffFields = function(aDates) {
  var bDiffFound = false, mDiff = {};
  this.aIntervalCompareFields.forEach(function(sField) {
    var sGetterPrefix = "getUTC", sMethodName = sGetterPrefix + sField, sFieldGroup = mFieldToGroup[sField], vFromValue = aDates[0][sMethodName].apply(aDates[0]), vToValue = aDates[1][sMethodName].apply(aDates[1]);
    if (!deepEqual_default(vFromValue, vToValue)) {
      bDiffFound = true;
      mDiff[sFieldGroup] = true;
    }
  });
  if (bDiffFound) {
    return mDiff;
  }
  return null;
};
DateFormat.prototype._parse = function(sValue, aFormatArray, bUTC, bStrict, sTimezone) {
  var sFlexibleDayPeriod, oNextPart, oPart, bPM, oPrevPart, oResult, sSubValue, oDateValue = {
    valid: true,
    lastTimezonePatternSymbol: ""
  }, iIndex = 0, oParseConf = {
    formatArray: aFormatArray,
    dateValue: oDateValue,
    strict: bStrict
  }, that = this;
  function getSymbol(oPart0) {
    return that.oSymbols[oPart0.symbol || ""];
  }
  function isNumeric(oPart0) {
    return !!oPart0 && getSymbol(oPart0).isNumeric(oPart0.digits);
  }
  for (var i = 0; i < aFormatArray.length; i++) {
    sSubValue = sValue.substr(iIndex);
    oPart = aFormatArray[i];
    oPrevPart = aFormatArray[i - 1];
    oNextPart = aFormatArray[i + 1];
    oParseConf.index = i;
    oParseConf.exactLength = isNumeric(oPart) && (isNumeric(oPrevPart) || isNumeric(oNextPart));
    oResult = getSymbol(oPart).parse(sSubValue, oPart, this, oParseConf, sTimezone) || {};
    if (oResult.tzDiff !== void 0 || oResult.timezone) {
      oResult.lastTimezonePatternSymbol = oPart.symbol;
    }
    oDateValue = extend_default(oDateValue, oResult);
    if (oResult.valid === false) {
      break;
    }
    iIndex += oResult.length || 0;
  }
  oDateValue.index = iIndex;
  bPM = oDateValue.pm;
  if (oDateValue.flexDayPeriod && oDateValue.hour * 60 + (oDateValue.minute || 0) < 720) {
    sFlexibleDayPeriod = this.oLocaleData.getFlexibleDayPeriodOfTime(oDateValue.hour + 12, oDateValue.minute || 0);
    bPM = oDateValue.flexDayPeriod === sFlexibleDayPeriod;
  }
  if (bPM) {
    oDateValue.hour += 12;
  }
  if (oDateValue.dayNumberOfWeek === void 0 && oDateValue.dayOfWeek !== void 0) {
    oDateValue.dayNumberOfWeek = this._adaptDayOfWeek(oDateValue.dayOfWeek);
  }
  if (oDateValue.quarter !== void 0 && oDateValue.month === void 0 && oDateValue.day === void 0) {
    oDateValue.month = 3 * oDateValue.quarter;
    oDateValue.day = 1;
  }
  return oDateValue;
};
DateFormat.prototype._parseInterval = function(sValue, sCalendarType, bUTC, bStrict, sTimezone) {
  var aDateValues, iRepeat, oDateValue;
  this.intervalPatterns.some((function(sPattern) {
    var aFormatArray = this.parseCldrDatePattern(sPattern);
    iRepeat = void 0;
    for (var i = 0; i < aFormatArray.length; i++) {
      if (aFormatArray[i].repeat) {
        iRepeat = i;
        break;
      }
    }
    if (iRepeat === void 0) {
      oDateValue = this._parse(sValue, aFormatArray, bUTC, bStrict, sTimezone);
      if (oDateValue.index === 0 || oDateValue.index < sValue.length) {
        oDateValue.valid = false;
      }
      if (oDateValue.valid === false) {
        return;
      }
      aDateValues = [oDateValue, oDateValue];
      return true;
    } else {
      aDateValues = [];
      oDateValue = this._parse(sValue, aFormatArray.slice(0, iRepeat), bUTC, bStrict, sTimezone);
      if (oDateValue.valid === false) {
        return;
      }
      aDateValues.push(oDateValue);
      var iLength = oDateValue.index;
      oDateValue = this._parse(sValue.substring(iLength), aFormatArray.slice(iRepeat), bUTC, bStrict, sTimezone);
      if (oDateValue.index === 0 || oDateValue.index + iLength < sValue.length) {
        oDateValue.valid = false;
      }
      if (oDateValue.valid === false) {
        return;
      }
      aDateValues.push(oDateValue);
      return true;
    }
  }).bind(this));
  return aDateValues;
};
function getCalendarWeekParameter(oFormatOptions) {
  if (oFormatOptions.calendarWeekNumbering) {
    return oFormatOptions.calendarWeekNumbering;
  } else if (oFormatOptions.firstDayOfWeek !== void 0 && oFormatOptions.minimalDaysInFirstWeek !== void 0) {
    return {
      firstDayOfWeek: oFormatOptions.firstDayOfWeek,
      minimalDaysInFirstWeek: oFormatOptions.minimalDaysInFirstWeek
    };
  }
  return void 0;
}
var convertToTimezone = function(oJSDate, sTimezone, bUTC) {
  if (!bUTC && isValidDateObject(oJSDate)) {
    return TimezoneUtil_default.convertToTimezone(oJSDate, sTimezone);
  }
  return oJSDate;
};
var fnCreateDate = function(oDateValue, sCalendarType, bUTC, bStrict, sTimezone, oFormatOptions, oLocale) {
  if (!oDateValue.valid) {
    return null;
  }
  var oDate, iYear = typeof oDateValue.year === "number" ? oDateValue.year : 1970;
  oDate = UniversalDate_default.getInstance(/* @__PURE__ */ new Date(0), sCalendarType);
  oDate.setUTCEra(oDateValue.era || UniversalDate_default.getCurrentEra(sCalendarType));
  oDate.setUTCFullYear(iYear);
  oDate.setUTCMonth(oDateValue.month || 0);
  oDate.setUTCDate(oDateValue.day || 1);
  oDate.setUTCHours(oDateValue.hour || 0);
  oDate.setUTCMinutes(oDateValue.minute || 0);
  oDate.setUTCSeconds(oDateValue.second || 0);
  oDate.setUTCMilliseconds(oDateValue.millisecond || 0);
  if (bStrict && (oDateValue.day || 1) !== oDate.getUTCDate()) {
    return null;
  }
  if (oDateValue.week !== void 0 && (oDateValue.month === void 0 || oDateValue.day === void 0)) {
    oDate.setUTCWeek({
      year: oDateValue.weekYear || oDateValue.year,
      week: oDateValue.week
    }, oLocale, getCalendarWeekParameter(oFormatOptions));
    if (oDateValue.dayNumberOfWeek !== void 0) {
      oDate.setUTCDate(oDate.getUTCDate() + oDateValue.dayNumberOfWeek - 1);
    }
  }
  oDate = oDate.getJSDate();
  if (!bUTC && (oDateValue.lastTimezonePatternSymbol === "V" && oDateValue.timezone || oDateValue.tzDiff === void 0)) {
    if (oDateValue.timezone) {
      sTimezone = oDateValue.timezone;
    }
    if (sTimezone) {
      oDateValue.tzDiff = TimezoneUtil_default.calculateOffset(oDate, sTimezone);
    }
  }
  if (oDateValue.tzDiff) {
    oDate.setUTCSeconds(oDate.getUTCSeconds() + oDateValue.tzDiff);
  }
  return oDate;
};
function mergeWithoutOverwrite(object1, object2) {
  if (object1 === object2) {
    return object1;
  }
  var oMergedObject = {};
  Object.keys(object1).forEach(function(sKey) {
    oMergedObject[sKey] = object1[sKey];
  });
  Object.keys(object2).forEach(function(sKey) {
    if (!oMergedObject.hasOwnProperty(sKey)) {
      oMergedObject[sKey] = object2[sKey];
    }
  });
  return oMergedObject;
}
function isValidDateRange(oStartDate, oEndDate) {
  if (oStartDate.getTime() > oEndDate.getTime()) {
    return false;
  }
  return true;
}
function isValidDateObject(oDate) {
  return oDate && typeof oDate.getTime === "function" && !isNaN(oDate.getTime());
}
DateFormat.prototype.parse = function(sValue, bUTC, bStrict) {
  var bShowDate = this.oFormatOptions.showDate === void 0 || this.oFormatOptions.showDate;
  var bShowTime = this.oFormatOptions.showTime === void 0 || this.oFormatOptions.showTime;
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE && (bShowDate && !bShowTime || !bShowDate && bShowTime)) {
    throw new TypeError("The input can only be parsed back to date if both date and time are supplied.");
  }
  var sTimezone;
  if (bUTC === void 0 && this.type !== mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    bUTC = this.oFormatOptions.UTC;
  }
  var bUTCInputParameter = bUTC;
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    sTimezone = bUTC;
    bUTC = false;
    checkTimezoneParameterType(sTimezone);
    if (sTimezone && !TimezoneUtil_default.isValidTimezone(sTimezone)) {
      Log_default.error("The given timezone isn't valid.");
      return null;
    }
  }
  sValue = sValue == null ? "" : String(sValue).trim();
  sValue = DateFormat._normalize(sValue);
  var oDateValue;
  var sCalendarType = this.oFormatOptions.calendarType;
  sTimezone = sTimezone || Configuration_default.getTimezone();
  if (bStrict === void 0) {
    bStrict = this.oFormatOptions.strictParsing;
  }
  if (sCalendarType === CalendarType_default2.Japanese && this.oLocale.getLanguage() === "ja") {
    sValue = sValue.replace(/元年/g, "1年");
  }
  if (!this.oFormatOptions.interval) {
    var oJSDate = this.parseRelative(sValue, bUTC);
    if (oJSDate) {
      return oJSDate;
    }
    oDateValue = this._parse(sValue, this.aFormatArray, bUTC, bStrict, sTimezone);
    if (oDateValue.index === 0 || oDateValue.index < sValue.length) {
      oDateValue.valid = false;
    }
    oJSDate = fnCreateDate(oDateValue, sCalendarType, bUTC, bStrict, sTimezone, this.oFormatOptions, this.oLocale);
    if (oJSDate) {
      if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
        var bShowTimezone = this.oFormatOptions.showTimezone === void 0 || this.oFormatOptions.showTimezone;
        if (!bShowTimezone && bShowDate && bShowTime) {
          return [oJSDate, void 0];
        } else if (bShowTimezone && !bShowDate && !bShowTime) {
          return [void 0, oDateValue.timezone];
        }
        return [oJSDate, oDateValue.timezone || void 0];
      }
      return oJSDate;
    }
  } else {
    var aDateValues = this._parseInterval(sValue, sCalendarType, bUTC, bStrict, sTimezone);
    var oJSDate1, oJSDate2;
    if (aDateValues && aDateValues.length === 2) {
      var oDateValue1 = mergeWithoutOverwrite(aDateValues[0], aDateValues[1]);
      var oDateValue2 = mergeWithoutOverwrite(aDateValues[1], aDateValues[0]);
      oJSDate1 = fnCreateDate(oDateValue1, sCalendarType, bUTC, bStrict, sTimezone, this.oFormatOptions, this.oLocale);
      oJSDate2 = fnCreateDate(oDateValue2, sCalendarType, bUTC, bStrict, sTimezone, this.oFormatOptions, this.oLocale);
      if (oJSDate1 && oJSDate2) {
        if (this.oFormatOptions.singleIntervalValue && oJSDate1.getTime() === oJSDate2.getTime()) {
          return [oJSDate1, null];
        }
        var bValid = isValidDateRange(oJSDate1, oJSDate2);
        if (bStrict && !bValid) {
          Log_default.error("StrictParsing: Invalid date range. The given end date is before the start date.");
          return [null, null];
        }
        return [oJSDate1, oJSDate2];
      }
    }
  }
  if (this.aFallbackFormats) {
    var vDate;
    this.aFallbackFormats.every(function(oFallbackFormat) {
      vDate = oFallbackFormat.parse(sValue, bUTCInputParameter, bStrict);
      if (Array.isArray(vDate)) {
        if (oFallbackFormat.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
          return false;
        }
        return !(vDate[0] && vDate[1]);
      } else {
        return !vDate;
      }
    });
    return vDate;
  }
  if (!this.oFormatOptions.interval) {
    return null;
  } else {
    return [null, null];
  }
};
DateFormat.prototype.parseCldrDatePattern = function(sPattern) {
  if (mCldrDatePattern[sPattern]) {
    return mCldrDatePattern[sPattern];
  }
  var aFormatArray = [], i, bQuoted = false, oCurrentObject = null, sState = "", sNewState = "", mAppeared = {}, bIntervalStartFound = false;
  for (i = 0; i < sPattern.length; i++) {
    var sCurChar = sPattern.charAt(i), sNextChar, sPrevChar, sPrevPrevChar;
    if (bQuoted) {
      if (sCurChar === "'") {
        sPrevChar = sPattern.charAt(i - 1);
        sPrevPrevChar = sPattern.charAt(i - 2);
        sNextChar = sPattern.charAt(i + 1);
        if (sPrevChar === "'" && sPrevPrevChar !== "'") {
          bQuoted = false;
        } else if (sNextChar === "'") {
          i += 1;
        } else {
          bQuoted = false;
          continue;
        }
      }
      if (sState === "text") {
        oCurrentObject.value += sCurChar;
      } else {
        oCurrentObject = {
          type: "text",
          value: sCurChar
        };
        aFormatArray.push(oCurrentObject);
        sState = "text";
      }
    } else {
      if (sCurChar === "'") {
        bQuoted = true;
      } else if (this.oSymbols[sCurChar]) {
        sNewState = this.oSymbols[sCurChar].name;
        if (sState === sNewState) {
          oCurrentObject.digits++;
        } else {
          oCurrentObject = {
            type: sNewState,
            symbol: sCurChar,
            digits: 1
          };
          aFormatArray.push(oCurrentObject);
          sState = sNewState;
          if (!bIntervalStartFound) {
            if (mAppeared[sNewState]) {
              oCurrentObject.repeat = true;
              bIntervalStartFound = true;
            } else {
              mAppeared[sNewState] = true;
            }
          }
        }
      } else {
        if (sState === "text") {
          oCurrentObject.value += sCurChar;
        } else {
          oCurrentObject = {
            type: "text",
            value: sCurChar
          };
          aFormatArray.push(oCurrentObject);
          sState = "text";
        }
      }
    }
  }
  mCldrDatePattern[sPattern] = aFormatArray;
  return aFormatArray;
};
DateFormat.prototype.parseRelative = function(sValue, bUTC) {
  var aPatterns, oEntry, rPattern, oResult, iValue;
  if (!sValue) {
    return null;
  }
  aPatterns = this.oLocaleData.getRelativePatterns(this.aRelativeParseScales, this.oFormatOptions.relativeStyle);
  for (var i = 0; i < aPatterns.length; i++) {
    oEntry = aPatterns[i];
    rPattern = new RegExp("^\\s*" + oEntry.pattern.replace(/\{0\}/, "(\\d+)") + "\\s*$", "i");
    oResult = rPattern.exec(sValue);
    if (oResult) {
      if (oEntry.value !== void 0) {
        return computeRelativeDate(oEntry.value, oEntry.scale);
      } else {
        iValue = parseInt(oResult[1]);
        return computeRelativeDate(iValue * oEntry.sign, oEntry.scale);
      }
    }
  }
  function computeRelativeDate(iDiff, sScale) {
    var oResult2 = UI5Date_default.getInstance();
    if (bUTC) {
      oResult2.setUTCFullYear(oResult2.getFullYear(), oResult2.getMonth(), oResult2.getDate());
      oResult2.setUTCHours(oResult2.getHours(), oResult2.getMinutes(), oResult2.getSeconds(), oResult2.getMilliseconds());
      switch (sScale) {
        case "second":
          oResult2.setUTCSeconds(oResult2.getUTCSeconds() + iDiff);
          break;
        case "minute":
          oResult2.setUTCMinutes(oResult2.getUTCMinutes() + iDiff);
          break;
        case "hour":
          oResult2.setUTCHours(oResult2.getUTCHours() + iDiff);
          break;
        case "day":
          oResult2.setUTCDate(oResult2.getUTCDate() + iDiff);
          break;
        case "week":
          oResult2.setUTCDate(oResult2.getUTCDate() + iDiff * 7);
          break;
        case "month":
          oResult2.setUTCMonth(oResult2.getUTCMonth() + iDiff);
          break;
        case "quarter":
          oResult2.setUTCMonth(oResult2.getUTCMonth() + iDiff * 3);
          break;
        case "year":
          oResult2.setUTCFullYear(oResult2.getUTCFullYear() + iDiff);
          break;
      }
    } else {
      switch (sScale) {
        case "second":
          oResult2.setSeconds(oResult2.getSeconds() + iDiff);
          break;
        case "minute":
          oResult2.setMinutes(oResult2.getMinutes() + iDiff);
          break;
        case "hour":
          oResult2.setHours(oResult2.getHours() + iDiff);
          break;
        case "day":
          oResult2.setDate(oResult2.getDate() + iDiff);
          break;
        case "week":
          oResult2.setDate(oResult2.getDate() + iDiff * 7);
          break;
        case "month":
          oResult2.setMonth(oResult2.getMonth() + iDiff);
          break;
        case "quarter":
          oResult2.setMonth(oResult2.getMonth() + iDiff * 3);
          break;
        case "year":
          oResult2.setFullYear(oResult2.getFullYear() + iDiff);
          break;
      }
    }
    return oResult2;
  }
};
DateFormat.prototype.formatRelative = function(oJSDate, bUTC, aRange, sTimezone) {
  var oDateUTC, iDiff, iDiffSeconds, sPattern, oToday = convertToTimezone(/* @__PURE__ */ new Date(), sTimezone), sScale = this.oFormatOptions.relativeScale || "day";
  iDiffSeconds = (oJSDate.getTime() - oToday.getTime()) / 1e3;
  if (this.oFormatOptions.relativeScale === "auto") {
    sScale = this._getScale(iDiffSeconds, this.aRelativeScales);
    sScale = fixScaleForMonths(oJSDate, oToday, sScale, iDiffSeconds);
  }
  if (!aRange) {
    aRange = this._mRanges[sScale];
  }
  if (sScale === "year" || sScale === "month" || sScale === "day") {
    oToday = new Date(Date.UTC(oToday.getUTCFullYear(), oToday.getUTCMonth(), oToday.getUTCDate()));
    oDateUTC = /* @__PURE__ */ new Date(0);
    oDateUTC.setUTCFullYear(oJSDate.getUTCFullYear(), oJSDate.getUTCMonth(), oJSDate.getUTCDate());
    oJSDate = oDateUTC;
  }
  iDiff = this._getDifference(sScale, [oToday, oJSDate]);
  if (this.oFormatOptions.relativeScale !== "auto" && (iDiff < aRange[0] || iDiff > aRange[1])) {
    return null;
  }
  sPattern = this.oLocaleData.getRelativePattern(sScale, iDiff, iDiffSeconds > 0, this.oFormatOptions.relativeStyle);
  return formatMessage_default(sPattern, [Math.abs(iDiff)]);
};
DateFormat.prototype._mRanges = {
  second: [-60, 60],
  minute: [-60, 60],
  hour: [-24, 24],
  day: [-6, 6],
  week: [-4, 4],
  month: [-12, 12],
  year: [-10, 10]
};
DateFormat.prototype._mScales = {
  second: 1,
  // 1
  minute: 60,
  // 60
  hour: 3600,
  // 60*60
  day: 86400,
  // 60*60*24         1 day
  week: 604800,
  // 60*60*24*7       7 days
  month: 2592e3,
  // 60*60*24*30      30 days
  quarter: 7776e3,
  // 60*60*24*30*3    90 days
  year: 31536e3
  // 60*60*24*365     365 days
};
DateFormat.prototype._getScale = function(iDiffSeconds, aScales) {
  var sScale, sTestScale;
  iDiffSeconds = Math.abs(iDiffSeconds);
  for (var i = 0; i < aScales.length; i++) {
    sTestScale = aScales[i];
    if (iDiffSeconds >= this._mScales[sTestScale]) {
      sScale = sTestScale;
      break;
    }
  }
  if (!sScale) {
    sScale = aScales[aScales.length - 1];
  }
  return sScale;
};
function fixScaleForMonths(oJSDate, oToday, sScale, iDiffSeconds) {
  var iMonthDiff = Math.abs(oJSDate.getUTCMonth() - oToday.getUTCMonth());
  if (sScale === "week" && iMonthDiff === 2) {
    return "month";
  } else if (sScale === "week" && iMonthDiff === 1) {
    if (oJSDate.getUTCDate() === oToday.getUTCDate() || iDiffSeconds < 0 && oJSDate.getUTCDate() < oToday.getUTCDate() || iDiffSeconds > 0 && oJSDate.getUTCDate() > oToday.getUTCDate()) {
      return "month";
    }
  } else if (sScale === "month" && iMonthDiff === 1) {
    if (iDiffSeconds > 0 && oJSDate.getUTCDate() < oToday.getUTCDate() || iDiffSeconds < 0 && oJSDate.getUTCDate() > oToday.getUTCDate()) {
      return "week";
    }
  }
  return sScale;
}
function cutDateFields(oDate, iStartIndex) {
  var sMethodName, aFields = ["FullYear", "Month", "Date", "Hours", "Minutes", "Seconds", "Milliseconds"], oDateCopy = new Date(oDate.getTime());
  for (var i = iStartIndex; i < aFields.length; i++) {
    sMethodName = "setUTC" + aFields[iStartIndex];
    oDateCopy[sMethodName].apply(oDateCopy, [0]);
  }
  return oDateCopy;
}
var mRelativeDiffs = {
  year: function(oFromDate, oToDate) {
    return oToDate.getUTCFullYear() - oFromDate.getUTCFullYear();
  },
  month: function(oFromDate, oToDate) {
    return oToDate.getUTCMonth() - oFromDate.getUTCMonth() + this.year(oFromDate, oToDate) * 12;
  },
  week: function(oFromDate, oToDate, oFormat) {
    var iFromDay = oFormat._adaptDayOfWeek(oFromDate.getUTCDay());
    var iToDay = oFormat._adaptDayOfWeek(oToDate.getUTCDay());
    oFromDate = cutDateFields(oFromDate, 3);
    oToDate = cutDateFields(oToDate, 3);
    return (oToDate.getTime() - oFromDate.getTime() - (iToDay - iFromDay) * oFormat._mScales.day * 1e3) / (oFormat._mScales.week * 1e3);
  },
  day: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 3);
    oToDate = cutDateFields(oToDate, 3);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.day * 1e3);
  },
  hour: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 4);
    oToDate = cutDateFields(oToDate, 4);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.hour * 1e3);
  },
  minute: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 5);
    oToDate = cutDateFields(oToDate, 5);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.minute * 1e3);
  },
  second: function(oFromDate, oToDate, oFormat) {
    oFromDate = cutDateFields(oFromDate, 6);
    oToDate = cutDateFields(oToDate, 6);
    return (oToDate.getTime() - oFromDate.getTime()) / (oFormat._mScales.second * 1e3);
  }
};
DateFormat.prototype._adaptDayOfWeek = function(iDayOfWeek) {
  var vCalendarWeekParameter = getCalendarWeekParameter(this.oFormatOptions), iFirstDayOfWeek;
  if (typeof vCalendarWeekParameter === "object") {
    iFirstDayOfWeek = vCalendarWeekParameter.firstDayOfWeek;
  } else {
    iFirstDayOfWeek = CalendarUtils_default.getWeekConfigurationValues(vCalendarWeekParameter, this.oLocale).firstDayOfWeek;
  }
  var iDayNumberOfWeek = iDayOfWeek - (iFirstDayOfWeek - 1);
  if (iDayNumberOfWeek <= 0) {
    iDayNumberOfWeek += 7;
  }
  return iDayNumberOfWeek;
};
DateFormat.prototype._getDifference = function(sScale, aDates) {
  var oFromDate = aDates[0];
  var oToDate = aDates[1];
  return Math.round(mRelativeDiffs[sScale](oFromDate, oToDate, this));
};
DateFormat.prototype.getAllowedCharacters = function(aFormatArray) {
  if (this.oFormatOptions.relative) {
    return "";
  }
  var sAllowedCharacters = "";
  var bNumbers = false;
  var bAll = false;
  var oPart;
  for (var i = 0; i < aFormatArray.length; i++) {
    oPart = aFormatArray[i];
    switch (oPart.type) {
      case "text":
        if (sAllowedCharacters.indexOf(oPart.value) < 0) {
          sAllowedCharacters += oPart.value;
        }
        break;
      case "day":
      case "year":
      case "weekYear":
      case "dayNumberOfWeek":
      case "weekInYear":
      case "hour0_23":
      case "hour1_24":
      case "hour0_11":
      case "hour1_12":
      case "minute":
      case "second":
      case "fractionalsecond":
        if (!bNumbers) {
          sAllowedCharacters += "0123456789";
          bNumbers = true;
        }
        break;
      case "month":
      case "monthStandalone":
        if (oPart.digits < 3) {
          if (!bNumbers) {
            sAllowedCharacters += "0123456789";
            bNumbers = true;
          }
        } else {
          bAll = true;
        }
        break;
      default:
        bAll = true;
        break;
    }
  }
  if (bAll) {
    sAllowedCharacters = "";
  }
  return sAllowedCharacters;
};
DateFormat.prototype.getPlaceholderText = function() {
  var oResourceBundle = Core_default.getLibraryResourceBundle();
  return oResourceBundle.getText("date.placeholder", [this.format.apply(this, this.getSampleValue())]);
};
DateFormat.prototype.getSampleValue = function() {
  var oDate, iFullYear = UI5Date_default.getInstance().getFullYear(), bUTC = this.oFormatOptions.UTC;
  function getDate(iYear, iMonth, iDay, iHours, iMinutes, iSeconds, iMilliseconds) {
    return bUTC ? UI5Date_default.getInstance(Date.UTC(iYear, iMonth, iDay, iHours, iMinutes, iSeconds, iMilliseconds)) : UI5Date_default.getInstance(iYear, iMonth, iDay, iHours, iMinutes, iSeconds, iMilliseconds);
  }
  oDate = getDate(iFullYear, 11, 31, 23, 59, 58, 123);
  if (this.type === mDateFormatTypes.DATETIME_WITH_TIMEZONE) {
    return [oDate, Configuration_default.getTimezone()];
  }
  if (this.oFormatOptions.interval) {
    return [[getDate(iFullYear, 11, 22, 9, 12, 34, 567), oDate]];
  }
  return [oDate];
};
var rAllRTLCharacters = /[\u200e\u200f\u202a\u202b\u202c]/g;
var rAllSpaces = /\s/g;
DateFormat._normalize = function(sValue) {
  return sValue.replace(rAllRTLCharacters, "").replace(rAllSpaces, " ");
};
var DateFormat_default = DateFormat;

// node_modules/@ui5/webcomponents-localization/dist/DateFormat.js
var DateFormatWrapped = DateFormat_default;
var DateFormat2 = class extends DateFormatWrapped {
};
var DateFormat_default2 = DateFormat2;

// node_modules/@ui5/webcomponents-localization/dist/dates/UI5Date.js
var UI5DateWrapped = UI5Date_default;
var UI5Date = class extends UI5DateWrapped {
};
var UI5Date_default2 = UI5Date;

// node_modules/@ui5/webcomponents-localization/dist/dates/UniversalDate.js
var UniversalDate = UniversalDate_default;
var UniversalDate_default2 = UniversalDate;

// node_modules/@ui5/webcomponents-localization/dist/dates/CalendarDate.js
var CalendarDate = class _CalendarDate {
  constructor(year, month, date, calendarType) {
    let aArgs = arguments, oJSDate, oNow, sCalendarType;
    switch (aArgs.length) {
      case 0:
        oNow = UI5Date_default2.getInstance();
        return this.constructor(oNow.getFullYear(), oNow.getMonth(), oNow.getDate());
      case 1:
      case 2:
        if (!(aArgs[0] instanceof _CalendarDate)) {
          throw new Error("Invalid arguments: the first argument must be of type CalendarDate.");
        }
        sCalendarType = aArgs[1] ? aArgs[1] : aArgs[0]._oUDate.sCalendarType;
        oJSDate = UI5Date_default2.getInstance(aArgs[0].valueOf());
        oJSDate.setFullYear(oJSDate.getUTCFullYear(), oJSDate.getUTCMonth(), oJSDate.getUTCDate());
        oJSDate.setHours(oJSDate.getUTCHours(), oJSDate.getUTCMinutes(), oJSDate.getUTCSeconds(), oJSDate.getUTCMilliseconds());
        this._oUDate = createUniversalUTCDate(oJSDate, sCalendarType);
        break;
      case 3:
      case 4:
        checkNumericLike(aArgs[0], `Invalid year: ${aArgs[0]}`);
        checkNumericLike(aArgs[1], `Invalid month: ${aArgs[1]}`);
        checkNumericLike(aArgs[2], `Invalid date: ${aArgs[2]}`);
        oJSDate = UI5Date_default2.getInstance(0, 0, 1);
        oJSDate.setFullYear(aArgs[0], aArgs[1], aArgs[2]);
        if (aArgs[3]) {
          sCalendarType = aArgs[3];
        }
        this._oUDate = createUniversalUTCDate(oJSDate, sCalendarType);
        break;
      default:
        throw new Error(`${"Invalid arguments. Accepted arguments are: 1) oCalendarDate, (optional)calendarTypeor 2) year, month, date, (optional) calendarType"}${aArgs}`);
    }
  }
  getYear() {
    return this._oUDate.getUTCFullYear();
  }
  setYear(year) {
    checkNumericLike(year, `Invalid year: ${year}`);
    this._oUDate.setUTCFullYear(year);
    return this;
  }
  getMonth() {
    return this._oUDate.getUTCMonth();
  }
  /**
   * Sets the given month as ordinal month of the year.
   * @param {int} month An integer between 0 and 11, representing the months January through December( or their
   * equivalent month names for the given calendar).
   * If the specified value is is outside of the expected range, this method attempts to update the date information
   * accordingly. For example, if 12 is given as a month, the year will be incremented by 1, and 1 will be used for month.
   * @param {int} [date] An integer between 1 and 31, representing the day of the month, but other values are allowed.
   * 0 will result in the previous month's last day.
   * -1 will result in the day before the previous month's last day.
   * 32 will result in:
   * - first day of the next month if the current month has 31 days.
   * - second day of the next month if the current month has 30 days.
   * Other value will result in adding or subtracting days according to the given value.
   * @returns {sap.ui.unified.calendar.CalendarDate} <code>this</code> for method chaining.
   */
  setMonth(month, date) {
    checkNumericLike(month, `Invalid month: ${month}`);
    if (date || date === 0) {
      checkNumericLike(date, `Invalid date: ${date}`);
      this._oUDate.setUTCMonth(month, date);
    } else {
      this._oUDate.setUTCMonth(month);
    }
    return this;
  }
  getDate() {
    return this._oUDate.getUTCDate();
  }
  setDate(date) {
    checkNumericLike(date, `Invalid date: ${date}`);
    this._oUDate.setUTCDate(date);
    return this;
  }
  getDay() {
    return this._oUDate.getUTCDay();
  }
  getCalendarType() {
    return this._oUDate.sCalendarType;
  }
  isBefore(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() < oCalendarDate.valueOf();
  }
  isAfter(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() > oCalendarDate.valueOf();
  }
  isSameOrBefore(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() <= oCalendarDate.valueOf();
  }
  isSameOrAfter(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() >= oCalendarDate.valueOf();
  }
  isSame(oCalendarDate) {
    checkCalendarDate(oCalendarDate);
    return this.valueOf() === oCalendarDate.valueOf();
  }
  toLocalJSDate() {
    const oLocalDate = UI5Date_default2.getInstance(this._oUDate.getTime());
    oLocalDate.setFullYear(oLocalDate.getUTCFullYear(), oLocalDate.getUTCMonth(), oLocalDate.getUTCDate());
    oLocalDate.setHours(0, 0, 0, 0);
    return oLocalDate;
  }
  toUTCJSDate() {
    const oUTCDate = UI5Date_default2.getInstance(this._oUDate.getTime());
    oUTCDate.setUTCHours(0, 0, 0, 0);
    return oUTCDate;
  }
  toString() {
    return `${this._oUDate.sCalendarType}: ${this.getYear()}/${this.getMonth() + 1}/${this.getDate()}`;
  }
  valueOf() {
    return this._oUDate.getTime();
  }
  static fromLocalJSDate(oJSDate, sCalendarType) {
    function isValidDate(date) {
      return date && Object.prototype.toString.call(date) === "[object Date]" && !isNaN(date);
    }
    if (!isValidDate(oJSDate)) {
      throw new Error(`Date parameter must be a JavaScript Date object: [${oJSDate}].`);
    }
    return new _CalendarDate(oJSDate.getFullYear(), oJSDate.getMonth(), oJSDate.getDate(), sCalendarType);
  }
  static fromTimestamp(iTimestamp, sCalendarType) {
    const oCalDate = new _CalendarDate(0, 0, 1);
    let oUDate;
    try {
      oUDate = UniversalDate_default2.getInstance(UI5Date_default2.getInstance(iTimestamp), sCalendarType);
    } catch (e) {
      oUDate = /* @__PURE__ */ new Date(NaN);
    }
    oCalDate._oUDate = oUDate;
    return oCalDate;
  }
};
function createUniversalUTCDate(oDate, sCalendarType) {
  if (sCalendarType) {
    return UniversalDate_default2.getInstance(createUTCDate(oDate), sCalendarType);
  }
  return new UniversalDate_default2(createUTCDate(oDate).getTime());
}
function createUTCDate(oDate) {
  const oUTCDate = new Date(Date.UTC(0, 0, 1));
  oUTCDate.setUTCFullYear(oDate.getFullYear(), oDate.getMonth(), oDate.getDate());
  return oUTCDate;
}
function checkCalendarDate(oCalendarDate) {
  if (!(oCalendarDate instanceof CalendarDate)) {
    throw new Error(`Invalid calendar date: [${oCalendarDate}]. Expected: CalendarDate`);
  }
}
function checkNumericLike(value, message) {
  if (value === void 0 || value === Infinity || isNaN(value)) {
    throw message;
  }
}
var CalendarDate_default = CalendarDate;

// node_modules/@ui5/webcomponents-localization/dist/dates/modifyDateBy.js
var modifyDateBy = (date, amount, unit, preserveDate = true, minDate, maxDate) => {
  const newDate = new CalendarDate_default(date);
  switch (unit) {
    case "day":
      newDate.setDate(date.getDate() + amount);
      break;
    case "month":
      if (preserveDate) {
        newDate.setMonth(date.getMonth() + amount);
        const stillSameMonth = amount === -1 && newDate.getMonth() === date.getMonth();
        const monthSkipped = amount === 1 && newDate.getMonth() - date.getMonth() > 1;
        if (stillSameMonth || monthSkipped) {
          newDate.setDate(0);
        }
      } else {
        if (amount === 1) {
          newDate.setMonth(newDate.getMonth() + 1, 1);
        }
        if (amount === -1) {
          newDate.setDate(0);
        }
      }
      break;
    case "year":
      newDate.setYear(date.getYear() + amount);
      if (newDate.getMonth() !== date.getMonth()) {
        newDate.setDate(0);
      }
      break;
    default:
      break;
  }
  if (minDate && newDate.isBefore(minDate)) {
    return new CalendarDate_default(minDate);
  }
  if (maxDate && newDate.isAfter(maxDate)) {
    return new CalendarDate_default(maxDate);
  }
  return newDate;
};
var modifyDateBy_default = modifyDateBy;

// node_modules/@ui5/webcomponents-localization/dist/dates/getRoundedTimestamp.js
var getRoundedTimestamp = (millisecondsUTC) => {
  if (!millisecondsUTC) {
    millisecondsUTC = (/* @__PURE__ */ new Date()).getTime();
  }
  const rounded = millisecondsUTC - millisecondsUTC % (24 * 60 * 60 * 1e3);
  return rounded / 1e3;
};
var getRoundedTimestamp_default = getRoundedTimestamp;

// node_modules/@ui5/webcomponents-localization/dist/dates/getTodayUTCTimestamp.js
var getTodayUTCTimestamp = (primaryCalendarType) => CalendarDate_default.fromLocalJSDate(UI5Date_default2.getInstance(), primaryCalendarType).valueOf() / 1e3;
var getTodayUTCTimestamp_default = getTodayUTCTimestamp;

// node_modules/@ui5/webcomponents-base/dist/types/ValueState.js
var ValueState;
(function(ValueState2) {
  ValueState2["None"] = "None";
  ValueState2["Success"] = "Success";
  ValueState2["Warning"] = "Warning";
  ValueState2["Error"] = "Error";
  ValueState2["Information"] = "Information";
})(ValueState || (ValueState = {}));
var ValueState_default = ValueState;

// node_modules/@ui5/webcomponents-base/dist/util/AriaLabelHelper.js
var associatedElements = /* @__PURE__ */ new WeakMap();
var registeredElements = /* @__PURE__ */ new WeakMap();
var observerOptions = {
  attributes: true,
  childList: true,
  characterData: true,
  subtree: true
};
var getEffectiveAriaLabelText = (el) => {
  const accessibleEl = el;
  if (!accessibleEl.accessibleNameRef) {
    if (accessibleEl.accessibleName) {
      return accessibleEl.accessibleName;
    }
    return void 0;
  }
  return getAllAccessibleNameRefTexts(el);
};
var getAllAccessibleNameRefTexts = (el) => {
  var _a3;
  const ids = ((_a3 = el.accessibleNameRef) == null ? void 0 : _a3.split(" ")) ?? [];
  const owner = el.getRootNode();
  let result = "";
  ids.forEach((elementId, index) => {
    const element = owner.querySelector(`[id='${elementId}']`);
    const text = `${element && element.textContent ? element.textContent : ""}`;
    if (text) {
      result += text;
      if (index < ids.length - 1) {
        result += " ";
      }
    }
  });
  return result;
};
var _getAllAssociatedElementsFromDOM = (el) => {
  const set = /* @__PURE__ */ new Set();
  const labelsForAssociated = _getAssociatedLabels(el);
  labelsForAssociated.forEach((itm) => {
    set.add(itm);
  });
  const value = el["accessibleNameRef"];
  const ids = (value == null ? void 0 : value.split(" ")) ?? [];
  ids.forEach((id) => {
    const refEl = _getReferencedElementById(el, id);
    if (refEl) {
      set.add(refEl);
    }
  });
  return Array.from(set);
};
var _getAssociatedLabels = (el) => {
  const labels = el.getRootNode().querySelectorAll(`[for="${el.id}"]`);
  return Array.from(labels);
};
var _getReferencedElementById = (el, elementId) => {
  return el.getRootNode().querySelector(`[id='${elementId}']`);
};
var getAssociatedLabelForTexts = (el) => {
  const results = [];
  const labels = _getAssociatedLabels(el);
  labels.forEach((label) => {
    const labelText = label.textContent;
    labelText && results.push(labelText);
  });
  if (results.length) {
    return results.join(" ");
  }
  return void 0;
};
var _createInvalidationCallback = (el) => {
  const invalidationCallback = (changeInfo) => {
    if (!(changeInfo && changeInfo.type === "property" && changeInfo.name === "accessibleNameRef")) {
      return;
    }
    const registeredElement = registeredElements.get(el);
    if (!registeredElement) {
      return;
    }
    const oldAssociatedElements = registeredElement.observedElements;
    const newAssociatedElements = _getAllAssociatedElementsFromDOM(el);
    oldAssociatedElements.forEach((oldElement) => {
      if (!newAssociatedElements.includes(oldElement)) {
        _removeObservedElementFromRegisteredElement(registeredElement, oldElement);
      }
    });
    newAssociatedElements.forEach((newElement) => {
      if (!oldAssociatedElements.includes(newElement)) {
        _addObservedElementToRegisteredElement(registeredElement, newElement);
        registeredElement.observedElements.push(newElement);
      }
    });
    registeredElement == null ? void 0 : registeredElement.callback();
  };
  return invalidationCallback;
};
var registerUI5Element = (el, callback) => {
  if (registeredElements.has(el)) {
    return;
  }
  const allAssociatedElements = _getAllAssociatedElementsFromDOM(el);
  const invalidationCallback = _createInvalidationCallback(el);
  const registeredElement = {
    host: el,
    observedElements: allAssociatedElements,
    callback,
    invalidationCallback
  };
  registeredElements.set(el, registeredElement);
  el.attachInvalidate(invalidationCallback);
  allAssociatedElements.forEach((element) => {
    _addObservedElementToRegisteredElement(registeredElement, element);
  });
  callback();
};
var _addObservedElementToRegisteredElement = (registeredElement, element) => {
  let associatedElement = associatedElements.get(element);
  if (!associatedElement) {
    associatedElement = { observer: null, callbacks: [] };
    const observer = new MutationObserver(() => {
      const callbacks = associatedElement.callbacks;
      callbacks.forEach((callback) => {
        callback();
      });
      const domEl = document.getElementById(element.id);
      if (!(registeredElement.host.id === element.getAttribute("for") || domEl)) {
        _removeObservedElementFromRegisteredElement(registeredElement, element);
      }
    });
    associatedElement.observer = observer;
    observer.observe(element, observerOptions);
    associatedElements.set(element, associatedElement);
  }
  if (!associatedElement.callbacks.includes(registeredElement.callback)) {
    associatedElement.callbacks.push(registeredElement.callback);
  }
};
var _removeObservedElementFromRegisteredElement = (registeredElement, element) => {
  var _a3;
  const associatedElement = associatedElements.get(element);
  if (associatedElement) {
    associatedElement.callbacks = associatedElement.callbacks.filter((itm) => itm !== registeredElement.callback);
    if (!associatedElement.callbacks.length) {
      (_a3 = associatedElement.observer) == null ? void 0 : _a3.disconnect();
      associatedElements.delete(element);
    }
  }
  registeredElement.observedElements = registeredElement.observedElements.filter((itm) => itm !== element);
};
var deregisterUI5Element = (el) => {
  const registeredElement = registeredElements.get(el);
  if (!registeredElement) {
    return;
  }
  const oldObservedElements = [...registeredElement.observedElements];
  oldObservedElements.forEach((observedElement) => {
    _removeObservedElementFromRegisteredElement(registeredElement, observedElement);
  });
  el.detachInvalidate(registeredElement.invalidationCallback);
  registeredElements.delete(el);
};

// node_modules/@ui5/webcomponents-base/dist/Keys.js
var KeyCodes = {
  BACKSPACE: 8,
  TAB: 9,
  ENTER: 13,
  SHIFT: 16,
  CONTROL: 17,
  ALT: 18,
  BREAK: 19,
  CAPS_LOCK: 20,
  ESCAPE: 27,
  SPACE: 32,
  PAGE_UP: 33,
  PAGE_DOWN: 34,
  END: 35,
  HOME: 36,
  ARROW_LEFT: 37,
  ARROW_UP: 38,
  ARROW_RIGHT: 39,
  ARROW_DOWN: 40,
  PRINT: 44,
  INSERT: 45,
  DELETE: 46,
  DIGIT_0: 48,
  DIGIT_1: 49,
  DIGIT_2: 50,
  DIGIT_3: 51,
  DIGIT_4: 52,
  DIGIT_5: 53,
  DIGIT_6: 54,
  DIGIT_7: 55,
  DIGIT_8: 56,
  DIGIT_9: 57,
  A: 65,
  B: 66,
  C: 67,
  D: 68,
  E: 69,
  F: 70,
  G: 71,
  H: 72,
  I: 73,
  J: 74,
  K: 75,
  L: 76,
  M: 77,
  N: 78,
  O: 79,
  P: 80,
  Q: 81,
  R: 82,
  S: 83,
  T: 84,
  U: 85,
  V: 86,
  W: 87,
  X: 88,
  Y: 89,
  Z: 90,
  WINDOWS: 91,
  CONTEXT_MENU: 93,
  TURN_OFF: 94,
  SLEEP: 95,
  NUMPAD_0: 96,
  NUMPAD_1: 97,
  NUMPAD_2: 98,
  NUMPAD_3: 99,
  NUMPAD_4: 100,
  NUMPAD_5: 101,
  NUMPAD_6: 102,
  NUMPAD_7: 103,
  NUMPAD_8: 104,
  NUMPAD_9: 105,
  NUMPAD_ASTERISK: 106,
  NUMPAD_PLUS: 107,
  NUMPAD_MINUS: 109,
  NUMPAD_COMMA: 110,
  NUMPAD_SLASH: 111,
  F1: 112,
  F2: 113,
  F3: 114,
  F4: 115,
  F5: 116,
  F6: 117,
  F7: 118,
  F8: 119,
  F9: 120,
  F10: 121,
  F11: 122,
  F12: 123,
  NUM_LOCK: 144,
  SCROLL_LOCK: 145,
  COLON: 186,
  PLUS: 187,
  COMMA: 188,
  SLASH: 189,
  DOT: 190,
  PIPE: 191,
  SEMICOLON: 192,
  MINUS: 219,
  GREAT_ACCENT: 220,
  EQUALS: 221,
  SINGLE_QUOTE: 222,
  BACKSLASH: 226
};
var isEnter = (event2) => (event2.key ? event2.key === "Enter" : event2.keyCode === KeyCodes.ENTER) && !hasModifierKeys(event2);
var isEnterShift = (event2) => (event2.key ? event2.key === "Enter" : event2.keyCode === KeyCodes.ENTER) && checkModifierKeys(event2, false, false, true);
var isSpace = (event2) => (event2.key ? event2.key === "Spacebar" || event2.key === " " : event2.keyCode === KeyCodes.SPACE) && !hasModifierKeys(event2);
var isSpaceShift = (event2) => (event2.key ? event2.key === "Spacebar" || event2.key === " " : event2.keyCode === KeyCodes.SPACE) && checkModifierKeys(event2, false, false, true);
var isLeft = (event2) => (event2.key ? event2.key === "ArrowLeft" || event2.key === "Left" : event2.keyCode === KeyCodes.ARROW_LEFT) && !hasModifierKeys(event2);
var isRight = (event2) => (event2.key ? event2.key === "ArrowRight" || event2.key === "Right" : event2.keyCode === KeyCodes.ARROW_RIGHT) && !hasModifierKeys(event2);
var isUp = (event2) => (event2.key ? event2.key === "ArrowUp" || event2.key === "Up" : event2.keyCode === KeyCodes.ARROW_UP) && !hasModifierKeys(event2);
var isDown = (event2) => (event2.key ? event2.key === "ArrowDown" || event2.key === "Down" : event2.keyCode === KeyCodes.ARROW_DOWN) && !hasModifierKeys(event2);
var isUpShift = (event2) => (event2.key ? event2.key === "ArrowUp" || event2.key === "Up" : event2.keyCode === KeyCodes.ARROW_UP) && checkModifierKeys(event2, false, false, true);
var isDownShift = (event2) => (event2.key ? event2.key === "ArrowDown" || event2.key === "Down" : event2.keyCode === KeyCodes.ARROW_DOWN) && checkModifierKeys(event2, false, false, true);
var isLeftShift = (event2) => (event2.key ? event2.key === "ArrowLeft" || event2.key === "Left" : event2.keyCode === KeyCodes.ARROW_LEFT) && checkModifierKeys(event2, false, false, true);
var isRightShift = (event2) => (event2.key ? event2.key === "ArrowRight" || event2.key === "Right" : event2.keyCode === KeyCodes.ARROW_RIGHT) && checkModifierKeys(event2, false, false, true);
var isHome = (event2) => (event2.key ? event2.key === "Home" : event2.keyCode === KeyCodes.HOME) && !hasModifierKeys(event2);
var isEnd = (event2) => (event2.key ? event2.key === "End" : event2.keyCode === KeyCodes.END) && !hasModifierKeys(event2);
var isHomeCtrl = (event2) => (event2.key ? event2.key === "Home" : event2.keyCode === KeyCodes.HOME) && checkModifierKeys(event2, true, false, false);
var isEndCtrl = (event2) => (event2.key ? event2.key === "End" : event2.keyCode === KeyCodes.END) && checkModifierKeys(event2, true, false, false);
var isEscape = (event2) => (event2.key ? event2.key === "Escape" || event2.key === "Esc" : event2.keyCode === KeyCodes.ESCAPE) && !hasModifierKeys(event2);
var isTabNext = (event2) => (event2.key ? event2.key === "Tab" : event2.keyCode === KeyCodes.TAB) && !hasModifierKeys(event2);
var isTabPrevious = (event2) => (event2.key ? event2.key === "Tab" : event2.keyCode === KeyCodes.TAB) && checkModifierKeys(
  event2,
  /* Ctrl */
  false,
  /* Alt */
  false,
  /* Shift */
  true
);
var isBackSpace = (event2) => (event2.key ? event2.key === "Backspace" : event2.keyCode === KeyCodes.BACKSPACE) && !hasModifierKeys(event2);
var isDelete = (event2) => (event2.key ? event2.key === "Delete" : event2.keyCode === KeyCodes.DELETE) && !hasModifierKeys(event2);
var isPageUp = (event2) => (event2.key ? event2.key === "PageUp" : event2.keyCode === KeyCodes.PAGE_UP) && !hasModifierKeys(event2);
var isPageDown = (event2) => (event2.key ? event2.key === "PageDown" : event2.keyCode === KeyCodes.PAGE_DOWN) && !hasModifierKeys(event2);
var isPageUpShift = (event2) => (event2.key ? event2.key === "PageUp" : event2.keyCode === KeyCodes.PAGE_UP) && checkModifierKeys(event2, false, false, true);
var isPageUpAlt = (event2) => (event2.key ? event2.key === "PageUp" : event2.keyCode === KeyCodes.PAGE_UP) && checkModifierKeys(event2, false, true, false);
var isPageDownShift = (event2) => (event2.key ? event2.key === "PageDown" : event2.keyCode === KeyCodes.PAGE_DOWN) && checkModifierKeys(event2, false, false, true);
var isPageDownAlt = (event2) => (event2.key ? event2.key === "PageDown" : event2.keyCode === KeyCodes.PAGE_DOWN) && checkModifierKeys(event2, false, true, false);
var isPageUpShiftCtrl = (event2) => (event2.key ? event2.key === "PageUp" : event2.keyCode === KeyCodes.PAGE_UP) && checkModifierKeys(event2, true, false, true);
var isPageDownShiftCtrl = (event2) => (event2.key ? event2.key === "PageDown" : event2.keyCode === KeyCodes.PAGE_DOWN) && checkModifierKeys(event2, true, false, true);
var isShow = (event2) => {
  if (event2.key) {
    return isF4(event2) || isShowByArrows(event2);
  }
  return event2.keyCode === KeyCodes.F4 && !hasModifierKeys(event2) || event2.keyCode === KeyCodes.ARROW_DOWN && checkModifierKeys(
    event2,
    /* Ctrl */
    false,
    /* Alt */
    true,
    /* Shift */
    false
  );
};
var isF4 = (event2) => {
  return event2.key === "F4" && !hasModifierKeys(event2);
};
var isF4Shift = (event2) => (event2.key ? event2.key === "F4" : event2.keyCode === KeyCodes.F4) && checkModifierKeys(event2, false, false, true);
var isF6Next = (event2) => (event2.key ? event2.key === "F6" : event2.keyCode === KeyCodes.F6) && checkModifierKeys(event2, false, false, false) || (event2.key ? event2.key === "ArrowDown" || event2.key === "Down" : event2.keyCode === KeyCodes.ARROW_DOWN) && checkModifierKeys(event2, true, true, false);
var isF6Previous = (event2) => (event2.key ? event2.key === "F6" : event2.keyCode === KeyCodes.F6) && checkModifierKeys(event2, false, false, true) || (event2.key ? event2.key === "ArrowUp" || event2.key === "Up" : event2.keyCode === KeyCodes.ARROW_UP) && checkModifierKeys(event2, true, true, false);
var isShowByArrows = (event2) => {
  return (event2.key === "ArrowDown" || event2.key === "Down" || (event2.key === "ArrowUp" || event2.key === "Up")) && checkModifierKeys(
    event2,
    /* Ctrl */
    false,
    /* Alt */
    true,
    /* Shift */
    false
  );
};
var hasModifierKeys = (event2) => event2.shiftKey || event2.altKey || getCtrlKey(event2);
var getCtrlKey = (event2) => !!(event2.metaKey || event2.ctrlKey);
var checkModifierKeys = (event2, bCtrlKey, bAltKey, bShiftKey) => event2.shiftKey === bShiftKey && event2.altKey === bAltKey && getCtrlKey(event2) === bCtrlKey;

// node_modules/@ui5/webcomponents/dist/types/CalendarPickersMode.js
var CalendarPickersMode;
(function(CalendarPickersMode2) {
  CalendarPickersMode2["DAY_MONTH_YEAR"] = "DAY_MONTH_YEAR";
  CalendarPickersMode2["MONTH_YEAR"] = "MONTH_YEAR";
  CalendarPickersMode2["YEAR"] = "YEAR";
})(CalendarPickersMode || (CalendarPickersMode = {}));
var CalendarPickersMode_default = CalendarPickersMode;

// node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsAlias.js
var IconCollectionsAlias;
(function(IconCollectionsAlias2) {
  IconCollectionsAlias2["SAP-icons"] = "SAP-icons-v4";
  IconCollectionsAlias2["horizon"] = "SAP-icons-v5";
  IconCollectionsAlias2["SAP-icons-TNT"] = "tnt";
  IconCollectionsAlias2["BusinessSuiteInAppSymbols"] = "business-suite";
})(IconCollectionsAlias || (IconCollectionsAlias = {}));
var getIconCollectionByAlias = (collectionName) => {
  if (IconCollectionsAlias[collectionName]) {
    return IconCollectionsAlias[collectionName];
  }
  return collectionName;
};

// node_modules/@ui5/webcomponents-base/dist/asset-registries/util/IconCollectionsByTheme.js
var RegisteredIconCollection;
(function(RegisteredIconCollection2) {
  RegisteredIconCollection2["SAPIconsV4"] = "SAP-icons-v4";
  RegisteredIconCollection2["SAPIconsV5"] = "SAP-icons-v5";
  RegisteredIconCollection2["SAPIconsTNTV2"] = "tnt-v2";
  RegisteredIconCollection2["SAPIconsTNTV3"] = "tnt-v3";
  RegisteredIconCollection2["SAPBSIconsV1"] = "business-suite-v1";
  RegisteredIconCollection2["SAPBSIconsV2"] = "business-suite-v2";
})(RegisteredIconCollection || (RegisteredIconCollection = {}));
var iconCollections = /* @__PURE__ */ new Map();
iconCollections.set("SAP-icons", {
  "legacy": RegisteredIconCollection.SAPIconsV4,
  "sap_horizon": RegisteredIconCollection.SAPIconsV5
});
iconCollections.set("tnt", {
  "legacy": RegisteredIconCollection.SAPIconsTNTV2,
  "sap_horizon": RegisteredIconCollection.SAPIconsTNTV3
});
iconCollections.set("business-suite", {
  "legacy": RegisteredIconCollection.SAPBSIconsV1,
  "sap_horizon": RegisteredIconCollection.SAPBSIconsV2
});
var registerIconCollectionForTheme = (collectionName, themeCollectionMap) => {
  if (iconCollections.has(collectionName)) {
    iconCollections.set(collectionName, { ...themeCollectionMap, ...iconCollections.get(collectionName) });
    return;
  }
  iconCollections.set(collectionName, themeCollectionMap);
};
var getIconCollectionForTheme = (collectionName) => {
  const themeFamily = isLegacyThemeFamily() ? "legacy" : "sap_horizon";
  return iconCollections.has(collectionName) ? iconCollections.get(collectionName)[themeFamily] : collectionName;
};

// node_modules/@ui5/webcomponents-base/dist/config/Icons.js
var IconCollectionConfiguration = /* @__PURE__ */ new Map();
var getDefaultIconCollection = (theme) => {
  return IconCollectionConfiguration.get(theme);
};

// node_modules/@ui5/webcomponents-base/dist/asset-registries/util/getIconCollectionByTheme.js
var getEffectiveIconCollection = (collectionName) => {
  const defaultIconCollection = getDefaultIconCollection(getTheme());
  if (!collectionName && defaultIconCollection) {
    return getIconCollectionByAlias(defaultIconCollection);
  }
  if (!collectionName) {
    return getIconCollectionForTheme("SAP-icons");
  }
  return getIconCollectionForTheme(collectionName);
};
var getIconCollectionByTheme_default = getEffectiveIconCollection;

// node_modules/@ui5/webcomponents-base/dist/util/formatMessage.js
var messageFormatRegEX = /('')|'([^']+(?:''[^']*)*)(?:'|$)|\{([0-9]+(?:\s*,[^{}]*)?)\}|[{}]/g;
var formatMessage = (text, values) => {
  values = values || [];
  return text.replace(messageFormatRegEX, ($0, $1, $2, $3, offset) => {
    if ($1) {
      return "'";
    }
    if ($2) {
      return $2.replace(/''/g, "'");
    }
    if ($3) {
      const ind = typeof $3 === "string" ? parseInt($3) : $3;
      return String(values[ind]);
    }
    throw new Error(`[i18n]: pattern syntax error at pos ${offset}`);
  });
};
var formatMessage_default2 = formatMessage;

// node_modules/@ui5/webcomponents-base/dist/i18nBundle.js
var I18nBundleInstances = /* @__PURE__ */ new Map();
var customGetI18nBundle;
var I18nBundle = class {
  constructor(packageName21) {
    this.packageName = packageName21;
  }
  /**
   * Returns a text in the currently loaded language
   *
   * @public
   * @param textObj key/defaultText pair or just the key
   * @param params Values for the placeholders
   */
  getText(textObj, ...params) {
    if (typeof textObj === "string") {
      textObj = { key: textObj, defaultText: textObj };
    }
    if (!textObj || !textObj.key) {
      return "";
    }
    const bundle = getI18nBundleData(this.packageName);
    if (bundle && !bundle[textObj.key]) {
      console.warn(`Key ${textObj.key} not found in the i18n bundle, the default text will be used`);
    }
    const messageText = bundle && bundle[textObj.key] ? bundle[textObj.key] : textObj.defaultText || textObj.key;
    return formatMessage_default2(messageText, params);
  }
};
var getI18nBundleSync = (packageName21) => {
  if (I18nBundleInstances.has(packageName21)) {
    return I18nBundleInstances.get(packageName21);
  }
  const i18nBundle = new I18nBundle(packageName21);
  I18nBundleInstances.set(packageName21, i18nBundle);
  return i18nBundle;
};
var getI18nBundle = async (packageName21) => {
  if (customGetI18nBundle) {
    return customGetI18nBundle(packageName21);
  }
  await fetchI18nBundle(packageName21);
  return getI18nBundleSync(packageName21);
};

// node_modules/@ui5/webcomponents-base/dist/asset-registries/Icons.js
var DEFAULT_THEME_FAMILY = "legacy";
var loaders = /* @__PURE__ */ new Map();
var registry = getSharedResource_default("SVGIcons.registry", /* @__PURE__ */ new Map());
var iconCollectionPromises = getSharedResource_default("SVGIcons.promises", /* @__PURE__ */ new Map());
var ICON_NOT_FOUND = "ICON_NOT_FOUND";
var _loadIconCollectionOnce = async (collectionName) => {
  if (!iconCollectionPromises.has(collectionName)) {
    if (!loaders.has(collectionName)) {
      throw new Error(`No loader registered for the ${collectionName} icons collection. Probably you forgot to import the "AllIcons.js" module for the respective package.`);
    }
    const loadIcons = loaders.get(collectionName);
    iconCollectionPromises.set(collectionName, loadIcons(collectionName));
  }
  return iconCollectionPromises.get(collectionName);
};
var _fillRegistry = (bundleData) => {
  Object.keys(bundleData.data).forEach((iconName) => {
    const iconData = bundleData.data[iconName];
    registerIcon(iconName, {
      pathData: iconData.path || iconData.paths,
      ltr: iconData.ltr,
      accData: iconData.acc,
      collection: bundleData.collection,
      packageName: bundleData.packageName
    });
  });
};
var registerIcon = (name21, iconData) => {
  const key = `${iconData.collection}/${name21}`;
  registry.set(key, {
    pathData: iconData.pathData,
    ltr: iconData.ltr,
    accData: iconData.accData,
    packageName: iconData.packageName,
    customTemplate: iconData.customTemplate,
    viewBox: iconData.viewBox,
    collection: iconData.collection
  });
};
var processName = (name21) => {
  if (name21.startsWith("sap-icon://")) {
    name21 = name21.replace("sap-icon://", "");
  }
  let collection21;
  [name21, collection21] = name21.split("/").reverse();
  name21 = name21.replace("icon-", "");
  if (collection21) {
    collection21 = getIconCollectionByAlias(collection21);
  }
  return { name: name21, collection: collection21 };
};
var getIconDataSync = (iconName) => {
  const { name: name21, collection: collection21 } = processName(iconName);
  return getRegisteredIconData(collection21, name21);
};
var getIconData = async (iconName) => {
  const { name: name21, collection: collection21 } = processName(iconName);
  let iconData = ICON_NOT_FOUND;
  try {
    iconData = await _loadIconCollectionOnce(getIconCollectionByTheme_default(collection21));
  } catch (error) {
    const e = error;
    console.error(e.message);
  }
  if (iconData === ICON_NOT_FOUND) {
    return iconData;
  }
  const registeredIconData = getRegisteredIconData(collection21, name21);
  if (registeredIconData) {
    return registeredIconData;
  }
  if (Array.isArray(iconData)) {
    iconData.forEach((data) => {
      _fillRegistry(data);
      registerIconCollectionForTheme(collection21, { [data.themeFamily || DEFAULT_THEME_FAMILY]: data.collection });
    });
  } else {
    _fillRegistry(iconData);
  }
  return getRegisteredIconData(collection21, name21);
};
var getRegisteredIconData = (collection21, name21) => {
  const registryKey = `${getIconCollectionByTheme_default(collection21)}/${name21}`;
  return registry.get(registryKey);
};
var getIconAccessibleName = async (name21) => {
  if (!name21) {
    return;
  }
  let iconData = getIconDataSync(name21);
  if (!iconData) {
    iconData = await getIconData(name21);
  }
  if (iconData && iconData !== ICON_NOT_FOUND && iconData.accData) {
    const i18nBundle = await getI18nBundle(iconData.packageName);
    return i18nBundle.getText(iconData.accData);
  }
};

// node_modules/@ui5/webcomponents-icons/dist/v4/appointment-2.js
var name = "appointment-2";
var pathData = "M32 481V65q0-14 9.5-23T64 33h64V1h32v32h192V1h32v32h64q14 0 23 9t9 23v416q0 14-9 23t-23 9H64q-13 0-22.5-9T32 481zm416 0V129H64v352h384zM256 193q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zM128 321q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm256-128q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm0 128q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm-128 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zM96 225q0-14 9-23t23-9 23 9 9 23-9 23-23 9-23-9-9-23zM384 97V65h-32v32h32zM128 65v32h32V65h-32z";
var ltr = false;
var collection = "SAP-icons-v4";
var packageName = "@ui5/webcomponents-icons";
registerIcon(name, { pathData, ltr, collection, packageName });

// node_modules/@ui5/webcomponents-icons/dist/v5/appointment-2.js
var name2 = "appointment-2";
var pathData2 = "M403 64q32 0 54.5 22.5T480 141v294q0 32-22.5 54.5T403 512H109q-32 0-54.5-22.5T32 435V141q0-32 22.5-54.5T109 64h25V26q0-11 7.5-18.5T160 0t18.5 7.5T186 26v38h140V26q0-11 7.5-18.5T352 0t18.5 7.5T378 26v38h25zm-294 51q-11 0-18.5 7.5T83 141v64h346v-64q0-11-7.5-18.5T403 115h-25v19q0 11-7.5 18.5T352 160t-18.5-7.5T326 134v-19H186v19q0 11-7.5 18.5T160 160t-18.5-7.5T134 134v-19h-25zm294 346q11 0 18.5-7.5T429 435V256H83v179q0 11 7.5 18.5T109 461h294zM160 320q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm96 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9zm96 0q14 0 23 9t9 23-9 23-23 9-23-9-9-23 9-23 23-9z";
var ltr2 = false;
var collection2 = "SAP-icons-v5";
var packageName2 = "@ui5/webcomponents-icons";
registerIcon(name2, { pathData: pathData2, ltr: ltr2, collection: collection2, packageName: packageName2 });

// node_modules/@ui5/webcomponents-icons/dist/appointment-2.js
var pathData3 = isLegacyThemeFamily() ? pathData : pathData2;

// node_modules/@ui5/webcomponents-icons/dist/generated/i18n/i18n-defaults.js
var ICON_DECLINE = { key: "ICON_DECLINE", defaultText: "Decline" };
var ICON_ERROR = { key: "ICON_ERROR", defaultText: "Error" };

// node_modules/@ui5/webcomponents-icons/dist/v4/decline.js
var name3 = "decline";
var pathData4 = "M86 109l22-23q5-5 12-5 6 0 11 5l124 125L380 86q5-5 11-5 7 0 12 5l22 23q12 11 0 23L301 256l124 125q11 11 0 22l-22 23q-8 5-12 5-3 0-11-5L255 301 131 426q-5 5-11 5-4 0-12-5l-22-23q-11-11 0-22l124-125L86 132q-12-12 0-23z";
var ltr3 = false;
var accData2 = ICON_DECLINE;
var collection3 = "SAP-icons-v4";
var packageName3 = "@ui5/webcomponents-icons";
registerIcon(name3, { pathData: pathData4, ltr: ltr3, accData: accData2, collection: collection3, packageName: packageName3 });

// node_modules/@ui5/webcomponents-icons/dist/v5/decline.js
var name4 = "decline";
var pathData5 = "M292 256l117 116q7 7 7 18 0 12-7.5 19t-18.5 7q-10 0-18-8L256 292 140 408q-8 8-18 8-11 0-18.5-7.5T96 390q0-10 8-18l116-116-116-116q-8-8-8-18 0-11 7.5-18.5T122 96t18 7l116 117 116-117q7-7 18-7t18.5 7.5T416 122t-7 18z";
var ltr4 = false;
var accData3 = ICON_DECLINE;
var collection4 = "SAP-icons-v5";
var packageName4 = "@ui5/webcomponents-icons";
registerIcon(name4, { pathData: pathData5, ltr: ltr4, accData: accData3, collection: collection4, packageName: packageName4 });

// node_modules/@ui5/webcomponents-icons/dist/decline.js
var pathData6 = isLegacyThemeFamily() ? pathData4 : pathData5;

// node_modules/@ui5/webcomponents/dist/types/HasPopup.js
var HasPopup;
(function(HasPopup2) {
  HasPopup2["Dialog"] = "Dialog";
  HasPopup2["Grid"] = "Grid";
  HasPopup2["ListBox"] = "ListBox";
  HasPopup2["Menu"] = "Menu";
  HasPopup2["Tree"] = "Tree";
})(HasPopup || (HasPopup = {}));
var HasPopup_default = HasPopup;

// node_modules/@ui5/webcomponents/dist/generated/i18n/i18n-defaults.js
var BUTTON_ARIA_TYPE_ACCEPT = { key: "BUTTON_ARIA_TYPE_ACCEPT", defaultText: "Positive Action" };
var BUTTON_ARIA_TYPE_REJECT = { key: "BUTTON_ARIA_TYPE_REJECT", defaultText: "Negative Action" };
var BUTTON_ARIA_TYPE_EMPHASIZED = { key: "BUTTON_ARIA_TYPE_EMPHASIZED", defaultText: "Emphasized" };
var CAL_LEGEND_TODAY_TEXT = { key: "CAL_LEGEND_TODAY_TEXT", defaultText: "Today" };
var CAL_LEGEND_SELECTED_TEXT = { key: "CAL_LEGEND_SELECTED_TEXT", defaultText: "Selected Day" };
var CAL_LEGEND_WORKING_DAY_TEXT = { key: "CAL_LEGEND_WORKING_DAY_TEXT", defaultText: "Working Day" };
var CAL_LEGEND_NON_WORKING_DAY_TEXT = { key: "CAL_LEGEND_NON_WORKING_DAY_TEXT", defaultText: "Non-Working Day" };
var DATEPICKER_OPEN_ICON_TITLE = { key: "DATEPICKER_OPEN_ICON_TITLE", defaultText: "Open Picker" };
var DATEPICKER_DATE_DESCRIPTION = { key: "DATEPICKER_DATE_DESCRIPTION", defaultText: "Date Input" };
var INPUT_SUGGESTIONS = { key: "INPUT_SUGGESTIONS", defaultText: "Suggestions available" };
var INPUT_SUGGESTIONS_TITLE = { key: "INPUT_SUGGESTIONS_TITLE", defaultText: "Select" };
var INPUT_SUGGESTIONS_ONE_HIT = { key: "INPUT_SUGGESTIONS_ONE_HIT", defaultText: "1 result available" };
var INPUT_SUGGESTIONS_MORE_HITS = { key: "INPUT_SUGGESTIONS_MORE_HITS", defaultText: "{0} results are available" };
var INPUT_SUGGESTIONS_NO_HIT = { key: "INPUT_SUGGESTIONS_NO_HIT", defaultText: "No results" };
var INPUT_CLEAR_ICON_ACC_NAME = { key: "INPUT_CLEAR_ICON_ACC_NAME", defaultText: "Clear" };
var RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON = { key: "RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON", defaultText: "Decline" };
var VALUE_STATE_TYPE_ERROR = { key: "VALUE_STATE_TYPE_ERROR", defaultText: "Value State Error" };
var VALUE_STATE_TYPE_WARNING = { key: "VALUE_STATE_TYPE_WARNING", defaultText: "Value State Warning" };
var VALUE_STATE_TYPE_SUCCESS = { key: "VALUE_STATE_TYPE_SUCCESS", defaultText: "Value State Success" };
var VALUE_STATE_TYPE_INFORMATION = { key: "VALUE_STATE_TYPE_INFORMATION", defaultText: "Value State Information" };
var VALUE_STATE_ERROR = { key: "VALUE_STATE_ERROR", defaultText: "Invalid entry" };
var VALUE_STATE_WARNING = { key: "VALUE_STATE_WARNING", defaultText: "Warning issued" };
var VALUE_STATE_INFORMATION = { key: "VALUE_STATE_INFORMATION", defaultText: "Informative entry" };
var VALUE_STATE_SUCCESS = { key: "VALUE_STATE_SUCCESS", defaultText: "Entry successfully validated" };
var CALENDAR_HEADER_NEXT_BUTTON = { key: "CALENDAR_HEADER_NEXT_BUTTON", defaultText: "Next" };
var CALENDAR_HEADER_PREVIOUS_BUTTON = { key: "CALENDAR_HEADER_PREVIOUS_BUTTON", defaultText: "Previous" };
var DAY_PICKER_WEEK_NUMBER_TEXT = { key: "DAY_PICKER_WEEK_NUMBER_TEXT", defaultText: "Week number" };
var DAY_PICKER_NON_WORKING_DAY = { key: "DAY_PICKER_NON_WORKING_DAY", defaultText: "Non-Working Day" };
var DAY_PICKER_TODAY = { key: "DAY_PICKER_TODAY", defaultText: "Today" };
var MONTH_PICKER_DESCRIPTION = { key: "MONTH_PICKER_DESCRIPTION", defaultText: "Month Picker" };
var YEAR_PICKER_DESCRIPTION = { key: "YEAR_PICKER_DESCRIPTION", defaultText: "Year Picker" };
var DIALOG_HEADER_ARIA_ROLE_DESCRIPTION = { key: "DIALOG_HEADER_ARIA_ROLE_DESCRIPTION", defaultText: "Interactive Header" };
var DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE = { key: "DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE", defaultText: "Use Shift+Arrow keys to resize" };
var DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE = { key: "DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE", defaultText: "Use Arrow keys to move" };
var DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE = { key: "DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE", defaultText: "Use Arrow keys to move, Shift+Arrow keys to resize" };

// node_modules/@ui5/webcomponents-base/dist/util/StringHelper.js
var kebabToCamelMap = /* @__PURE__ */ new Map();
var camelToKebabMap = /* @__PURE__ */ new Map();
var kebabToCamelCase = (string) => {
  if (!kebabToCamelMap.has(string)) {
    const result = toCamelCase(string.split("-"));
    kebabToCamelMap.set(string, result);
  }
  return kebabToCamelMap.get(string);
};
var camelToKebabCase = (string) => {
  if (!camelToKebabMap.has(string)) {
    const result = string.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();
    camelToKebabMap.set(string, result);
  }
  return camelToKebabMap.get(string);
};
var toCamelCase = (parts) => {
  return parts.map((string, index) => {
    return index === 0 ? string.toLowerCase() : string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();
  }).join("");
};

// node_modules/@ui5/webcomponents-base/dist/util/SlotsHelper.js
var getSlotName = (node) => {
  if (!(node instanceof HTMLElement)) {
    return "default";
  }
  const slot2 = node.getAttribute("slot");
  if (slot2) {
    const match = slot2.match(/^(.+?)-\d+$/);
    return match ? match[1] : slot2;
  }
  return "default";
};
var getSlottedNodes = (node) => {
  if (node instanceof HTMLSlotElement) {
    return node.assignedNodes({ flatten: true }).filter((item) => item instanceof HTMLElement);
  }
  return [node];
};
var getSlottedNodesList = (nodeList) => {
  return nodeList.reduce((acc, curr) => acc.concat(getSlottedNodes(curr)), []);
};

// node_modules/@ui5/webcomponents-base/dist/CustomElementsScopeUtils.js
var suf;
var rulesObj = {
  include: [/^ui5-/],
  exclude: []
};
var tagsCache = /* @__PURE__ */ new Map();
var getCustomElementsScopingSuffix = () => {
  return suf;
};
var shouldScopeCustomElement = (tag2) => {
  if (!tagsCache.has(tag2)) {
    const result = rulesObj.include.some((rule) => tag2.match(rule)) && !rulesObj.exclude.some((rule) => tag2.match(rule));
    tagsCache.set(tag2, result);
  }
  return tagsCache.get(tag2);
};
var getEffectiveScopingSuffixForTag = (tag2) => {
  if (shouldScopeCustomElement(tag2)) {
    return getCustomElementsScopingSuffix();
  }
};
var getScopedVarName = (name21) => {
  const versionStr = `v${VersionInfo_default.version.replaceAll(".", "-")}`;
  const expr = /(--_?ui5)([^,:)\s]+)/g;
  return name21.replaceAll(expr, `$1-${versionStr}$2`);
};

// node_modules/@ui5/webcomponents-base/dist/UI5ElementMetadata.js
var UI5ElementMetadata = class {
  constructor(metadata) {
    this.metadata = metadata;
  }
  getInitialState() {
    if (Object.prototype.hasOwnProperty.call(this, "_initialState")) {
      return this._initialState;
    }
    const initialState = {};
    const slotsAreManaged = this.slotsAreManaged();
    const props = this.getProperties();
    for (const propName in props) {
      const propType = props[propName].type;
      const propDefaultValue = props[propName].defaultValue;
      if (propType === Boolean) {
        initialState[propName] = false;
        if (propDefaultValue !== void 0) {
          console.warn("The 'defaultValue' metadata key is ignored for all booleans properties, they would be initialized with 'false' by default");
        }
      } else if (props[propName].multiple) {
        Object.defineProperty(initialState, propName, {
          enumerable: true,
          get() {
            return [];
          }
        });
      } else if (propType === Object) {
        Object.defineProperty(initialState, propName, {
          enumerable: true,
          get() {
            return "defaultValue" in props[propName] ? props[propName].defaultValue : {};
          }
        });
      } else if (propType === String) {
        initialState[propName] = "defaultValue" in props[propName] ? props[propName].defaultValue : "";
      } else {
        initialState[propName] = propDefaultValue;
      }
    }
    if (slotsAreManaged) {
      const slots = this.getSlots();
      for (const [slotName, slotData] of Object.entries(slots)) {
        const propertyName = slotData.propertyName || slotName;
        initialState[propertyName] = [];
      }
    }
    this._initialState = initialState;
    return initialState;
  }
  /**
   * Validates the property's value and returns it if correct
   * or returns the default value if not.
   * **Note:** Only intended for use by UI5Element.js
   * @public
   */
  static validatePropertyValue(value, propData) {
    const isMultiple = propData.multiple;
    if (isMultiple && value) {
      return value.map((propValue) => validateSingleProperty(propValue, propData));
    }
    return validateSingleProperty(value, propData);
  }
  /**
   * Validates the slot's value and returns it if correct
   * or throws an exception if not.
   * **Note:** Only intended for use by UI5Element.js
   * @public
   */
  static validateSlotValue(value, slotData) {
    return validateSingleSlot(value, slotData);
  }
  /**
   * Returns the tag of the UI5 Element without the scope
   * @public
   */
  getPureTag() {
    return this.metadata.tag || "";
  }
  /**
   * Returns the tag of the UI5 Element
   * @public
   */
  getTag() {
    const pureTag = this.metadata.tag;
    if (!pureTag) {
      return "";
    }
    const suffix = getEffectiveScopingSuffixForTag(pureTag);
    if (!suffix) {
      return pureTag;
    }
    return `${pureTag}-${suffix}`;
  }
  /**
   * Determines whether a property should have an attribute counterpart
   * @public
   * @param propName
   */
  hasAttribute(propName) {
    const propData = this.getProperties()[propName];
    return propData.type !== Object && !propData.noAttribute && !propData.multiple;
  }
  /**
   * Returns an array with the properties of the UI5 Element (in camelCase)
   * @public
   */
  getPropertiesList() {
    return Object.keys(this.getProperties());
  }
  /**
   * Returns an array with the attributes of the UI5 Element (in kebab-case)
   * @public
   */
  getAttributesList() {
    return this.getPropertiesList().filter(this.hasAttribute.bind(this)).map(camelToKebabCase);
  }
  /**
   * Determines whether this UI5 Element has a default slot of type Node, therefore can slot text
   */
  canSlotText() {
    var _a3;
    return ((_a3 = this.getSlots().default) == null ? void 0 : _a3.type) === Node;
  }
  /**
   * Determines whether this UI5 Element supports any slots
   * @public
   */
  hasSlots() {
    return !!Object.entries(this.getSlots()).length;
  }
  /**
   * Determines whether this UI5 Element supports any slots with "individualSlots: true"
   * @public
   */
  hasIndividualSlots() {
    return this.slotsAreManaged() && Object.values(this.getSlots()).some((slotData) => slotData.individualSlots);
  }
  /**
   * Determines whether this UI5 Element needs to invalidate if children are added/removed/changed
   * @public
   */
  slotsAreManaged() {
    return !!this.metadata.managedSlots;
  }
  /**
   * Determines whether this control supports F6 fast navigation
   * @public
   */
  supportsF6FastNavigation() {
    return !!this.metadata.fastNavigation;
  }
  /**
   * Returns an object with key-value pairs of properties and their metadata definitions
   * @public
   */
  getProperties() {
    if (!this.metadata.properties) {
      this.metadata.properties = {};
    }
    return this.metadata.properties;
  }
  /**
   * Returns an object with key-value pairs of events and their metadata definitions
   * @public
   */
  getEvents() {
    if (!this.metadata.events) {
      this.metadata.events = {};
    }
    return this.metadata.events;
  }
  /**
   * Returns an object with key-value pairs of slots and their metadata definitions
   * @public
   */
  getSlots() {
    if (!this.metadata.slots) {
      this.metadata.slots = {};
    }
    return this.metadata.slots;
  }
  /**
   * Determines whether this UI5 Element has any translatable texts (needs to be invalidated upon language change)
   */
  isLanguageAware() {
    return !!this.metadata.languageAware;
  }
  /**
   * Determines whether this UI5 Element has any theme dependant carachteristics.
   */
  isThemeAware() {
    return !!this.metadata.themeAware;
  }
  /**
   * Matches a changed entity (property/slot) with the given name against the "invalidateOnChildChange" configuration
   * and determines whether this should cause and invalidation
   *
   * @param slotName the name of the slot in which a child was changed
   * @param type the type of change in the child: "property" or "slot"
   * @param name the name of the property/slot that changed
   */
  shouldInvalidateOnChildChange(slotName, type, name21) {
    const config = this.getSlots()[slotName].invalidateOnChildChange;
    if (config === void 0) {
      return false;
    }
    if (typeof config === "boolean") {
      return config;
    }
    if (typeof config === "object") {
      if (type === "property") {
        if (config.properties === void 0) {
          return false;
        }
        if (typeof config.properties === "boolean") {
          return config.properties;
        }
        if (Array.isArray(config.properties)) {
          return config.properties.includes(name21);
        }
        throw new Error("Wrong format for invalidateOnChildChange.properties: boolean or array is expected");
      }
      if (type === "slot") {
        if (config.slots === void 0) {
          return false;
        }
        if (typeof config.slots === "boolean") {
          return config.slots;
        }
        if (Array.isArray(config.slots)) {
          return config.slots.includes(name21);
        }
        throw new Error("Wrong format for invalidateOnChildChange.slots: boolean or array is expected");
      }
    }
    throw new Error("Wrong format for invalidateOnChildChange: boolean or object is expected");
  }
};
var validateSingleProperty = (value, propData) => {
  const propertyType = propData.type;
  let propertyValidator = propData.validator;
  if (propertyType && propertyType.isDataTypeClass) {
    propertyValidator = propertyType;
  }
  if (propertyValidator) {
    return propertyValidator.isValid(value) ? value : propData.defaultValue;
  }
  if (!propertyType || propertyType === String) {
    return typeof value === "string" || typeof value === "undefined" || value === null ? value : value.toString();
  }
  if (propertyType === Boolean) {
    return typeof value === "boolean" ? value : false;
  }
  if (propertyType === Object) {
    return typeof value === "object" ? value : propData.defaultValue;
  }
  return value in propertyType ? value : propData.defaultValue;
};
var validateSingleSlot = (value, slotData) => {
  value && getSlottedNodes(value).forEach((el) => {
    if (!(el instanceof slotData.type)) {
      throw new Error(`The element is not of type ${slotData.type.toString()}`);
    }
  });
  return value;
};
var UI5ElementMetadata_default = UI5ElementMetadata;

// node_modules/@ui5/webcomponents-base/dist/StaticArea.js
var StaticArea = class extends HTMLElement {
};
if (!customElements.get("ui5-static-area")) {
  customElements.define("ui5-static-area", StaticArea);
}

// node_modules/@ui5/webcomponents-base/dist/theming/CustomStyle.js
var getEventProvider = () => getSharedResource_default("CustomStyle.eventProvider", new EventProvider_default());
var CUSTOM_CSS_CHANGE = "CustomCSSChange";
var attachCustomCSSChange = (listener) => {
  getEventProvider().attachEvent(CUSTOM_CSS_CHANGE, listener);
};
var getCustomCSSFor = () => getSharedResource_default("CustomStyle.customCSSFor", {});
var skipRerender;
attachCustomCSSChange((tag2) => {
  if (!skipRerender) {
    reRenderAllUI5Elements({ tag: tag2 });
  }
});
var getCustomCSS = (tag2) => {
  const customCSSFor = getCustomCSSFor();
  return customCSSFor[tag2] ? customCSSFor[tag2].join("") : "";
};

// node_modules/@ui5/webcomponents-base/dist/theming/getStylesString.js
var MAX_DEPTH_INHERITED_CLASSES = 10;
var getStylesString = (styles) => {
  if (Array.isArray(styles)) {
    return styles.filter((style) => !!style).flat(MAX_DEPTH_INHERITED_CLASSES).map((style) => {
      return typeof style === "string" ? style : style.content;
    }).join(" ");
  }
  return typeof styles === "string" ? styles : styles.content;
};
var getStylesString_default = getStylesString;

// node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveStyle.js
var effectiveStyleMap = /* @__PURE__ */ new Map();
attachCustomCSSChange((tag2) => {
  effectiveStyleMap.delete(`${tag2}_normal`);
});
var getEffectiveStyle = (ElementClass, forStaticArea = false) => {
  const tag2 = ElementClass.getMetadata().getTag();
  const key = `${tag2}_${forStaticArea ? "static" : "normal"}`;
  const openUI5Enablement = getFeature("OpenUI5Enablement");
  if (!effectiveStyleMap.has(key)) {
    let effectiveStyle;
    let busyIndicatorStyles = "";
    if (openUI5Enablement) {
      busyIndicatorStyles = getStylesString_default(openUI5Enablement.getBusyIndicatorStyles());
    }
    if (forStaticArea) {
      effectiveStyle = getStylesString_default(ElementClass.staticAreaStyles);
    } else {
      const customStyle = getCustomCSS(tag2) || "";
      const builtInStyles = getStylesString_default(ElementClass.styles);
      effectiveStyle = `${builtInStyles} ${customStyle}`;
    }
    effectiveStyle = `${effectiveStyle} ${busyIndicatorStyles}`;
    effectiveStyleMap.set(key, effectiveStyle);
  }
  return effectiveStyleMap.get(key);
};
var getEffectiveStyle_default = getEffectiveStyle;

// node_modules/@ui5/webcomponents-base/dist/theming/getConstructableStyle.js
var constructableStyleMap = /* @__PURE__ */ new Map();
attachCustomCSSChange((tag2) => {
  constructableStyleMap.delete(`${tag2}_normal`);
});
var getConstructableStyle = (ElementClass, forStaticArea = false) => {
  const tag2 = ElementClass.getMetadata().getTag();
  const key = `${tag2}_${forStaticArea ? "static" : "normal"}`;
  if (!constructableStyleMap.has(key)) {
    const styleContent = getEffectiveStyle_default(ElementClass, forStaticArea);
    const style = new CSSStyleSheet();
    style.replaceSync(styleContent);
    constructableStyleMap.set(key, [style]);
  }
  return constructableStyleMap.get(key);
};
var getConstructableStyle_default = getConstructableStyle;

// node_modules/@ui5/webcomponents-base/dist/theming/getEffectiveLinksHrefs.js
var MAX_DEPTH_INHERITED_CLASSES2 = 10;
var getEffectiveLinksHrefs = (ElementClass, forStaticArea = false) => {
  const stylesData = ElementClass[forStaticArea ? "staticAreaStyles" : "styles"];
  if (!stylesData) {
    return;
  }
  const stylesDataArray = Array.isArray(stylesData) ? stylesData : [stylesData];
  const openUI5Enablement = getFeature("OpenUI5Enablement");
  if (openUI5Enablement) {
    stylesDataArray.push(openUI5Enablement.getBusyIndicatorStyles());
  }
  return stylesDataArray.flat(MAX_DEPTH_INHERITED_CLASSES2).filter((data) => !!data).map((data) => getUrl(data.packageName, data.fileName));
};
var getEffectiveLinksHrefs_default = getEffectiveLinksHrefs;

// node_modules/@ui5/webcomponents-base/dist/updateShadowRoot.js
var updateShadowRoot = (element, forStaticArea = false) => {
  let styleStrOrHrefsArr;
  const ctor = element.constructor;
  const shadowRoot = forStaticArea ? element.staticAreaItem.shadowRoot : element.shadowRoot;
  let renderResult;
  if (forStaticArea) {
    renderResult = element.renderStatic();
  } else {
    renderResult = element.render();
  }
  if (!shadowRoot) {
    console.warn(`There is no shadow root to update`);
    return;
  }
  if (shouldUseLinks()) {
    styleStrOrHrefsArr = getEffectiveLinksHrefs_default(ctor, forStaticArea);
  } else if (document.adoptedStyleSheets && !isSafari()) {
    shadowRoot.adoptedStyleSheets = getConstructableStyle_default(ctor, forStaticArea);
  } else {
    styleStrOrHrefsArr = getEffectiveStyle_default(ctor, forStaticArea);
  }
  if (ctor.renderer) {
    ctor.renderer(renderResult, shadowRoot, styleStrOrHrefsArr, forStaticArea, { host: element });
    return;
  }
  ctor.render(renderResult, shadowRoot, styleStrOrHrefsArr, forStaticArea, { host: element });
};
var updateShadowRoot_default = updateShadowRoot;

// node_modules/@ui5/webcomponents-base/dist/util/getEffectiveContentDensity.js
var GLOBAL_CONTENT_DENSITY_CSS_VAR = "--_ui5_content_density";
var getEffectiveContentDensity = (el) => getComputedStyle(el).getPropertyValue(GLOBAL_CONTENT_DENSITY_CSS_VAR);
var getEffectiveContentDensity_default = getEffectiveContentDensity;

// node_modules/@ui5/webcomponents-base/dist/locale/getEffectiveDir.js
var getEffectiveDir = (element) => {
  if (element.matches(":dir(rtl)")) {
    return "rtl";
  }
  return "ltr";
};
var getEffectiveDir_default = getEffectiveDir;

// node_modules/@ui5/webcomponents-base/dist/StaticAreaItem.js
var pureTagName = "ui5-static-area-item";
var popupIntegrationAttr = "data-sap-ui-integration-popup-content";
var StaticAreaItem = class _StaticAreaItem extends HTMLElement {
  constructor() {
    super();
    this._rendered = false;
    this.attachShadow({ mode: "open" });
  }
  /**
   * @param ownerElement the UI5Element instance that owns this static area item
   */
  setOwnerElement(ownerElement) {
    this.ownerElement = ownerElement;
    this.classList.add(this.ownerElement._id);
    if (this.ownerElement.hasAttribute("data-ui5-static-stable")) {
      this.setAttribute("data-ui5-stable", this.ownerElement.getAttribute("data-ui5-static-stable"));
    }
  }
  /**
   * Updates the shadow root of the static area item with the latest state, if rendered
   */
  update() {
    if (this._rendered) {
      this.updateAdditionalProperties();
      updateShadowRoot_default(this.ownerElement, true);
    }
  }
  updateAdditionalProperties() {
    this._updateAdditionalAttrs();
    this._updateContentDensity();
    this._updateDirection();
  }
  /**
   * Sets the correct content density based on the owner element's state
   * @private
   */
  _updateContentDensity() {
    if (getEffectiveContentDensity_default(this.ownerElement) === "compact") {
      this.classList.add("sapUiSizeCompact");
      this.classList.add("ui5-content-density-compact");
    } else {
      this.classList.remove("sapUiSizeCompact");
      this.classList.remove("ui5-content-density-compact");
    }
  }
  _updateDirection() {
    if (this.ownerElement) {
      const dir = getEffectiveDir_default(this.ownerElement);
      if (dir === "rtl") {
        this.setAttribute("dir", dir);
      } else {
        this.removeAttribute("dir");
      }
    }
  }
  _updateAdditionalAttrs() {
    this.setAttribute(pureTagName, "");
    this.setAttribute(popupIntegrationAttr, "");
  }
  /**
   * Returns reference to the DOM element where the current fragment is added.
   * @protected
   */
  async getDomRef() {
    this.updateAdditionalProperties();
    if (!this._rendered) {
      this._rendered = true;
      updateShadowRoot_default(this.ownerElement, true);
    }
    await renderFinished();
    return this.shadowRoot;
  }
  static getTag() {
    const suffix = getEffectiveScopingSuffixForTag(pureTagName);
    if (!suffix) {
      return pureTagName;
    }
    return `${pureTagName}-${suffix}`;
  }
  static createInstance() {
    if (!customElements.get(_StaticAreaItem.getTag())) {
      customElements.define(_StaticAreaItem.getTag(), _StaticAreaItem);
    }
    return document.createElement(this.getTag());
  }
};
var StaticAreaItem_default = StaticAreaItem;

// node_modules/@ui5/webcomponents-base/dist/IgnoreCustomElements.js
var tagPrefixes = [];
var shouldIgnoreCustomElement = (tag2) => {
  return tagPrefixes.some((pref) => tag2.startsWith(pref));
};

// node_modules/@ui5/webcomponents-base/dist/DOMObserver.js
var observers = /* @__PURE__ */ new WeakMap();
var observeDOMNode = (node, callback, options) => {
  const observer = new MutationObserver(callback);
  observers.set(node, observer);
  observer.observe(node, options);
};
var unobserveDOMNode = (node) => {
  const observer = observers.get(node);
  if (observer) {
    observer.disconnect();
    observers.delete(node);
  }
};

// node_modules/@ui5/webcomponents-base/dist/config/NoConflict.js
var excludeList = [
  "value-changed",
  "click"
];
var noConflict;
var shouldFireOriginalEvent = (eventName) => {
  return excludeList.includes(eventName);
};
var shouldNotFireOriginalEvent = (eventName) => {
  const nc = getNoConflict2();
  return !(typeof nc !== "boolean" && nc.events && nc.events.includes && nc.events.includes(eventName));
};
var getNoConflict2 = () => {
  if (noConflict === void 0) {
    noConflict = getNoConflict();
  }
  return noConflict;
};
var skipOriginalEvent = (eventName) => {
  const nc = getNoConflict2();
  if (shouldFireOriginalEvent(eventName)) {
    return false;
  }
  if (nc === true) {
    return true;
  }
  return !shouldNotFireOriginalEvent(eventName);
};

// node_modules/@ui5/webcomponents-base/dist/util/isValidPropertyName.js
var allowList = [
  "disabled",
  "title",
  "hidden",
  "role",
  "draggable"
];
var isValidPropertyName = (name21) => {
  if (allowList.includes(name21) || name21.startsWith("aria")) {
    return true;
  }
  const classes = [
    HTMLElement,
    Element,
    Node
  ];
  return !classes.some((klass) => klass.prototype.hasOwnProperty(name21));
};
var isValidPropertyName_default = isValidPropertyName;

// node_modules/@ui5/webcomponents-base/dist/util/arraysAreEqual.js
var arraysAreEqual = (arr1, arr2) => {
  if (arr1.length !== arr2.length) {
    return false;
  }
  for (let i = 0; i < arr1.length; i++) {
    if (arr1[i] !== arr2[i]) {
      return false;
    }
  }
  return true;
};
var arraysAreEqual_default = arraysAreEqual;

// node_modules/@ui5/webcomponents-base/dist/theming/preloadLinks.js
var preloaded = /* @__PURE__ */ new Set();
var preloadLinks = (ElementClass) => {
  if (!shouldUseLinks() || !shouldPreloadLinks()) {
    return;
  }
  const linksHrefs = getEffectiveLinksHrefs_default(ElementClass, false) || [];
  const staticAreaLinksHrefs = getEffectiveLinksHrefs_default(ElementClass, true) || [];
  [...linksHrefs, ...staticAreaLinksHrefs].forEach((href) => {
    if (!preloaded.has(href)) {
      createLinkInHead_default(href, { rel: "preload", as: "style" });
      preloaded.add(href);
    }
  });
};
var preloadLinks_default = preloadLinks;

// node_modules/@ui5/webcomponents-base/dist/renderer/executeTemplate.js
var executeTemplate = (template, component) => {
  const tagsToScope = getTagsToScope(component);
  const scope = getCustomElementsScopingSuffix();
  return template.call(component, component, tagsToScope, scope);
};
var getTagsToScope = (component) => {
  const ctor = component.constructor;
  const componentTag = ctor.getMetadata().getPureTag();
  const tagsToScope = ctor.getUniqueDependencies().map((dep) => dep.getMetadata().getPureTag()).filter(shouldScopeCustomElement);
  if (shouldScopeCustomElement(componentTag)) {
    tagsToScope.push(componentTag);
  }
  return tagsToScope;
};
var executeTemplate_default = executeTemplate;

// node_modules/@ui5/webcomponents-base/dist/UI5Element.js
var autoId = 0;
var elementTimeouts = /* @__PURE__ */ new Map();
var uniqueDependenciesCache = /* @__PURE__ */ new Map();
function _invalidate(changeInfo) {
  if (this._suppressInvalidation) {
    return;
  }
  this.onInvalidation(changeInfo);
  this._changedState.push(changeInfo);
  renderDeferred(this);
  this._invalidationEventProvider.fireEvent("invalidate", { ...changeInfo, target: this });
}
function getPropertyDescriptor(proto, name21) {
  do {
    const descriptor = Object.getOwnPropertyDescriptor(proto, name21);
    if (descriptor) {
      return descriptor;
    }
    proto = Object.getPrototypeOf(proto);
  } while (proto && proto !== HTMLElement.prototype);
}
var UI5Element = class _UI5Element extends HTMLElement {
  constructor() {
    super();
    const ctor = this.constructor;
    this._changedState = [];
    this._suppressInvalidation = true;
    this._inDOM = false;
    this._fullyConnected = false;
    this._childChangeListeners = /* @__PURE__ */ new Map();
    this._slotChangeListeners = /* @__PURE__ */ new Map();
    this._invalidationEventProvider = new EventProvider_default();
    this._componentStateFinalizedEventProvider = new EventProvider_default();
    let deferredResolve;
    this._domRefReadyPromise = new Promise((resolve) => {
      deferredResolve = resolve;
    });
    this._domRefReadyPromise._deferredResolve = deferredResolve;
    this._doNotSyncAttributes = /* @__PURE__ */ new Set();
    this._state = { ...ctor.getMetadata().getInitialState() };
    this._upgradeAllProperties();
    if (ctor._needsShadowDOM()) {
      this.attachShadow({ mode: "open" });
    }
  }
  /**
   * Returns a unique ID for this UI5 Element
   *
   * @deprecated - This property is not guaranteed in future releases
   * @protected
   */
  get _id() {
    if (!this.__id) {
      this.__id = `ui5wc_${++autoId}`;
    }
    return this.__id;
  }
  render() {
    const template = this.constructor.template;
    return executeTemplate_default(template, this);
  }
  renderStatic() {
    const template = this.constructor.staticAreaTemplate;
    return executeTemplate_default(template, this);
  }
  /**
   * Do not call this method from derivatives of UI5Element, use "onEnterDOM" only
   * @private
   */
  async connectedCallback() {
    const ctor = this.constructor;
    this.setAttribute(ctor.getMetadata().getPureTag(), "");
    if (ctor.getMetadata().supportsF6FastNavigation()) {
      this.setAttribute("data-sap-ui-fastnavgroup", "true");
    }
    const slotsAreManaged = ctor.getMetadata().slotsAreManaged();
    this._inDOM = true;
    if (slotsAreManaged) {
      this._startObservingDOMChildren();
      await this._processChildren();
    }
    if (!this._inDOM) {
      return;
    }
    renderImmediately(this);
    this._domRefReadyPromise._deferredResolve();
    this._fullyConnected = true;
    this.onEnterDOM();
  }
  /**
   * Do not call this method from derivatives of UI5Element, use "onExitDOM" only
   * @private
   */
  disconnectedCallback() {
    const ctor = this.constructor;
    const slotsAreManaged = ctor.getMetadata().slotsAreManaged();
    this._inDOM = false;
    if (slotsAreManaged) {
      this._stopObservingDOMChildren();
    }
    if (this._fullyConnected) {
      this.onExitDOM();
      this._fullyConnected = false;
    }
    if (this.staticAreaItem && this.staticAreaItem.parentElement) {
      this.staticAreaItem.parentElement.removeChild(this.staticAreaItem);
    }
    cancelRender(this);
  }
  /**
   * Called every time before the component renders.
   * @public
   */
  onBeforeRendering() {
  }
  /**
   * Called every time after the component renders.
   * @public
   */
  onAfterRendering() {
  }
  /**
   * Called on connectedCallback - added to the DOM.
   * @public
   */
  onEnterDOM() {
  }
  /**
   * Called on disconnectedCallback - removed from the DOM.
   * @public
   */
  onExitDOM() {
  }
  /**
   * @private
   */
  _startObservingDOMChildren() {
    const ctor = this.constructor;
    const metadata = ctor.getMetadata();
    const shouldObserveChildren = metadata.hasSlots();
    if (!shouldObserveChildren) {
      return;
    }
    const canSlotText = metadata.canSlotText();
    const hasClonedSlot = Object.keys(metadata.getSlots()).some((slotName) => metadata.getSlots()[slotName].cloned);
    const mutationObserverOptions = {
      childList: true,
      subtree: canSlotText || hasClonedSlot,
      characterData: canSlotText
    };
    observeDOMNode(this, this._processChildren.bind(this), mutationObserverOptions);
  }
  /**
   * @private
   */
  _stopObservingDOMChildren() {
    unobserveDOMNode(this);
  }
  /**
   * Note: this method is also manually called by "compatibility/patchNodeValue.js"
   * @private
   */
  async _processChildren() {
    const hasSlots = this.constructor.getMetadata().hasSlots();
    if (hasSlots) {
      await this._updateSlots();
    }
  }
  /**
   * @private
   */
  async _updateSlots() {
    const ctor = this.constructor;
    const slotsMap = ctor.getMetadata().getSlots();
    const canSlotText = ctor.getMetadata().canSlotText();
    const domChildren = Array.from(canSlotText ? this.childNodes : this.children);
    const slotsCachedContentMap = /* @__PURE__ */ new Map();
    const propertyNameToSlotMap = /* @__PURE__ */ new Map();
    for (const [slotName, slotData] of Object.entries(slotsMap)) {
      const propertyName = slotData.propertyName || slotName;
      propertyNameToSlotMap.set(propertyName, slotName);
      slotsCachedContentMap.set(propertyName, [...this._state[propertyName]]);
      this._clearSlot(slotName, slotData);
    }
    const autoIncrementMap = /* @__PURE__ */ new Map();
    const slottedChildrenMap = /* @__PURE__ */ new Map();
    const allChildrenUpgraded = domChildren.map(async (child, idx) => {
      const slotName = getSlotName(child);
      const slotData = slotsMap[slotName];
      if (slotData === void 0) {
        if (slotName !== "default") {
          const validValues = Object.keys(slotsMap).join(", ");
          console.warn(`Unknown slotName: ${slotName}, ignoring`, child, `Valid values are: ${validValues}`);
        }
        return;
      }
      if (slotData.individualSlots) {
        const nextIndex = (autoIncrementMap.get(slotName) || 0) + 1;
        autoIncrementMap.set(slotName, nextIndex);
        child._individualSlot = `${slotName}-${nextIndex}`;
      }
      if (child instanceof HTMLElement) {
        const localName = child.localName;
        const shouldWaitForCustomElement = localName.includes("-") && !shouldIgnoreCustomElement(localName);
        if (shouldWaitForCustomElement) {
          const isDefined = customElements.get(localName);
          if (!isDefined) {
            const whenDefinedPromise = customElements.whenDefined(localName);
            let timeoutPromise = elementTimeouts.get(localName);
            if (!timeoutPromise) {
              timeoutPromise = new Promise((resolve) => setTimeout(resolve, 1e3));
              elementTimeouts.set(localName, timeoutPromise);
            }
            await Promise.race([whenDefinedPromise, timeoutPromise]);
          }
          customElements.upgrade(child);
        }
      }
      child = ctor.getMetadata().constructor.validateSlotValue(child, slotData);
      if (instanceOfUI5Element(child) && slotData.invalidateOnChildChange) {
        const childChangeListener = this._getChildChangeListener(slotName);
        if (childChangeListener) {
          child.attachInvalidate.call(child, childChangeListener);
        }
      }
      if (child instanceof HTMLSlotElement) {
        this._attachSlotChange(child, slotName);
      }
      const propertyName = slotData.propertyName || slotName;
      if (slottedChildrenMap.has(propertyName)) {
        slottedChildrenMap.get(propertyName).push({ child, idx });
      } else {
        slottedChildrenMap.set(propertyName, [{ child, idx }]);
      }
    });
    await Promise.all(allChildrenUpgraded);
    slottedChildrenMap.forEach((children, propertyName) => {
      this._state[propertyName] = children.sort((a, b) => a.idx - b.idx).map((_) => _.child);
    });
    let invalidated = false;
    for (const [slotName, slotData] of Object.entries(slotsMap)) {
      const propertyName = slotData.propertyName || slotName;
      if (!arraysAreEqual_default(slotsCachedContentMap.get(propertyName), this._state[propertyName])) {
        _invalidate.call(this, {
          type: "slot",
          name: propertyNameToSlotMap.get(propertyName),
          reason: "children"
        });
        invalidated = true;
      }
    }
    if (!invalidated) {
      _invalidate.call(this, {
        type: "slot",
        name: "default",
        reason: "textcontent"
      });
    }
  }
  /**
   * Removes all children from the slot and detaches listeners, if any
   * @private
   */
  _clearSlot(slotName, slotData) {
    const propertyName = slotData.propertyName || slotName;
    const children = this._state[propertyName];
    children.forEach((child) => {
      if (instanceOfUI5Element(child)) {
        const childChangeListener = this._getChildChangeListener(slotName);
        if (childChangeListener) {
          child.detachInvalidate.call(child, childChangeListener);
        }
      }
      if (child instanceof HTMLSlotElement) {
        this._detachSlotChange(child, slotName);
      }
    });
    this._state[propertyName] = [];
  }
  /**
   * Attach a callback that will be executed whenever the component is invalidated
   *
   * @param callback
   * @public
   */
  attachInvalidate(callback) {
    this._invalidationEventProvider.attachEvent("invalidate", callback);
  }
  /**
   * Detach the callback that is executed whenever the component is invalidated
   *
   * @param callback
   * @public
   */
  detachInvalidate(callback) {
    this._invalidationEventProvider.detachEvent("invalidate", callback);
  }
  /**
   * Callback that is executed whenever a monitored child changes its state
   *
   * @param slotName the slot in which a child was invalidated
   * @param childChangeInfo the changeInfo object for the child in the given slot
   * @private
   */
  _onChildChange(slotName, childChangeInfo) {
    if (!this.constructor.getMetadata().shouldInvalidateOnChildChange(slotName, childChangeInfo.type, childChangeInfo.name)) {
      return;
    }
    _invalidate.call(this, {
      type: "slot",
      name: slotName,
      reason: "childchange",
      child: childChangeInfo.target
    });
  }
  /**
   * Do not override this method in derivatives of UI5Element
   * @private
   */
  attributeChangedCallback(name21, oldValue, newValue) {
    let newPropertyValue;
    if (this._doNotSyncAttributes.has(name21)) {
      return;
    }
    const properties = this.constructor.getMetadata().getProperties();
    const realName = name21.replace(/^ui5-/, "");
    const nameInCamelCase = kebabToCamelCase(realName);
    if (properties.hasOwnProperty(nameInCamelCase)) {
      const propData = properties[nameInCamelCase];
      const propertyType = propData.type;
      let propertyValidator = propData.validator;
      if (propertyType && propertyType.isDataTypeClass) {
        propertyValidator = propertyType;
      }
      if (propertyValidator) {
        newPropertyValue = propertyValidator.attributeToProperty(newValue);
      } else if (propertyType === Boolean) {
        newPropertyValue = newValue !== null;
      } else {
        newPropertyValue = newValue;
      }
      this[nameInCamelCase] = newPropertyValue;
    }
  }
  /**
   * @private
   */
  _updateAttribute(name21, newValue) {
    const ctor = this.constructor;
    if (!ctor.getMetadata().hasAttribute(name21)) {
      return;
    }
    const properties = ctor.getMetadata().getProperties();
    const propData = properties[name21];
    const propertyType = propData.type;
    let propertyValidator = propData.validator;
    const attrName = camelToKebabCase(name21);
    const attrValue = this.getAttribute(attrName);
    if (propertyType && propertyType.isDataTypeClass) {
      propertyValidator = propertyType;
    }
    if (propertyValidator) {
      const newAttrValue = propertyValidator.propertyToAttribute(newValue);
      if (newAttrValue === null) {
        this._doNotSyncAttributes.add(attrName);
        this.removeAttribute(attrName);
        this._doNotSyncAttributes.delete(attrName);
      } else {
        this.setAttribute(attrName, newAttrValue);
      }
    } else if (propertyType === Boolean) {
      if (newValue === true && attrValue === null) {
        this.setAttribute(attrName, "");
      } else if (newValue === false && attrValue !== null) {
        this.removeAttribute(attrName);
      }
    } else if (typeof newValue !== "object") {
      if (attrValue !== newValue) {
        this.setAttribute(attrName, newValue);
      }
    }
  }
  /**
   * @private
   */
  _upgradeProperty(propertyName) {
    if (this.hasOwnProperty(propertyName)) {
      const value = this[propertyName];
      delete this[propertyName];
      this[propertyName] = value;
    }
  }
  /**
   * @private
   */
  _upgradeAllProperties() {
    const allProps = this.constructor.getMetadata().getPropertiesList();
    allProps.forEach(this._upgradeProperty.bind(this));
  }
  /**
   * Returns a singleton event listener for the "change" event of a child in a given slot
   *
   * @param slotName the name of the slot, where the child is
   * @private
   */
  _getChildChangeListener(slotName) {
    if (!this._childChangeListeners.has(slotName)) {
      this._childChangeListeners.set(slotName, this._onChildChange.bind(this, slotName));
    }
    return this._childChangeListeners.get(slotName);
  }
  /**
   * Returns a singleton slotchange event listener that invalidates the component due to changes in the given slot
   *
   * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is
   * @private
   */
  _getSlotChangeListener(slotName) {
    if (!this._slotChangeListeners.has(slotName)) {
      this._slotChangeListeners.set(slotName, this._onSlotChange.bind(this, slotName));
    }
    return this._slotChangeListeners.get(slotName);
  }
  /**
   * @private
   */
  _attachSlotChange(child, slotName) {
    const slotChangeListener = this._getSlotChangeListener(slotName);
    if (slotChangeListener) {
      child.addEventListener("slotchange", slotChangeListener);
    }
  }
  /**
   * @private
   */
  _detachSlotChange(child, slotName) {
    child.removeEventListener("slotchange", this._getSlotChangeListener(slotName));
  }
  /**
   * Whenever a slot element is slotted inside a UI5 Web Component, its slotchange event invalidates the component
   *
   * @param slotName the name of the slot, where the slot element (whose slotchange event we're listening to) is
   * @private
   */
  _onSlotChange(slotName) {
    _invalidate.call(this, {
      type: "slot",
      name: slotName,
      reason: "slotchange"
    });
  }
  /**
   * A callback that is executed each time an already rendered component is invalidated (scheduled for re-rendering)
   *
   * @param  changeInfo An object with information about the change that caused invalidation.
   * The object can have the following properties:
   *  - type: (property|slot) tells what caused the invalidation
   *   1) property: a property value was changed either directly or as a result of changing the corresponding attribute
   *   2) slot: a slotted node(nodes) changed in one of several ways (see "reason")
   *
   *  - name: the name of the property or slot that caused the invalidation
   *
   *  - reason: (children|textcontent|childchange|slotchange) relevant only for type="slot" only and tells exactly what changed in the slot
   *   1) children: immediate children (HTML elements or text nodes) were added, removed or reordered in the slot
   *   2) textcontent: text nodes in the slot changed value (or nested text nodes were added or changed value). Can only trigger for slots of "type: Node"
   *   3) slotchange: a slot element, slotted inside that slot had its "slotchange" event listener called. This practically means that transitively slotted children changed.
   *      Can only trigger if the child of a slot is a slot element itself.
   *   4) childchange: indicates that a UI5Element child in that slot was invalidated and in turn invalidated the component.
   *      Can only trigger for slots with "invalidateOnChildChange" metadata descriptor
   *
   *  - newValue: the new value of the property (for type="property" only)
   *
   *  - oldValue: the old value of the property (for type="property" only)
   *
   *  - child the child that was changed (for type="slot" and reason="childchange" only)
   *
   * @public
   */
  onInvalidation(changeInfo) {
  }
  // eslint-disable-line
  /**
   * Do not call this method directly, only intended to be called by js
   * @protected
   */
  _render() {
    const ctor = this.constructor;
    const hasIndividualSlots = ctor.getMetadata().hasIndividualSlots();
    this._suppressInvalidation = true;
    this.onBeforeRendering();
    this._componentStateFinalizedEventProvider.fireEvent("componentStateFinalized");
    this._suppressInvalidation = false;
    this._changedState = [];
    if (ctor._needsShadowDOM()) {
      updateShadowRoot_default(this);
    }
    if (this.staticAreaItem) {
      this.staticAreaItem.update();
    }
    if (hasIndividualSlots) {
      this._assignIndividualSlotsToChildren();
    }
    this.onAfterRendering();
  }
  /**
   * @private
   */
  _assignIndividualSlotsToChildren() {
    const domChildren = Array.from(this.children);
    domChildren.forEach((child) => {
      if (child._individualSlot) {
        child.setAttribute("slot", child._individualSlot);
      }
    });
  }
  /**
   * @private
   */
  _waitForDomRef() {
    return this._domRefReadyPromise;
  }
  /**
   * Returns the DOM Element inside the Shadow Root that corresponds to the opening tag in the UI5 Web Component's template
   * *Note:* For logical (abstract) elements (items, options, etc...), returns the part of the parent's DOM that represents this option
   * Use this method instead of "this.shadowRoot" to read the Shadow DOM, if ever necessary
   *
   * @public
   */
  getDomRef() {
    if (typeof this._getRealDomRef === "function") {
      return this._getRealDomRef();
    }
    if (!this.shadowRoot || this.shadowRoot.children.length === 0) {
      return;
    }
    const children = [...this.shadowRoot.children].filter((child) => !["link", "style"].includes(child.localName));
    if (children.length !== 1) {
      console.warn(`The shadow DOM for ${this.constructor.getMetadata().getTag()} does not have a top level element, the getDomRef() method might not work as expected`);
    }
    return children[0];
  }
  /**
   * Returns the DOM Element marked with "data-sap-focus-ref" inside the template.
   * This is the element that will receive the focus by default.
   * @public
   */
  getFocusDomRef() {
    const domRef = this.getDomRef();
    if (domRef) {
      const focusRef = domRef.querySelector("[data-sap-focus-ref]");
      return focusRef || domRef;
    }
  }
  /**
   * Waits for dom ref and then returns the DOM Element marked with "data-sap-focus-ref" inside the template.
   * This is the element that will receive the focus by default.
   * @public
   */
  async getFocusDomRefAsync() {
    await this._waitForDomRef();
    return this.getFocusDomRef();
  }
  /**
   * Set the focus to the element, returned by "getFocusDomRef()" (marked by "data-sap-focus-ref")
   * @param focusOptions additional options for the focus
   * @public
   */
  async focus(focusOptions) {
    await this._waitForDomRef();
    const focusDomRef = this.getFocusDomRef();
    if (focusDomRef && typeof focusDomRef.focus === "function") {
      focusDomRef.focus(focusOptions);
    }
  }
  /**
   *
   * @public
   * @param name - name of the event
   * @param data - additional data for the event
   * @param cancelable - true, if the user can call preventDefault on the event object
   * @param bubbles - true, if the event bubbles
   * @returns false, if the event was cancelled (preventDefault called), true otherwise
   */
  fireEvent(name21, data, cancelable = false, bubbles = true) {
    const eventResult = this._fireEvent(name21, data, cancelable, bubbles);
    const camelCaseEventName = kebabToCamelCase(name21);
    if (camelCaseEventName !== name21) {
      return eventResult && this._fireEvent(camelCaseEventName, data, cancelable, bubbles);
    }
    return eventResult;
  }
  _fireEvent(name21, data, cancelable = false, bubbles = true) {
    const noConflictEvent = new CustomEvent(`ui5-${name21}`, {
      detail: data,
      composed: false,
      bubbles,
      cancelable
    });
    const noConflictEventResult = this.dispatchEvent(noConflictEvent);
    if (skipOriginalEvent(name21)) {
      return noConflictEventResult;
    }
    const normalEvent = new CustomEvent(name21, {
      detail: data,
      composed: false,
      bubbles,
      cancelable
    });
    const normalEventResult = this.dispatchEvent(normalEvent);
    return normalEventResult && noConflictEventResult;
  }
  /**
   * Returns the actual children, associated with a slot.
   * Useful when there are transitive slots in nested component scenarios and you don't want to get a list of the slots, but rather of their content.
   * @public
   */
  getSlottedNodes(slotName) {
    return getSlottedNodesList(this[slotName]);
  }
  /**
   * Attach a callback that will be executed whenever the component's state is finalized
   *
   * @param callback
   * @public
   */
  attachComponentStateFinalized(callback) {
    this._componentStateFinalizedEventProvider.attachEvent("componentStateFinalized", callback);
  }
  /**
   * Detach the callback that is executed whenever the component's state is finalized
   *
   * @param callback
   * @public
   */
  detachComponentStateFinalized(callback) {
    this._componentStateFinalizedEventProvider.detachEvent("componentStateFinalized", callback);
  }
  /**
   * Determines whether the component should be rendered in RTL mode or not.
   * Returns: "rtl", "ltr" or undefined
   *
   * @public
   * @default undefined
   */
  get effectiveDir() {
    markAsRtlAware(this.constructor);
    return getEffectiveDir_default(this);
  }
  /**
   * Used to duck-type UI5 elements without using instanceof
   * @public
   * @default true
   */
  get isUI5Element() {
    return true;
  }
  get classes() {
    return {};
  }
  /**
   * Returns the component accessibility info.
   * @private
   */
  get accessibilityInfo() {
    return {};
  }
  /**
   * Do not override this method in derivatives of UI5Element, use metadata properties instead
   * @private
   */
  static get observedAttributes() {
    return this.getMetadata().getAttributesList();
  }
  /**
   * @private
   */
  static _needsShadowDOM() {
    return !!this.template || Object.prototype.hasOwnProperty.call(this.prototype, "render");
  }
  /**
   * @private
   */
  static _needsStaticArea() {
    return !!this.staticAreaTemplate || Object.prototype.hasOwnProperty.call(this.prototype, "renderStatic");
  }
  /**
   * @public
   */
  getStaticAreaItemDomRef() {
    if (!this.constructor._needsStaticArea()) {
      throw new Error("This component does not use the static area");
    }
    if (!this.staticAreaItem) {
      this.staticAreaItem = StaticAreaItem_default.createInstance();
      this.staticAreaItem.setOwnerElement(this);
    }
    if (!this.staticAreaItem.parentElement) {
      getSingletonElementInstance_default("ui5-static-area").appendChild(this.staticAreaItem);
    }
    return this.staticAreaItem.getDomRef();
  }
  /**
   * @private
   */
  static _generateAccessors() {
    const proto = this.prototype;
    const slotsAreManaged = this.getMetadata().slotsAreManaged();
    const properties = this.getMetadata().getProperties();
    for (const [prop, propData] of Object.entries(properties)) {
      if (!isValidPropertyName_default(prop)) {
        console.warn(`"${prop}" is not a valid property name. Use a name that does not collide with DOM APIs`);
      }
      if (propData.type === Boolean && propData.defaultValue) {
        throw new Error(`Cannot set a default value for property "${prop}". All booleans are false by default.`);
      }
      if (propData.type === Array) {
        throw new Error(`Wrong type for property "${prop}". Properties cannot be of type Array - use "multiple: true" and set "type" to the single value type, such as "String", "Object", etc...`);
      }
      if (propData.type === Object && propData.defaultValue) {
        throw new Error(`Cannot set a default value for property "${prop}". All properties of type "Object" are empty objects by default.`);
      }
      if (propData.multiple && propData.defaultValue) {
        throw new Error(`Cannot set a default value for property "${prop}". All multiple properties are empty arrays by default.`);
      }
      const descriptor = getPropertyDescriptor(proto, prop);
      let origSet;
      if (descriptor == null ? void 0 : descriptor.set) {
        origSet = descriptor.set;
      }
      let origGet;
      if (descriptor == null ? void 0 : descriptor.get) {
        origGet = descriptor.get;
      }
      Object.defineProperty(proto, prop, {
        get() {
          if (origGet) {
            return origGet.call(this);
          }
          if (this._state[prop] !== void 0) {
            return this._state[prop];
          }
          const propDefaultValue = propData.defaultValue;
          if (propData.type === Boolean) {
            return false;
          } else if (propData.type === String) {
            return propDefaultValue;
          } else if (propData.multiple) {
            return [];
          } else {
            return propDefaultValue;
          }
        },
        set(value) {
          let isDifferent;
          const ctor = this.constructor;
          const metadataCtor = ctor.getMetadata().constructor;
          value = metadataCtor.validatePropertyValue(value, propData);
          const propertyType = propData.type;
          let propertyValidator = propData.validator;
          const oldState = origGet ? origGet.call(this) : this._state[prop];
          if (propertyType && propertyType.isDataTypeClass) {
            propertyValidator = propertyType;
          }
          if (propertyValidator) {
            isDifferent = !propertyValidator.valuesAreEqual(oldState, value);
          } else if (Array.isArray(oldState) && Array.isArray(value) && propData.multiple && propData.compareValues) {
            isDifferent = !arraysAreEqual_default(oldState, value);
          } else {
            isDifferent = oldState !== value;
          }
          if (isDifferent) {
            if (origSet) {
              origSet.call(this, value);
            } else {
              this._state[prop] = value;
            }
            _invalidate.call(this, {
              type: "property",
              name: prop,
              newValue: value,
              oldValue: oldState
            });
            this._updateAttribute(prop, value);
          }
        }
      });
    }
    if (slotsAreManaged) {
      const slots = this.getMetadata().getSlots();
      for (const [slotName, slotData] of Object.entries(slots)) {
        if (!isValidPropertyName_default(slotName)) {
          console.warn(`"${slotName}" is not a valid property name. Use a name that does not collide with DOM APIs`);
        }
        const propertyName = slotData.propertyName || slotName;
        Object.defineProperty(proto, propertyName, {
          get() {
            if (this._state[propertyName] !== void 0) {
              return this._state[propertyName];
            }
            return [];
          },
          set() {
            throw new Error("Cannot set slot content directly, use the DOM APIs (appendChild, removeChild, etc...)");
          }
        });
      }
    }
  }
  /**
   * Returns the Static Area CSS for this UI5 Web Component Class
   * @protected
   */
  static get staticAreaStyles() {
    return "";
  }
  /**
   * Returns an array with the dependencies for this UI5 Web Component, which could be:
   *  - composed components (used in its shadow root or static area item)
   *  - slotted components that the component may need to communicate with
   *
   * @protected
   */
  static get dependencies() {
    return [];
  }
  /**
   * Returns a list of the unique dependencies for this UI5 Web Component
   *
   * @public
   */
  static getUniqueDependencies() {
    if (!uniqueDependenciesCache.has(this)) {
      const filtered = this.dependencies.filter((dep, index, deps) => deps.indexOf(dep) === index);
      uniqueDependenciesCache.set(this, filtered);
    }
    return uniqueDependenciesCache.get(this) || [];
  }
  /**
   * Returns a promise that resolves whenever all dependencies for this UI5 Web Component have resolved
   */
  static whenDependenciesDefined() {
    return Promise.all(this.getUniqueDependencies().map((dep) => dep.define()));
  }
  /**
   * Hook that will be called upon custom element definition
   *
   * @protected
   */
  static async onDefine() {
    return Promise.resolve();
  }
  /**
   * Registers a UI5 Web Component in the browser window object
   * @public
   */
  static async define() {
    await boot();
    await Promise.all([
      this.whenDependenciesDefined(),
      this.onDefine()
    ]);
    const tag2 = this.getMetadata().getTag();
    const definedLocally = isTagRegistered(tag2);
    const definedGlobally = customElements.get(tag2);
    if (definedGlobally && !definedLocally) {
      recordTagRegistrationFailure(tag2);
    } else if (!definedGlobally) {
      this._generateAccessors();
      registerTag(tag2);
      customElements.define(tag2, this);
      preloadLinks_default(this);
    }
    return this;
  }
  /**
   * Returns an instance of UI5ElementMetadata.js representing this UI5 Web Component's full metadata (its and its parents')
   * Note: not to be confused with the "get metadata()" method, which returns an object for this class's metadata only
   * @public
   */
  static getMetadata() {
    if (this.hasOwnProperty("_metadata")) {
      return this._metadata;
    }
    const metadataObjects = [this.metadata];
    let klass = this;
    while (klass !== _UI5Element) {
      klass = Object.getPrototypeOf(klass);
      metadataObjects.unshift(klass.metadata);
    }
    const mergedMetadata = merge_default({}, ...metadataObjects);
    this._metadata = new UI5ElementMetadata_default(mergedMetadata);
    return this._metadata;
  }
};
UI5Element.metadata = {};
UI5Element.styles = "";
var instanceOfUI5Element = (object) => {
  return "isUI5Element" in object;
};
var UI5Element_default = UI5Element;

// node_modules/lit-html/development/lit-html.js
var _a;
var _b;
var _c;
var _d;
var DEV_MODE = true;
var ENABLE_EXTRA_SECURITY_HOOKS = true;
var ENABLE_SHADYDOM_NOPATCH = true;
var NODE_MODE = false;
var global = NODE_MODE ? globalThis : window;
var debugLogEvent = DEV_MODE ? (event2) => {
  const shouldEmit = global.emitLitDebugLogEvents;
  if (!shouldEmit) {
    return;
  }
  global.dispatchEvent(new CustomEvent("lit-debug", {
    detail: event2
  }));
} : void 0;
var debugLogRenderId = 0;
var issueWarning;
if (DEV_MODE) {
  (_a = global.litIssuedWarnings) !== null && _a !== void 0 ? _a : global.litIssuedWarnings = /* @__PURE__ */ new Set();
  issueWarning = (code, warning) => {
    warning += code ? ` See https://lit.dev/msg/${code} for more information.` : "";
    if (!global.litIssuedWarnings.has(warning)) {
      console.warn(warning);
      global.litIssuedWarnings.add(warning);
    }
  };
  issueWarning("dev-mode", `Lit is in dev mode. Not recommended for production!`);
}
var wrap = ENABLE_SHADYDOM_NOPATCH && ((_b = global.ShadyDOM) === null || _b === void 0 ? void 0 : _b.inUse) && ((_c = global.ShadyDOM) === null || _c === void 0 ? void 0 : _c.noPatch) === true ? global.ShadyDOM.wrap : (node) => node;
var trustedTypes = global.trustedTypes;
var policy = trustedTypes ? trustedTypes.createPolicy("lit-html", {
  createHTML: (s) => s
}) : void 0;
var identityFunction = (value) => value;
var noopSanitizer = (_node, _name, _type) => identityFunction;
var setSanitizer = (newSanitizer) => {
  if (!ENABLE_EXTRA_SECURITY_HOOKS) {
    return;
  }
  if (sanitizerFactoryInternal !== noopSanitizer) {
    throw new Error(`Attempted to overwrite existing lit-html security policy. setSanitizeDOMValueFactory should be called at most once.`);
  }
  sanitizerFactoryInternal = newSanitizer;
};
var _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {
  sanitizerFactoryInternal = noopSanitizer;
};
var createSanitizer = (node, name21, type) => {
  return sanitizerFactoryInternal(node, name21, type);
};
var boundAttributeSuffix = "$lit$";
var marker = `lit$${String(Math.random()).slice(9)}$`;
var markerMatch = "?" + marker;
var nodeMarker = `<${markerMatch}>`;
var d = NODE_MODE && global.document === void 0 ? {
  createTreeWalker() {
    return {};
  }
} : document;
var createMarker = () => d.createComment("");
var isPrimitive = (value) => value === null || typeof value != "object" && typeof value != "function";
var isArray = Array.isArray;
var isIterable = (value) => isArray(value) || // eslint-disable-next-line @typescript-eslint/no-explicit-any
typeof (value === null || value === void 0 ? void 0 : value[Symbol.iterator]) === "function";
var SPACE_CHAR = `[ 	
\f\r]`;
var ATTR_VALUE_CHAR = `[^ 	
\f\r"'\`<>=]`;
var NAME_CHAR = `[^\\s"'>=/]`;
var textEndRegex = /<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g;
var COMMENT_START = 1;
var TAG_NAME = 2;
var DYNAMIC_TAG_NAME = 3;
var commentEndRegex = /-->/g;
var comment2EndRegex = />/g;
var tagEndRegex = new RegExp(`>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|("|')|))|$)`, "g");
var ENTIRE_MATCH = 0;
var ATTRIBUTE_NAME = 1;
var SPACES_AND_EQUALS = 2;
var QUOTE_CHAR = 3;
var singleQuoteAttrEndRegex = /'/g;
var doubleQuoteAttrEndRegex = /"/g;
var rawTextElement = /^(?:script|style|textarea|title)$/i;
var HTML_RESULT = 1;
var SVG_RESULT = 2;
var ATTRIBUTE_PART = 1;
var CHILD_PART = 2;
var PROPERTY_PART = 3;
var BOOLEAN_ATTRIBUTE_PART = 4;
var EVENT_PART = 5;
var ELEMENT_PART = 6;
var COMMENT_PART = 7;
var tag = (type) => (strings, ...values) => {
  if (DEV_MODE && strings.some((s) => s === void 0)) {
    console.warn("Some template strings are undefined.\nThis is probably caused by illegal octal escape sequences.");
  }
  return {
    // This property needs to remain unminified.
    ["_$litType$"]: type,
    strings,
    values
  };
};
var html = tag(HTML_RESULT);
var svg = tag(SVG_RESULT);
var noChange = Symbol.for("lit-noChange");
var nothing = Symbol.for("lit-nothing");
var templateCache = /* @__PURE__ */ new WeakMap();
var walker = d.createTreeWalker(d, 129, null, false);
var sanitizerFactoryInternal = noopSanitizer;
function trustFromTemplateString(tsa, stringFromTSA) {
  if (!Array.isArray(tsa) || !tsa.hasOwnProperty("raw")) {
    let message = "invalid template strings array";
    if (DEV_MODE) {
      message = `
          Internal Error: expected template strings to be an array
          with a 'raw' field. Faking a template strings array by
          calling html or svg like an ordinary function is effectively
          the same as calling unsafeHtml and can lead to major security
          issues, e.g. opening your code up to XSS attacks.
          If you're using the html or svg tagged template functions normally
          and still seeing this error, please file a bug at
          https://github.com/lit/lit/issues/new?template=bug_report.md
          and include information about your build tooling, if any.
        `.trim().replace(/\n */g, "\n");
    }
    throw new Error(message);
  }
  return policy !== void 0 ? policy.createHTML(stringFromTSA) : stringFromTSA;
}
var getTemplateHtml = (strings, type) => {
  const l = strings.length - 1;
  const attrNames = [];
  let html3 = type === SVG_RESULT ? "<svg>" : "";
  let rawTextEndRegex;
  let regex = textEndRegex;
  for (let i = 0; i < l; i++) {
    const s = strings[i];
    let attrNameEndIndex = -1;
    let attrName;
    let lastIndex = 0;
    let match;
    while (lastIndex < s.length) {
      regex.lastIndex = lastIndex;
      match = regex.exec(s);
      if (match === null) {
        break;
      }
      lastIndex = regex.lastIndex;
      if (regex === textEndRegex) {
        if (match[COMMENT_START] === "!--") {
          regex = commentEndRegex;
        } else if (match[COMMENT_START] !== void 0) {
          regex = comment2EndRegex;
        } else if (match[TAG_NAME] !== void 0) {
          if (rawTextElement.test(match[TAG_NAME])) {
            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, "g");
          }
          regex = tagEndRegex;
        } else if (match[DYNAMIC_TAG_NAME] !== void 0) {
          if (DEV_MODE) {
            throw new Error("Bindings in tag names are not supported. Please use static templates instead. See https://lit.dev/docs/templates/expressions/#static-expressions");
          }
          regex = tagEndRegex;
        }
      } else if (regex === tagEndRegex) {
        if (match[ENTIRE_MATCH] === ">") {
          regex = rawTextEndRegex !== null && rawTextEndRegex !== void 0 ? rawTextEndRegex : textEndRegex;
          attrNameEndIndex = -1;
        } else if (match[ATTRIBUTE_NAME] === void 0) {
          attrNameEndIndex = -2;
        } else {
          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;
          attrName = match[ATTRIBUTE_NAME];
          regex = match[QUOTE_CHAR] === void 0 ? tagEndRegex : match[QUOTE_CHAR] === '"' ? doubleQuoteAttrEndRegex : singleQuoteAttrEndRegex;
        }
      } else if (regex === doubleQuoteAttrEndRegex || regex === singleQuoteAttrEndRegex) {
        regex = tagEndRegex;
      } else if (regex === commentEndRegex || regex === comment2EndRegex) {
        regex = textEndRegex;
      } else {
        regex = tagEndRegex;
        rawTextEndRegex = void 0;
      }
    }
    if (DEV_MODE) {
      console.assert(attrNameEndIndex === -1 || regex === tagEndRegex || regex === singleQuoteAttrEndRegex || regex === doubleQuoteAttrEndRegex, "unexpected parse state B");
    }
    const end = regex === tagEndRegex && strings[i + 1].startsWith("/>") ? " " : "";
    html3 += regex === textEndRegex ? s + nodeMarker : attrNameEndIndex >= 0 ? (attrNames.push(attrName), s.slice(0, attrNameEndIndex) + boundAttributeSuffix + s.slice(attrNameEndIndex)) + marker + end : s + marker + (attrNameEndIndex === -2 ? (attrNames.push(void 0), i) : end);
  }
  const htmlResult = html3 + (strings[l] || "<?>") + (type === SVG_RESULT ? "</svg>" : "");
  return [trustFromTemplateString(strings, htmlResult), attrNames];
};
var Template = class _Template {
  constructor({ strings, ["_$litType$"]: type }, options) {
    this.parts = [];
    let node;
    let nodeIndex = 0;
    let attrNameIndex = 0;
    const partCount = strings.length - 1;
    const parts = this.parts;
    const [html3, attrNames] = getTemplateHtml(strings, type);
    this.el = _Template.createElement(html3, options);
    walker.currentNode = this.el.content;
    if (type === SVG_RESULT) {
      const content = this.el.content;
      const svgElement = content.firstChild;
      svgElement.remove();
      content.append(...svgElement.childNodes);
    }
    while ((node = walker.nextNode()) !== null && parts.length < partCount) {
      if (node.nodeType === 1) {
        if (DEV_MODE) {
          const tag2 = node.localName;
          if (/^(?:textarea|template)$/i.test(tag2) && node.innerHTML.includes(marker)) {
            const m = `Expressions are not supported inside \`${tag2}\` elements. See https://lit.dev/msg/expression-in-${tag2} for more information.`;
            if (tag2 === "template") {
              throw new Error(m);
            } else
              issueWarning("", m);
          }
        }
        if (node.hasAttributes()) {
          const attrsToRemove = [];
          for (const name21 of node.getAttributeNames()) {
            if (name21.endsWith(boundAttributeSuffix) || name21.startsWith(marker)) {
              const realName = attrNames[attrNameIndex++];
              attrsToRemove.push(name21);
              if (realName !== void 0) {
                const value = node.getAttribute(realName.toLowerCase() + boundAttributeSuffix);
                const statics = value.split(marker);
                const m = /([.?@])?(.*)/.exec(realName);
                parts.push({
                  type: ATTRIBUTE_PART,
                  index: nodeIndex,
                  name: m[2],
                  strings: statics,
                  ctor: m[1] === "." ? PropertyPart : m[1] === "?" ? BooleanAttributePart : m[1] === "@" ? EventPart : AttributePart
                });
              } else {
                parts.push({
                  type: ELEMENT_PART,
                  index: nodeIndex
                });
              }
            }
          }
          for (const name21 of attrsToRemove) {
            node.removeAttribute(name21);
          }
        }
        if (rawTextElement.test(node.tagName)) {
          const strings2 = node.textContent.split(marker);
          const lastIndex = strings2.length - 1;
          if (lastIndex > 0) {
            node.textContent = trustedTypes ? trustedTypes.emptyScript : "";
            for (let i = 0; i < lastIndex; i++) {
              node.append(strings2[i], createMarker());
              walker.nextNode();
              parts.push({ type: CHILD_PART, index: ++nodeIndex });
            }
            node.append(strings2[lastIndex], createMarker());
          }
        }
      } else if (node.nodeType === 8) {
        const data = node.data;
        if (data === markerMatch) {
          parts.push({ type: CHILD_PART, index: nodeIndex });
        } else {
          let i = -1;
          while ((i = node.data.indexOf(marker, i + 1)) !== -1) {
            parts.push({ type: COMMENT_PART, index: nodeIndex });
            i += marker.length - 1;
          }
        }
      }
      nodeIndex++;
    }
    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
      kind: "template prep",
      template: this,
      clonableTemplate: this.el,
      parts: this.parts,
      strings
    });
  }
  // Overridden via `litHtmlPolyfillSupport` to provide platform support.
  /** @nocollapse */
  static createElement(html3, _options) {
    const el = d.createElement("template");
    el.innerHTML = html3;
    return el;
  }
};
function resolveDirective(part, value, parent = part, attributeIndex) {
  var _a3, _b3, _c2;
  var _d2;
  if (value === noChange) {
    return value;
  }
  let currentDirective = attributeIndex !== void 0 ? (_a3 = parent.__directives) === null || _a3 === void 0 ? void 0 : _a3[attributeIndex] : parent.__directive;
  const nextDirectiveConstructor = isPrimitive(value) ? void 0 : (
    // This property needs to remain unminified.
    value["_$litDirective$"]
  );
  if ((currentDirective === null || currentDirective === void 0 ? void 0 : currentDirective.constructor) !== nextDirectiveConstructor) {
    (_b3 = currentDirective === null || currentDirective === void 0 ? void 0 : currentDirective["_$notifyDirectiveConnectionChanged"]) === null || _b3 === void 0 ? void 0 : _b3.call(currentDirective, false);
    if (nextDirectiveConstructor === void 0) {
      currentDirective = void 0;
    } else {
      currentDirective = new nextDirectiveConstructor(part);
      currentDirective._$initialize(part, parent, attributeIndex);
    }
    if (attributeIndex !== void 0) {
      ((_c2 = (_d2 = parent).__directives) !== null && _c2 !== void 0 ? _c2 : _d2.__directives = [])[attributeIndex] = currentDirective;
    } else {
      parent.__directive = currentDirective;
    }
  }
  if (currentDirective !== void 0) {
    value = resolveDirective(part, currentDirective._$resolve(part, value.values), currentDirective, attributeIndex);
  }
  return value;
}
var TemplateInstance = class {
  constructor(template, parent) {
    this._$parts = [];
    this._$disconnectableChildren = void 0;
    this._$template = template;
    this._$parent = parent;
  }
  // Called by ChildPart parentNode getter
  get parentNode() {
    return this._$parent.parentNode;
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  // This method is separate from the constructor because we need to return a
  // DocumentFragment and we don't want to hold onto it with an instance field.
  _clone(options) {
    var _a3;
    const { el: { content }, parts } = this._$template;
    const fragment = ((_a3 = options === null || options === void 0 ? void 0 : options.creationScope) !== null && _a3 !== void 0 ? _a3 : d).importNode(content, true);
    walker.currentNode = fragment;
    let node = walker.nextNode();
    let nodeIndex = 0;
    let partIndex = 0;
    let templatePart = parts[0];
    while (templatePart !== void 0) {
      if (nodeIndex === templatePart.index) {
        let part;
        if (templatePart.type === CHILD_PART) {
          part = new ChildPart(node, node.nextSibling, this, options);
        } else if (templatePart.type === ATTRIBUTE_PART) {
          part = new templatePart.ctor(node, templatePart.name, templatePart.strings, this, options);
        } else if (templatePart.type === ELEMENT_PART) {
          part = new ElementPart(node, this, options);
        }
        this._$parts.push(part);
        templatePart = parts[++partIndex];
      }
      if (nodeIndex !== (templatePart === null || templatePart === void 0 ? void 0 : templatePart.index)) {
        node = walker.nextNode();
        nodeIndex++;
      }
    }
    walker.currentNode = d;
    return fragment;
  }
  _update(values) {
    let i = 0;
    for (const part of this._$parts) {
      if (part !== void 0) {
        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
          kind: "set part",
          part,
          value: values[i],
          valueIndex: i,
          values,
          templateInstance: this
        });
        if (part.strings !== void 0) {
          part._$setValue(values, part, i);
          i += part.strings.length - 2;
        } else {
          part._$setValue(values[i]);
        }
      }
      i++;
    }
  }
};
var ChildPart = class _ChildPart {
  constructor(startNode, endNode, parent, options) {
    var _a3;
    this.type = CHILD_PART;
    this._$committedValue = nothing;
    this._$disconnectableChildren = void 0;
    this._$startNode = startNode;
    this._$endNode = endNode;
    this._$parent = parent;
    this.options = options;
    this.__isConnected = (_a3 = options === null || options === void 0 ? void 0 : options.isConnected) !== null && _a3 !== void 0 ? _a3 : true;
    if (ENABLE_EXTRA_SECURITY_HOOKS) {
      this._textSanitizer = void 0;
    }
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    var _a3, _b3;
    return (_b3 = (_a3 = this._$parent) === null || _a3 === void 0 ? void 0 : _a3._$isConnected) !== null && _b3 !== void 0 ? _b3 : this.__isConnected;
  }
  /**
   * The parent node into which the part renders its content.
   *
   * A ChildPart's content consists of a range of adjacent child nodes of
   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and
   * `.endNode`).
   *
   * - If both `.startNode` and `.endNode` are non-null, then the part's content
   * consists of all siblings between `.startNode` and `.endNode`, exclusively.
   *
   * - If `.startNode` is non-null but `.endNode` is null, then the part's
   * content consists of all siblings following `.startNode`, up to and
   * including the last child of `.parentNode`. If `.endNode` is non-null, then
   * `.startNode` will always be non-null.
   *
   * - If both `.endNode` and `.startNode` are null, then the part's content
   * consists of all child nodes of `.parentNode`.
   */
  get parentNode() {
    let parentNode = wrap(this._$startNode).parentNode;
    const parent = this._$parent;
    if (parent !== void 0 && (parentNode === null || parentNode === void 0 ? void 0 : parentNode.nodeType) === 11) {
      parentNode = parent.parentNode;
    }
    return parentNode;
  }
  /**
   * The part's leading marker node, if any. See `.parentNode` for more
   * information.
   */
  get startNode() {
    return this._$startNode;
  }
  /**
   * The part's trailing marker node, if any. See `.parentNode` for more
   * information.
   */
  get endNode() {
    return this._$endNode;
  }
  _$setValue(value, directiveParent = this) {
    var _a3;
    if (DEV_MODE && this.parentNode === null) {
      throw new Error(`This \`ChildPart\` has no \`parentNode\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \`innerHTML\` or \`textContent\` can do this.`);
    }
    value = resolveDirective(this, value, directiveParent);
    if (isPrimitive(value)) {
      if (value === nothing || value == null || value === "") {
        if (this._$committedValue !== nothing) {
          debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
            kind: "commit nothing to child",
            start: this._$startNode,
            end: this._$endNode,
            parent: this._$parent,
            options: this.options
          });
          this._$clear();
        }
        this._$committedValue = nothing;
      } else if (value !== this._$committedValue && value !== noChange) {
        this._commitText(value);
      }
    } else if (value["_$litType$"] !== void 0) {
      this._commitTemplateResult(value);
    } else if (value.nodeType !== void 0) {
      if (DEV_MODE && ((_a3 = this.options) === null || _a3 === void 0 ? void 0 : _a3.host) === value) {
        this._commitText(`[probable mistake: rendered a template's host in itself (commonly caused by writing \${this} in a template]`);
        console.warn(`Attempted to render the template host`, value, `inside itself. This is almost always a mistake, and in dev mode `, `we render some warning text. In production however, we'll `, `render it, which will usually result in an error, and sometimes `, `in the element disappearing from the DOM.`);
        return;
      }
      this._commitNode(value);
    } else if (isIterable(value)) {
      this._commitIterable(value);
    } else {
      this._commitText(value);
    }
  }
  _insert(node) {
    return wrap(wrap(this._$startNode).parentNode).insertBefore(node, this._$endNode);
  }
  _commitNode(value) {
    var _a3;
    if (this._$committedValue !== value) {
      this._$clear();
      if (ENABLE_EXTRA_SECURITY_HOOKS && sanitizerFactoryInternal !== noopSanitizer) {
        const parentNodeName = (_a3 = this._$startNode.parentNode) === null || _a3 === void 0 ? void 0 : _a3.nodeName;
        if (parentNodeName === "STYLE" || parentNodeName === "SCRIPT") {
          let message = "Forbidden";
          if (DEV_MODE) {
            if (parentNodeName === "STYLE") {
              message = `Lit does not support binding inside style nodes. This is a security risk, as style injection attacks can exfiltrate data and spoof UIs. Consider instead using css\`...\` literals to compose styles, and make do dynamic styling with css custom properties, ::parts, <slot>s, and by mutating the DOM rather than stylesheets.`;
            } else {
              message = `Lit does not support binding inside script nodes. This is a security risk, as it could allow arbitrary code execution.`;
            }
          }
          throw new Error(message);
        }
      }
      debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
        kind: "commit node",
        start: this._$startNode,
        parent: this._$parent,
        value,
        options: this.options
      });
      this._$committedValue = this._insert(value);
    }
  }
  _commitText(value) {
    if (this._$committedValue !== nothing && isPrimitive(this._$committedValue)) {
      const node = wrap(this._$startNode).nextSibling;
      if (ENABLE_EXTRA_SECURITY_HOOKS) {
        if (this._textSanitizer === void 0) {
          this._textSanitizer = createSanitizer(node, "data", "property");
        }
        value = this._textSanitizer(value);
      }
      debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
        kind: "commit text",
        node,
        value,
        options: this.options
      });
      node.data = value;
    } else {
      if (ENABLE_EXTRA_SECURITY_HOOKS) {
        const textNode = d.createTextNode("");
        this._commitNode(textNode);
        if (this._textSanitizer === void 0) {
          this._textSanitizer = createSanitizer(textNode, "data", "property");
        }
        value = this._textSanitizer(value);
        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
          kind: "commit text",
          node: textNode,
          value,
          options: this.options
        });
        textNode.data = value;
      } else {
        this._commitNode(d.createTextNode(value));
        debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
          kind: "commit text",
          node: wrap(this._$startNode).nextSibling,
          value,
          options: this.options
        });
      }
    }
    this._$committedValue = value;
  }
  _commitTemplateResult(result) {
    var _a3;
    const { values, ["_$litType$"]: type } = result;
    const template = typeof type === "number" ? this._$getTemplate(result) : (type.el === void 0 && (type.el = Template.createElement(trustFromTemplateString(type.h, type.h[0]), this.options)), type);
    if (((_a3 = this._$committedValue) === null || _a3 === void 0 ? void 0 : _a3._$template) === template) {
      debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
        kind: "template updating",
        template,
        instance: this._$committedValue,
        parts: this._$committedValue._$parts,
        options: this.options,
        values
      });
      this._$committedValue._update(values);
    } else {
      const instance = new TemplateInstance(template, this);
      const fragment = instance._clone(this.options);
      debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
        kind: "template instantiated",
        template,
        instance,
        parts: instance._$parts,
        options: this.options,
        fragment,
        values
      });
      instance._update(values);
      debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
        kind: "template instantiated and updated",
        template,
        instance,
        parts: instance._$parts,
        options: this.options,
        fragment,
        values
      });
      this._commitNode(fragment);
      this._$committedValue = instance;
    }
  }
  // Overridden via `litHtmlPolyfillSupport` to provide platform support.
  /** @internal */
  _$getTemplate(result) {
    let template = templateCache.get(result.strings);
    if (template === void 0) {
      templateCache.set(result.strings, template = new Template(result));
    }
    return template;
  }
  _commitIterable(value) {
    if (!isArray(this._$committedValue)) {
      this._$committedValue = [];
      this._$clear();
    }
    const itemParts = this._$committedValue;
    let partIndex = 0;
    let itemPart;
    for (const item of value) {
      if (partIndex === itemParts.length) {
        itemParts.push(itemPart = new _ChildPart(this._insert(createMarker()), this._insert(createMarker()), this, this.options));
      } else {
        itemPart = itemParts[partIndex];
      }
      itemPart._$setValue(item);
      partIndex++;
    }
    if (partIndex < itemParts.length) {
      this._$clear(itemPart && wrap(itemPart._$endNode).nextSibling, partIndex);
      itemParts.length = partIndex;
    }
  }
  /**
   * Removes the nodes contained within this Part from the DOM.
   *
   * @param start Start node to clear from, for clearing a subset of the part's
   *     DOM (used when truncating iterables)
   * @param from  When `start` is specified, the index within the iterable from
   *     which ChildParts are being removed, used for disconnecting directives in
   *     those Parts.
   *
   * @internal
   */
  _$clear(start = wrap(this._$startNode).nextSibling, from) {
    var _a3;
    (_a3 = this._$notifyConnectionChanged) === null || _a3 === void 0 ? void 0 : _a3.call(this, false, true, from);
    while (start && start !== this._$endNode) {
      const n = wrap(start).nextSibling;
      wrap(start).remove();
      start = n;
    }
  }
  /**
   * Implementation of RootPart's `isConnected`. Note that this metod
   * should only be called on `RootPart`s (the `ChildPart` returned from a
   * top-level `render()` call). It has no effect on non-root ChildParts.
   * @param isConnected Whether to set
   * @internal
   */
  setConnected(isConnected) {
    var _a3;
    if (this._$parent === void 0) {
      this.__isConnected = isConnected;
      (_a3 = this._$notifyConnectionChanged) === null || _a3 === void 0 ? void 0 : _a3.call(this, isConnected);
    } else if (DEV_MODE) {
      throw new Error("part.setConnected() may only be called on a RootPart returned from render().");
    }
  }
};
var AttributePart = class {
  constructor(element, name21, strings, parent, options) {
    this.type = ATTRIBUTE_PART;
    this._$committedValue = nothing;
    this._$disconnectableChildren = void 0;
    this.element = element;
    this.name = name21;
    this._$parent = parent;
    this.options = options;
    if (strings.length > 2 || strings[0] !== "" || strings[1] !== "") {
      this._$committedValue = new Array(strings.length - 1).fill(new String());
      this.strings = strings;
    } else {
      this._$committedValue = nothing;
    }
    if (ENABLE_EXTRA_SECURITY_HOOKS) {
      this._sanitizer = void 0;
    }
  }
  get tagName() {
    return this.element.tagName;
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  /**
   * Sets the value of this part by resolving the value from possibly multiple
   * values and static strings and committing it to the DOM.
   * If this part is single-valued, `this._strings` will be undefined, and the
   * method will be called with a single value argument. If this part is
   * multi-value, `this._strings` will be defined, and the method is called
   * with the value array of the part's owning TemplateInstance, and an offset
   * into the value array from which the values should be read.
   * This method is overloaded this way to eliminate short-lived array slices
   * of the template instance values, and allow a fast-path for single-valued
   * parts.
   *
   * @param value The part value, or an array of values for multi-valued parts
   * @param valueIndex the index to start reading values from. `undefined` for
   *   single-valued parts
   * @param noCommit causes the part to not commit its value to the DOM. Used
   *   in hydration to prime attribute parts with their first-rendered value,
   *   but not set the attribute, and in SSR to no-op the DOM operation and
   *   capture the value for serialization.
   *
   * @internal
   */
  _$setValue(value, directiveParent = this, valueIndex, noCommit) {
    const strings = this.strings;
    let change = false;
    if (strings === void 0) {
      value = resolveDirective(this, value, directiveParent, 0);
      change = !isPrimitive(value) || value !== this._$committedValue && value !== noChange;
      if (change) {
        this._$committedValue = value;
      }
    } else {
      const values = value;
      value = strings[0];
      let i, v;
      for (i = 0; i < strings.length - 1; i++) {
        v = resolveDirective(this, values[valueIndex + i], directiveParent, i);
        if (v === noChange) {
          v = this._$committedValue[i];
        }
        change || (change = !isPrimitive(v) || v !== this._$committedValue[i]);
        if (v === nothing) {
          value = nothing;
        } else if (value !== nothing) {
          value += (v !== null && v !== void 0 ? v : "") + strings[i + 1];
        }
        this._$committedValue[i] = v;
      }
    }
    if (change && !noCommit) {
      this._commitValue(value);
    }
  }
  /** @internal */
  _commitValue(value) {
    if (value === nothing) {
      wrap(this.element).removeAttribute(this.name);
    } else {
      if (ENABLE_EXTRA_SECURITY_HOOKS) {
        if (this._sanitizer === void 0) {
          this._sanitizer = sanitizerFactoryInternal(this.element, this.name, "attribute");
        }
        value = this._sanitizer(value !== null && value !== void 0 ? value : "");
      }
      debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
        kind: "commit attribute",
        element: this.element,
        name: this.name,
        value,
        options: this.options
      });
      wrap(this.element).setAttribute(this.name, value !== null && value !== void 0 ? value : "");
    }
  }
};
var PropertyPart = class extends AttributePart {
  constructor() {
    super(...arguments);
    this.type = PROPERTY_PART;
  }
  /** @internal */
  _commitValue(value) {
    if (ENABLE_EXTRA_SECURITY_HOOKS) {
      if (this._sanitizer === void 0) {
        this._sanitizer = sanitizerFactoryInternal(this.element, this.name, "property");
      }
      value = this._sanitizer(value);
    }
    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
      kind: "commit property",
      element: this.element,
      name: this.name,
      value,
      options: this.options
    });
    this.element[this.name] = value === nothing ? void 0 : value;
  }
};
var emptyStringForBooleanAttribute = trustedTypes ? trustedTypes.emptyScript : "";
var BooleanAttributePart = class extends AttributePart {
  constructor() {
    super(...arguments);
    this.type = BOOLEAN_ATTRIBUTE_PART;
  }
  /** @internal */
  _commitValue(value) {
    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
      kind: "commit boolean attribute",
      element: this.element,
      name: this.name,
      value: !!(value && value !== nothing),
      options: this.options
    });
    if (value && value !== nothing) {
      wrap(this.element).setAttribute(this.name, emptyStringForBooleanAttribute);
    } else {
      wrap(this.element).removeAttribute(this.name);
    }
  }
};
var EventPart = class extends AttributePart {
  constructor(element, name21, strings, parent, options) {
    super(element, name21, strings, parent, options);
    this.type = EVENT_PART;
    if (DEV_MODE && this.strings !== void 0) {
      throw new Error(`A \`<${element.localName}>\` has a \`@${name21}=...\` listener with invalid content. Event listeners in templates must have exactly one expression and no surrounding text.`);
    }
  }
  // EventPart does not use the base _$setValue/_resolveValue implementation
  // since the dirty checking is more complex
  /** @internal */
  _$setValue(newListener, directiveParent = this) {
    var _a3;
    newListener = (_a3 = resolveDirective(this, newListener, directiveParent, 0)) !== null && _a3 !== void 0 ? _a3 : nothing;
    if (newListener === noChange) {
      return;
    }
    const oldListener = this._$committedValue;
    const shouldRemoveListener = newListener === nothing && oldListener !== nothing || newListener.capture !== oldListener.capture || newListener.once !== oldListener.once || newListener.passive !== oldListener.passive;
    const shouldAddListener = newListener !== nothing && (oldListener === nothing || shouldRemoveListener);
    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
      kind: "commit event listener",
      element: this.element,
      name: this.name,
      value: newListener,
      options: this.options,
      removeListener: shouldRemoveListener,
      addListener: shouldAddListener,
      oldListener
    });
    if (shouldRemoveListener) {
      this.element.removeEventListener(this.name, this, oldListener);
    }
    if (shouldAddListener) {
      this.element.addEventListener(this.name, this, newListener);
    }
    this._$committedValue = newListener;
  }
  handleEvent(event2) {
    var _a3, _b3;
    if (typeof this._$committedValue === "function") {
      this._$committedValue.call((_b3 = (_a3 = this.options) === null || _a3 === void 0 ? void 0 : _a3.host) !== null && _b3 !== void 0 ? _b3 : this.element, event2);
    } else {
      this._$committedValue.handleEvent(event2);
    }
  }
};
var ElementPart = class {
  constructor(element, parent, options) {
    this.element = element;
    this.type = ELEMENT_PART;
    this._$disconnectableChildren = void 0;
    this._$parent = parent;
    this.options = options;
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  _$setValue(value) {
    debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
      kind: "commit to element binding",
      element: this.element,
      value,
      options: this.options
    });
    resolveDirective(this, value);
  }
};
var _$LH = {
  // Used in lit-ssr
  _boundAttributeSuffix: boundAttributeSuffix,
  _marker: marker,
  _markerMatch: markerMatch,
  _HTML_RESULT: HTML_RESULT,
  _getTemplateHtml: getTemplateHtml,
  // Used in tests and private-ssr-support
  _TemplateInstance: TemplateInstance,
  _isIterable: isIterable,
  _resolveDirective: resolveDirective,
  _ChildPart: ChildPart,
  _AttributePart: AttributePart,
  _BooleanAttributePart: BooleanAttributePart,
  _EventPart: EventPart,
  _PropertyPart: PropertyPart,
  _ElementPart: ElementPart
};
var polyfillSupport = DEV_MODE ? global.litHtmlPolyfillSupportDevMode : global.litHtmlPolyfillSupport;
polyfillSupport === null || polyfillSupport === void 0 ? void 0 : polyfillSupport(Template, ChildPart);
((_d = global.litHtmlVersions) !== null && _d !== void 0 ? _d : global.litHtmlVersions = []).push("2.8.0");
if (DEV_MODE && global.litHtmlVersions.length > 1) {
  issueWarning("multiple-versions", `Multiple versions of Lit loaded. Loading multiple versions is not recommended.`);
}
var render = (value, container, options) => {
  var _a3, _b3;
  if (DEV_MODE && container == null) {
    throw new TypeError(`The container to render into may not be ${container}`);
  }
  const renderId = DEV_MODE ? debugLogRenderId++ : 0;
  const partOwnerNode = (_a3 = options === null || options === void 0 ? void 0 : options.renderBefore) !== null && _a3 !== void 0 ? _a3 : container;
  let part = partOwnerNode["_$litPart$"];
  debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
    kind: "begin render",
    id: renderId,
    value,
    container,
    options,
    part
  });
  if (part === void 0) {
    const endNode = (_b3 = options === null || options === void 0 ? void 0 : options.renderBefore) !== null && _b3 !== void 0 ? _b3 : null;
    partOwnerNode["_$litPart$"] = part = new ChildPart(container.insertBefore(createMarker(), endNode), endNode, void 0, options !== null && options !== void 0 ? options : {});
  }
  part._$setValue(value);
  debugLogEvent === null || debugLogEvent === void 0 ? void 0 : debugLogEvent({
    kind: "end render",
    id: renderId,
    value,
    container,
    options,
    part
  });
  return part;
};
if (ENABLE_EXTRA_SECURITY_HOOKS) {
  render.setSanitizer = setSanitizer;
  render.createSanitizer = createSanitizer;
  if (DEV_MODE) {
    render._testOnlyClearSanitizerFactoryDoNotCallOrElse = _testOnlyClearSanitizerFactoryDoNotCallOrElse;
  }
}

// node_modules/lit-html/development/directive.js
var PartType = {
  ATTRIBUTE: 1,
  CHILD: 2,
  PROPERTY: 3,
  BOOLEAN_ATTRIBUTE: 4,
  EVENT: 5,
  ELEMENT: 6
};
var directive = (c) => (...values) => ({
  // This property needs to remain unminified.
  ["_$litDirective$"]: c,
  values
});
var Directive = class {
  constructor(_partInfo) {
  }
  // See comment in Disconnectable interface for why this is a getter
  get _$isConnected() {
    return this._$parent._$isConnected;
  }
  /** @internal */
  _$initialize(part, parent, attributeIndex) {
    this.__part = part;
    this._$parent = parent;
    this.__attributeIndex = attributeIndex;
  }
  /** @internal */
  _$resolve(part, props) {
    return this.update(part, props);
  }
  update(_part, props) {
    return this.render(...props);
  }
};

// node_modules/lit-html/development/directive-helpers.js
var _a2;
var _b2;
var { _ChildPart: ChildPart2 } = _$LH;
var ENABLE_SHADYDOM_NOPATCH2 = true;
var wrap2 = ENABLE_SHADYDOM_NOPATCH2 && ((_a2 = window.ShadyDOM) === null || _a2 === void 0 ? void 0 : _a2.inUse) && ((_b2 = window.ShadyDOM) === null || _b2 === void 0 ? void 0 : _b2.noPatch) === true ? window.ShadyDOM.wrap : (node) => node;
var createMarker2 = () => document.createComment("");
var insertPart = (containerPart, refPart, part) => {
  var _a3;
  const container = wrap2(containerPart._$startNode).parentNode;
  const refNode = refPart === void 0 ? containerPart._$endNode : refPart._$startNode;
  if (part === void 0) {
    const startNode = wrap2(container).insertBefore(createMarker2(), refNode);
    const endNode = wrap2(container).insertBefore(createMarker2(), refNode);
    part = new ChildPart2(startNode, endNode, containerPart, containerPart.options);
  } else {
    const endNode = wrap2(part._$endNode).nextSibling;
    const oldParent = part._$parent;
    const parentChanged = oldParent !== containerPart;
    if (parentChanged) {
      (_a3 = part._$reparentDisconnectables) === null || _a3 === void 0 ? void 0 : _a3.call(part, containerPart);
      part._$parent = containerPart;
      let newConnectionState;
      if (part._$notifyConnectionChanged !== void 0 && (newConnectionState = containerPart._$isConnected) !== oldParent._$isConnected) {
        part._$notifyConnectionChanged(newConnectionState);
      }
    }
    if (endNode !== refNode || parentChanged) {
      let start = part._$startNode;
      while (start !== endNode) {
        const n = wrap2(start).nextSibling;
        wrap2(container).insertBefore(start, refNode);
        start = n;
      }
    }
  }
  return part;
};
var setChildPartValue = (part, value, directiveParent = part) => {
  part._$setValue(value, directiveParent);
  return part;
};
var RESET_VALUE = {};
var setCommittedValue = (part, value = RESET_VALUE) => part._$committedValue = value;
var getCommittedValue = (part) => part._$committedValue;
var removePart = (part) => {
  var _a3;
  (_a3 = part._$notifyConnectionChanged) === null || _a3 === void 0 ? void 0 : _a3.call(part, false, true);
  let start = part._$startNode;
  const end = wrap2(part._$endNode).nextSibling;
  while (start !== end) {
    const n = wrap2(start).nextSibling;
    wrap2(start).remove();
    start = n;
  }
};

// node_modules/lit-html/development/directives/repeat.js
var generateMap = (list, start, end) => {
  const map = /* @__PURE__ */ new Map();
  for (let i = start; i <= end; i++) {
    map.set(list[i], i);
  }
  return map;
};
var RepeatDirective = class extends Directive {
  constructor(partInfo) {
    super(partInfo);
    if (partInfo.type !== PartType.CHILD) {
      throw new Error("repeat() can only be used in text expressions");
    }
  }
  _getValuesAndKeys(items, keyFnOrTemplate, template) {
    let keyFn;
    if (template === void 0) {
      template = keyFnOrTemplate;
    } else if (keyFnOrTemplate !== void 0) {
      keyFn = keyFnOrTemplate;
    }
    const keys = [];
    const values = [];
    let index = 0;
    for (const item of items) {
      keys[index] = keyFn ? keyFn(item, index) : index;
      values[index] = template(item, index);
      index++;
    }
    return {
      values,
      keys
    };
  }
  render(items, keyFnOrTemplate, template) {
    return this._getValuesAndKeys(items, keyFnOrTemplate, template).values;
  }
  update(containerPart, [items, keyFnOrTemplate, template]) {
    var _a3;
    const oldParts = getCommittedValue(containerPart);
    const { values: newValues, keys: newKeys } = this._getValuesAndKeys(items, keyFnOrTemplate, template);
    if (!Array.isArray(oldParts)) {
      this._itemKeys = newKeys;
      return newValues;
    }
    const oldKeys = (_a3 = this._itemKeys) !== null && _a3 !== void 0 ? _a3 : this._itemKeys = [];
    const newParts = [];
    let newKeyToIndexMap;
    let oldKeyToIndexMap;
    let oldHead = 0;
    let oldTail = oldParts.length - 1;
    let newHead = 0;
    let newTail = newValues.length - 1;
    while (oldHead <= oldTail && newHead <= newTail) {
      if (oldParts[oldHead] === null) {
        oldHead++;
      } else if (oldParts[oldTail] === null) {
        oldTail--;
      } else if (oldKeys[oldHead] === newKeys[newHead]) {
        newParts[newHead] = setChildPartValue(oldParts[oldHead], newValues[newHead]);
        oldHead++;
        newHead++;
      } else if (oldKeys[oldTail] === newKeys[newTail]) {
        newParts[newTail] = setChildPartValue(oldParts[oldTail], newValues[newTail]);
        oldTail--;
        newTail--;
      } else if (oldKeys[oldHead] === newKeys[newTail]) {
        newParts[newTail] = setChildPartValue(oldParts[oldHead], newValues[newTail]);
        insertPart(containerPart, newParts[newTail + 1], oldParts[oldHead]);
        oldHead++;
        newTail--;
      } else if (oldKeys[oldTail] === newKeys[newHead]) {
        newParts[newHead] = setChildPartValue(oldParts[oldTail], newValues[newHead]);
        insertPart(containerPart, oldParts[oldHead], oldParts[oldTail]);
        oldTail--;
        newHead++;
      } else {
        if (newKeyToIndexMap === void 0) {
          newKeyToIndexMap = generateMap(newKeys, newHead, newTail);
          oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);
        }
        if (!newKeyToIndexMap.has(oldKeys[oldHead])) {
          removePart(oldParts[oldHead]);
          oldHead++;
        } else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {
          removePart(oldParts[oldTail]);
          oldTail--;
        } else {
          const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);
          const oldPart = oldIndex !== void 0 ? oldParts[oldIndex] : null;
          if (oldPart === null) {
            const newPart = insertPart(containerPart, oldParts[oldHead]);
            setChildPartValue(newPart, newValues[newHead]);
            newParts[newHead] = newPart;
          } else {
            newParts[newHead] = setChildPartValue(oldPart, newValues[newHead]);
            insertPart(containerPart, oldParts[oldHead], oldPart);
            oldParts[oldIndex] = null;
          }
          newHead++;
        }
      }
    }
    while (newHead <= newTail) {
      const newPart = insertPart(containerPart, newParts[newTail + 1]);
      setChildPartValue(newPart, newValues[newHead]);
      newParts[newHead++] = newPart;
    }
    while (oldHead <= oldTail) {
      const oldPart = oldParts[oldHead++];
      if (oldPart !== null) {
        removePart(oldPart);
      }
    }
    this._itemKeys = newKeys;
    setCommittedValue(containerPart, newParts);
    return noChange;
  }
};
var repeat = directive(RepeatDirective);

// node_modules/lit-html/development/directives/class-map.js
var ClassMapDirective = class extends Directive {
  constructor(partInfo) {
    var _a3;
    super(partInfo);
    if (partInfo.type !== PartType.ATTRIBUTE || partInfo.name !== "class" || ((_a3 = partInfo.strings) === null || _a3 === void 0 ? void 0 : _a3.length) > 2) {
      throw new Error("`classMap()` can only be used in the `class` attribute and must be the only part in the attribute.");
    }
  }
  render(classInfo) {
    return " " + Object.keys(classInfo).filter((key) => classInfo[key]).join(" ") + " ";
  }
  update(part, [classInfo]) {
    var _a3, _b3;
    if (this._previousClasses === void 0) {
      this._previousClasses = /* @__PURE__ */ new Set();
      if (part.strings !== void 0) {
        this._staticClasses = new Set(part.strings.join(" ").split(/\s/).filter((s) => s !== ""));
      }
      for (const name21 in classInfo) {
        if (classInfo[name21] && !((_a3 = this._staticClasses) === null || _a3 === void 0 ? void 0 : _a3.has(name21))) {
          this._previousClasses.add(name21);
        }
      }
      return this.render(classInfo);
    }
    const classList = part.element.classList;
    this._previousClasses.forEach((name21) => {
      if (!(name21 in classInfo)) {
        classList.remove(name21);
        this._previousClasses.delete(name21);
      }
    });
    for (const name21 in classInfo) {
      const value = !!classInfo[name21];
      if (value !== this._previousClasses.has(name21) && !((_b3 = this._staticClasses) === null || _b3 === void 0 ? void 0 : _b3.has(name21))) {
        if (value) {
          classList.add(name21);
          this._previousClasses.add(name21);
        } else {
          classList.remove(name21);
          this._previousClasses.delete(name21);
        }
      }
    }
    return noChange;
  }
};
var classMap = directive(ClassMapDirective);

// node_modules/@ui5/webcomponents-base/dist/renderer/directives/style-map.js
var StyleMapDirective = class extends Directive {
  constructor(partInfo) {
    var _a3;
    super(partInfo);
    if (partInfo.type !== PartType.ATTRIBUTE || partInfo.name !== "style" || ((_a3 = partInfo.strings) === null || _a3 === void 0 ? void 0 : _a3.length) > 2) {
      throw new Error("The `styleMap` directive must be used in the `style` attribute and must be the only part in the attribute.");
    }
  }
  render(styleInfo) {
    return "";
  }
  update(part, [styleInfo]) {
    const { style } = part.element;
    if (this._previousStyleProperties === void 0) {
      this._previousStyleProperties = /* @__PURE__ */ new Set();
      for (const name21 in styleInfo) {
        this._previousStyleProperties.add(name21);
      }
    }
    this._previousStyleProperties.forEach((name21) => {
      if (styleInfo[name21] == null) {
        this._previousStyleProperties.delete(name21);
        if (name21.includes("-")) {
          style.removeProperty(name21);
        } else {
          style[name21] = "";
        }
      }
    });
    for (const name21 in styleInfo) {
      const value = styleInfo[name21];
      if (value != null) {
        this._previousStyleProperties.add(name21);
        if (name21.includes("-")) {
          style.setProperty(name21, value);
        } else {
          style[name21] = value;
        }
      }
    }
    return noChange;
  }
};
var styleMap = directive(StyleMapDirective);

// node_modules/lit-html/development/directives/if-defined.js
var ifDefined = (value) => value !== null && value !== void 0 ? value : nothing;

// node_modules/lit-html/development/directives/unsafe-html.js
var HTML_RESULT2 = 1;
var UnsafeHTMLDirective = class extends Directive {
  constructor(partInfo) {
    super(partInfo);
    this._value = nothing;
    if (partInfo.type !== PartType.CHILD) {
      throw new Error(`${this.constructor.directiveName}() can only be used in child bindings`);
    }
  }
  render(value) {
    if (value === nothing || value == null) {
      this._templateResult = void 0;
      return this._value = value;
    }
    if (value === noChange) {
      return value;
    }
    if (typeof value != "string") {
      throw new Error(`${this.constructor.directiveName}() called with a non-string value`);
    }
    if (value === this._value) {
      return this._templateResult;
    }
    this._value = value;
    const strings = [value];
    strings.raw = strings;
    return this._templateResult = {
      // Cast to a known set of integers that satisfy ResultType so that we
      // don't have to export ResultType and possibly encourage this pattern.
      // This property needs to remain unminified.
      ["_$litType$"]: this.constructor.resultType,
      strings,
      values: []
    };
  }
};
UnsafeHTMLDirective.directiveName = "unsafeHTML";
UnsafeHTMLDirective.resultType = HTML_RESULT2;
var unsafeHTML = directive(UnsafeHTMLDirective);

// node_modules/@ui5/webcomponents-base/dist/renderer/LitRenderer.js
var effectiveHtml = (strings, ...values) => {
  const litStatic = getFeature("LitStatic");
  const fn = litStatic ? litStatic.html : html;
  return fn(strings, ...values);
};
var effectiveSvg = (strings, ...values) => {
  const litStatic = getFeature("LitStatic");
  const fn = litStatic ? litStatic.svg : svg;
  return fn(strings, ...values);
};
var litRender = (templateResult, container, styleStrOrHrefsArr, forStaticArea, options) => {
  const openUI5Enablement = getFeature("OpenUI5Enablement");
  if (openUI5Enablement && !forStaticArea) {
    templateResult = openUI5Enablement.wrapTemplateResultInBusyMarkup(effectiveHtml, options.host, templateResult);
  }
  if (typeof styleStrOrHrefsArr === "string") {
    templateResult = effectiveHtml`<style>${styleStrOrHrefsArr}</style>${templateResult}`;
  } else if (Array.isArray(styleStrOrHrefsArr) && styleStrOrHrefsArr.length) {
    templateResult = effectiveHtml`${styleStrOrHrefsArr.map((href) => effectiveHtml`<link type="text/css" rel="stylesheet" href="${href}">`)}${templateResult}`;
  }
  render(templateResult, container, options);
};
var scopeTag = (tag2, tags, suffix) => {
  const litStatic = getFeature("LitStatic");
  if (litStatic) {
    return litStatic.unsafeStatic((tags || []).includes(tag2) ? `${tag2}-${suffix}` : tag2);
  }
};
var LitRenderer_default = litRender;

// node_modules/@ui5/webcomponents-localization/dist/LocaleData.js
var LocaleDataWrapped = LocaleData_default;
var LocaleData = class extends LocaleDataWrapped {
};
var LocaleData_default2 = LocaleData;

// node_modules/@ui5/webcomponents-localization/dist/getCachedLocaleDataInstance.js
var cache = /* @__PURE__ */ new Map();
var getCachedLocaleDataInstance = (locale) => {
  if (!cache.has(locale)) {
    cache.set(locale, new LocaleData_default2(locale));
  }
  return cache.get(locale);
};
var getCachedLocaleDataInstance_default = getCachedLocaleDataInstance;

// node_modules/@ui5/webcomponents-localization/dist/dates/ExtremeDates.js
var cache2 = /* @__PURE__ */ new Map();
var getMinCalendarDate = (primaryCalendarType) => {
  const key = `min ${primaryCalendarType}`;
  if (!cache2.has(key)) {
    const minDate = new CalendarDate_default(1, 0, 1, primaryCalendarType);
    minDate.setYear(1);
    minDate.setMonth(0);
    minDate.setDate(1);
    cache2.set(key, minDate);
  }
  return cache2.get(key);
};
var getMaxCalendarDate = (primaryCalendarType) => {
  const key = `max ${primaryCalendarType}`;
  if (!cache2.has(key)) {
    const maxDate = new CalendarDate_default(1, 0, 1, primaryCalendarType);
    maxDate.setYear(9999);
    maxDate.setMonth(11);
    const tempDate = new CalendarDate_default(maxDate, primaryCalendarType);
    tempDate.setDate(1);
    tempDate.setMonth(tempDate.getMonth() + 1, 0);
    maxDate.setDate(tempDate.getDate());
    cache2.set(key, maxDate);
  }
  return cache2.get(key);
};

// node_modules/@ui5/webcomponents/dist/DateComponentBase.js
var __decorate = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DateComponentBase_1;
var DateComponentBase = DateComponentBase_1 = class DateComponentBase2 extends UI5Element_default {
  constructor() {
    super();
  }
  get _primaryCalendarType() {
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    return this.primaryCalendarType || getCalendarType() || localeData.getPreferredCalendarType();
  }
  get _secondaryCalendarType() {
    return this.secondaryCalendarType || getSecondaryCalendarType();
  }
  get _minDate() {
    let minDate;
    if (this.minDate) {
      minDate = this._getMinMaxCalendarDateFromString(this.minDate);
    }
    return minDate || getMinCalendarDate(this._primaryCalendarType);
  }
  get _maxDate() {
    let maxDate;
    if (this.maxDate) {
      maxDate = this._getMinMaxCalendarDateFromString(this.maxDate);
    }
    return maxDate || getMaxCalendarDate(this._primaryCalendarType);
  }
  get _formatPattern() {
    return this.formatPattern || "medium";
  }
  get _isPattern() {
    return this._formatPattern !== "medium" && this._formatPattern !== "short" && this._formatPattern !== "long";
  }
  get hasSecondaryCalendarType() {
    return !!this.secondaryCalendarType && this.secondaryCalendarType !== this.primaryCalendarType;
  }
  _getMinMaxCalendarDateFromString(date) {
    if (this.getFormat().parse(date)) {
      return this._getCalendarDateFromString(date);
    }
    const jsDate = this.getISOFormat().parse(date);
    if (jsDate) {
      return CalendarDate_default.fromLocalJSDate(jsDate, this._primaryCalendarType);
    }
  }
  _getCalendarDateFromString(value) {
    const jsDate = this.getFormat().parse(value);
    if (jsDate) {
      return CalendarDate_default.fromLocalJSDate(jsDate, this._primaryCalendarType);
    }
  }
  _getTimeStampFromString(value) {
    const calDate = this._getCalendarDateFromString(value);
    if (calDate) {
      return calDate.toUTCJSDate().valueOf();
    }
  }
  _getStringFromTimestamp(timestamp) {
    const localDate = new Date(timestamp);
    return this.getFormat().format(localDate, true);
  }
  getFormat() {
    return this._isPattern ? DateFormat_default2.getDateInstance({
      strictParsing: true,
      pattern: this._formatPattern,
      calendarType: this._primaryCalendarType
    }) : DateFormat_default2.getDateInstance({
      strictParsing: true,
      style: this._formatPattern,
      calendarType: this._primaryCalendarType
    });
  }
  getISOFormat() {
    if (!this._isoFormatInstance) {
      this._isoFormatInstance = DateFormat_default2.getDateInstance({
        strictParsing: true,
        pattern: "YYYY-MM-dd",
        calendarType: this._primaryCalendarType
      });
    }
    return this._isoFormatInstance;
  }
  static async onDefine() {
    [DateComponentBase_1.i18nBundle] = await Promise.all([
      getI18nBundle("@ui5/webcomponents"),
      fetchCldr(getLocale_default().getLanguage(), getLocale_default().getRegion(), getLocale_default().getScript())
    ]);
  }
};
__decorate([
  property_default({ type: CalendarType_default })
], DateComponentBase.prototype, "primaryCalendarType", void 0);
__decorate([
  property_default({ type: CalendarType_default })
], DateComponentBase.prototype, "secondaryCalendarType", void 0);
__decorate([
  property_default()
], DateComponentBase.prototype, "formatPattern", void 0);
__decorate([
  property_default()
], DateComponentBase.prototype, "minDate", void 0);
__decorate([
  property_default()
], DateComponentBase.prototype, "maxDate", void 0);
DateComponentBase = DateComponentBase_1 = __decorate([
  customElement_default({
    languageAware: true,
    renderer: LitRenderer_default
  })
], DateComponentBase);
var DateComponentBase_default = DateComponentBase;

// node_modules/@ui5/webcomponents/dist/generated/templates/IconTemplate.lit.js
function block0(context, tags, suffix) {
  return effectiveHtml`<svg class="ui5-icon-root" part="root" tabindex="${ifDefined(this._tabIndex)}" dir="${ifDefined(this._dir)}" viewBox="${ifDefined(this.viewBox)}" role="${ifDefined(this.effectiveAccessibleRole)}" focusable="false" preserveAspectRatio="xMidYMid meet" aria-label="${ifDefined(this.effectiveAccessibleName)}" aria-hidden=${ifDefined(this.effectiveAriaHidden)} xmlns="http://www.w3.org/2000/svg" @focusin=${this._onfocusin} @focusout=${this._onfocusout} @keydown=${this._onkeydown} @keyup=${this._onkeyup}>${blockSVG1.call(this, context, tags, suffix)}</svg>`;
}
function block1(context, tags, suffix) {
  return effectiveSvg`<title id="${ifDefined(this._id)}-tooltip">${ifDefined(this.effectiveAccessibleName)}</title>`;
}
function block2(context, tags, suffix) {
  return effectiveSvg`${ifDefined(this.customSvg)}`;
}
function block3(context, tags, suffix, item, index) {
  return effectiveSvg`<path d="${ifDefined(item)}"></path>`;
}
function blockSVG1(context, tags, suffix) {
  return effectiveSvg`${this.hasIconTooltip ? block1.call(this, context, tags, suffix) : void 0}<g role="presentation">${this.customSvg ? block2.call(this, context, tags, suffix) : void 0}${repeat(this.pathData, (item, index) => item._id || index, (item, index) => block3.call(this, context, tags, suffix, item, index))}</g>`;
}
var IconTemplate_lit_default = block0;

// node_modules/@ui5/webcomponents/dist/types/IconDesign.js
var IconDesign;
(function(IconDesign2) {
  IconDesign2["Contrast"] = "Contrast";
  IconDesign2["Critical"] = "Critical";
  IconDesign2["Default"] = "Default";
  IconDesign2["Information"] = "Information";
  IconDesign2["Negative"] = "Negative";
  IconDesign2["Neutral"] = "Neutral";
  IconDesign2["NonInteractive"] = "NonInteractive";
  IconDesign2["Positive"] = "Positive";
})(IconDesign || (IconDesign = {}));
var IconDesign_default = IconDesign;

// node_modules/@ui5/webcomponents-theming/dist/generated/themes/sap_horizon/parameters-bundle.css.js
var styleData = { packageName: "@ui5/webcomponents-theming", fileName: "themes/sap_horizon/parameters-bundle.css.ts", content: `:root{--sapThemeMetaData-Base-baseLib:{"Path": "Base.baseLib.sap_horizon.css_variables","PathPattern": "/%frameworkId%/%libId%/%themeId%/%fileId%.css","Extends": ["baseTheme"],"Tags": ["Fiori_3","LightColorScheme"],"FallbackThemeId": "sap_fiori_3","Engine":{"Name": "theming-engine","Version": "8.0.2"},"Version":{"Build": "11.12.0.20240207130903","Source": "11.12.0"}};--sapBrandColor: #0070f2;--sapHighlightColor: #0064d9;--sapBaseColor: #fff;--sapShellColor: #fff;--sapBackgroundColor: #f5f6f7;--sapFontFamily: "72", "72full", Arial, Helvetica, sans-serif;--sapFontSize: .875rem;--sapTextColor: #1d2d3e;--sapLinkColor: #0064d9;--sapCompanyLogo: none;--sapBackgroundImage: none;--sapBackgroundImageOpacity: 1;--sapBackgroundImageRepeat: false;--sapSelectedColor: #0064d9;--sapHoverColor: #eaecee;--sapActiveColor: #dee2e5;--sapHighlightTextColor: #fff;--sapTitleColor: #1d2d3e;--sapNegativeColor: #aa0808;--sapCriticalColor: #e76500;--sapPositiveColor: #256f3a;--sapInformativeColor: #0070f2;--sapNeutralColor: #788fa6;--sapNegativeElementColor: #f53232;--sapCriticalElementColor: #e76500;--sapPositiveElementColor: #30914c;--sapInformativeElementColor: #0070f2;--sapNeutralElementColor: #788fa6;--sapNegativeTextColor: #aa0808;--sapCriticalTextColor: #b44f00;--sapPositiveTextColor: #256f3a;--sapInformativeTextColor: #0064d9;--sapNeutralTextColor: #1d2d3e;--sapErrorColor: #aa0808;--sapWarningColor: #e76500;--sapSuccessColor: #256f3a;--sapInformationColor: #0070f2;--sapErrorBackground: #ffeaf4;--sapWarningBackground: #fff8d6;--sapSuccessBackground: #f5fae5;--sapInformationBackground: #e1f4ff;--sapNeutralBackground: #eff1f2;--sapErrorBorderColor: #e90b0b;--sapWarningBorderColor: #dd6100;--sapSuccessBorderColor: #30914c;--sapInformationBorderColor: #0070f2;--sapNeutralBorderColor: #788fa6;--sapElement_LineHeight: 2.75rem;--sapElement_Height: 2.25rem;--sapElement_BorderWidth: .0625rem;--sapElement_BorderCornerRadius: .75rem;--sapElement_Compact_LineHeight: 2rem;--sapElement_Compact_Height: 1.625rem;--sapElement_Condensed_LineHeight: 1.5rem;--sapElement_Condensed_Height: 1.375rem;--sapContent_LineHeight: 1.5;--sapContent_IconHeight: 1rem;--sapContent_IconColor: #1d2d3e;--sapContent_ContrastIconColor: #fff;--sapContent_NonInteractiveIconColor: #758ca4;--sapContent_MarkerIconColor: #5d36ff;--sapContent_MarkerTextColor: #046c7a;--sapContent_MeasureIndicatorColor: #556b81;--sapContent_Selected_MeasureIndicatorColor: #0064d9;--sapContent_Placeholderloading_Background: #ccc;--sapContent_Placeholderloading_Gradient: linear-gradient(to right, #ccc 0%, #ccc 20%, #999 50%, #ccc 80%, #ccc 100%);--sapContent_ImagePlaceholderBackground: #eaecee;--sapContent_ImagePlaceholderForegroundColor: #5b738b;--sapContent_RatedColor: #d27700;--sapContent_UnratedColor: #758ca4;--sapContent_BusyColor: #0064d9;--sapContent_FocusColor: #0032a5;--sapContent_FocusStyle: solid;--sapContent_FocusWidth: .125rem;--sapContent_ContrastFocusColor: #fff;--sapContent_ShadowColor: #223548;--sapContent_ContrastShadowColor: #fff;--sapContent_Shadow0: 0 0 .125rem 0 rgba(34,53,72,.2), 0 .125rem .25rem 0 rgba(34,53,72,.2);--sapContent_Shadow1: 0 0 0 .0625rem rgba(34,53,72,.48), 0 .125rem .5rem 0 rgba(34,53,72,.3);--sapContent_Shadow2: 0 0 0 .0625rem rgba(34,53,72,.48), 0 .625rem 1.875rem 0 rgba(34,53,72,.25);--sapContent_Shadow3: 0 0 0 .0625rem rgba(34,53,72,.48), 0 1.25rem 5rem 0 rgba(34,53,72,.25);--sapContent_TextShadow: 0 0 .125rem #fff;--sapContent_ContrastTextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapContent_HeaderShadow: 0 .125rem .125rem 0 rgba(34,53,72,.05), inset 0 -.0625rem 0 0 #d9d9d9;--sapContent_Interaction_Shadow: inset 0 0 0 .0625rem rgba(85,107,129,.25);--sapContent_Selected_Shadow: inset 0 0 0 .0625rem rgba(79,160,255,.5);--sapContent_Negative_Shadow: inset 0 0 0 .0625rem rgba(255,142,196,.45);--sapContent_Critical_Shadow: inset 0 0 0 .0625rem rgba(255,213,10,.4);--sapContent_Positive_Shadow: inset 0 0 0 .0625rem rgba(48,145,76,.18);--sapContent_Informative_Shadow: inset 0 0 0 .0625rem rgba(104,174,255,.5);--sapContent_Neutral_Shadow: inset 0 0 0 .0625rem rgba(120,143,166,.3);--sapContent_SearchHighlightColor: #dafdf5;--sapContent_HelpColor: #188918;--sapContent_LabelColor: #556b82;--sapContent_MonospaceFontFamily: "72Mono", "72Monofull", lucida console, monospace;--sapContent_MonospaceBoldFontFamily: "72Mono-Bold", "72Mono-Boldfull", lucida console, monospace;--sapContent_IconFontFamily: "SAP-icons";--sapContent_DisabledTextColor: rgba(29,45,62,.6);--sapContent_DisabledOpacity: .4;--sapContent_ContrastTextThreshold: .65;--sapContent_ContrastTextColor: #fff;--sapContent_ForegroundColor: #efefef;--sapContent_ForegroundBorderColor: #758ca4;--sapContent_ForegroundTextColor: #1d2d3e;--sapContent_BadgeBackground: #aa0808;--sapContent_BadgeTextColor: #fff;--sapContent_DragAndDropActiveColor: #0064d9;--sapContent_Selected_TextColor: #0064d9;--sapContent_Selected_Background: #fff;--sapContent_Selected_Hover_Background: #e3f0ff;--sapContent_Selected_ForegroundColor: #0064d9;--sapContent_ForcedColorAdjust: none;--sapContent_Illustrative_Color1: #5d36ff;--sapContent_Illustrative_Color2: #0070f2;--sapContent_Illustrative_Color3: #f58b00;--sapContent_Illustrative_Color4: #00144a;--sapContent_Illustrative_Color5: #a9b4be;--sapContent_Illustrative_Color6: #d5dadd;--sapContent_Illustrative_Color7: #ebf8ff;--sapContent_Illustrative_Color8: #fff;--sapContent_Illustrative_Color9: #64edd2;--sapContent_Illustrative_Color10: #ebf8ff;--sapContent_Illustrative_Color11: #f31ded;--sapContent_Illustrative_Color12: #00a800;--sapContent_Illustrative_Color13: #005dc9;--sapContent_Illustrative_Color14: #004da5;--sapContent_Illustrative_Color15: #cc7400;--sapContent_Illustrative_Color16: #3b0ac6;--sapContent_Illustrative_Color17: #00a58a;--sapContent_Illustrative_Color18: #d1efff;--sapContent_Illustrative_Color19: #b8e6ff;--sapContent_Illustrative_Color20: #9eddff;--sapFontLightFamily: "72-Light", "72-Lightfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontBoldFamily: "72-Bold", "72-Boldfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontSemiboldFamily: "72-Semibold", "72-Semiboldfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontSemiboldDuplexFamily: "72-SemiboldDuplex", "72-SemiboldDuplexfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontBlackFamily: "72Black", "72Blackfull","72", "72full", Arial, Helvetica, sans-serif;--sapFontHeaderFamily: "72-Bold", "72-Boldfull", "72", "72full", Arial, Helvetica, sans-serif;--sapFontSmallSize: .75rem;--sapFontLargeSize: 1rem;--sapFontHeader1Size: 3rem;--sapFontHeader2Size: 2rem;--sapFontHeader3Size: 1.5rem;--sapFontHeader4Size: 1.25rem;--sapFontHeader5Size: 1rem;--sapFontHeader6Size: .875rem;--sapLink_TextDecoration: none;--sapLink_Hover_Color: #0064d9;--sapLink_Hover_TextDecoration: underline;--sapLink_Active_Color: #0064d9;--sapLink_Active_TextDecoration: none;--sapLink_Visited_Color: #0064d9;--sapLink_InvertedColor: #a6cfff;--sapLink_SubtleColor: #1d2d3e;--sapShell_Background: #eff1f2;--sapShell_BackgroundImage: linear-gradient(to bottom, #eff1f2, #eff1f2);--sapShell_BackgroundImageOpacity: 1;--sapShell_BackgroundImageRepeat: false;--sapShell_BorderColor: #fff;--sapShell_TextColor: #1d2d3e;--sapShell_InteractiveBackground: #eff1f2;--sapShell_InteractiveTextColor: #1d2d3e;--sapShell_InteractiveBorderColor: #556b81;--sapShell_GroupTitleTextColor: #1d2d3e;--sapShell_GroupTitleTextShadow: 0 0 .125rem #fff;--sapShell_Hover_Background: #fff;--sapShell_Active_Background: #fff;--sapShell_Active_TextColor: #0070f2;--sapShell_Selected_Background: #fff;--sapShell_Selected_TextColor: #0070f2;--sapShell_Selected_Hover_Background: #fff;--sapShell_Favicon: none;--sapShell_Navigation_Background: #fff;--sapShell_Navigation_Hover_Background: #fff;--sapShell_Navigation_SelectedColor: #0064d9;--sapShell_Navigation_Selected_TextColor: #0064d9;--sapShell_Navigation_TextColor: #1d2d3e;--sapShell_Navigation_Active_TextColor: #0064d9;--sapShell_Navigation_Active_Background: #fff;--sapShell_Shadow: 0 .125rem .125rem 0 rgba(34,53,72,.15), inset 0 -.0625rem 0 0 rgba(34,53,72,.2);--sapShell_NegativeColor: #aa0808;--sapShell_CriticalColor: #b44f00;--sapShell_PositiveColor: #256f3a;--sapShell_InformativeColor: #0064d9;--sapShell_NeutralColor: #1d2d3e;--sapShell_Assistant_ForegroundColor: #5d36ff;--sapShell_Category_1_Background: #0057d2;--sapShell_Category_1_BorderColor: #0057d2;--sapShell_Category_1_TextColor: #fff;--sapShell_Category_1_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_2_Background: #df1278;--sapShell_Category_2_BorderColor: #df1278;--sapShell_Category_2_TextColor: #fff;--sapShell_Category_2_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_3_Background: #e76500;--sapShell_Category_3_BorderColor: #e76500;--sapShell_Category_3_TextColor: #fff;--sapShell_Category_3_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_4_Background: #7800a4;--sapShell_Category_4_BorderColor: #7800a4;--sapShell_Category_4_TextColor: #fff;--sapShell_Category_4_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_5_Background: #aa2608;--sapShell_Category_5_BorderColor: #aa2608;--sapShell_Category_5_TextColor: #fff;--sapShell_Category_5_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_6_Background: #07838f;--sapShell_Category_6_BorderColor: #07838f;--sapShell_Category_6_TextColor: #fff;--sapShell_Category_6_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_7_Background: #f31ded;--sapShell_Category_7_BorderColor: #f31ded;--sapShell_Category_7_TextColor: #fff;--sapShell_Category_7_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_8_Background: #188918;--sapShell_Category_8_BorderColor: #188918;--sapShell_Category_8_TextColor: #fff;--sapShell_Category_8_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_9_Background: #002a86;--sapShell_Category_9_BorderColor: #002a86;--sapShell_Category_9_TextColor: #fff;--sapShell_Category_9_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_10_Background: #5b738b;--sapShell_Category_10_BorderColor: #5b738b;--sapShell_Category_10_TextColor: #fff;--sapShell_Category_10_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_11_Background: #d20a0a;--sapShell_Category_11_BorderColor: #d20a0a;--sapShell_Category_11_TextColor: #fff;--sapShell_Category_11_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_12_Background: #7858ff;--sapShell_Category_12_BorderColor: #7858ff;--sapShell_Category_12_TextColor: #fff;--sapShell_Category_12_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_13_Background: #a00875;--sapShell_Category_13_BorderColor: #a00875;--sapShell_Category_13_TextColor: #fff;--sapShell_Category_13_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_14_Background: #14565b;--sapShell_Category_14_BorderColor: #14565b;--sapShell_Category_14_TextColor: #fff;--sapShell_Category_14_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_15_Background: #223548;--sapShell_Category_15_BorderColor: #223548;--sapShell_Category_15_TextColor: #fff;--sapShell_Category_15_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapShell_Category_16_Background: #1e592f;--sapShell_Category_16_BorderColor: #1e592f;--sapShell_Category_16_TextColor: #fff;--sapShell_Category_16_TextShadow: 0 0 .0625rem rgba(0,0,0,.7);--sapAssistant_Color1: #5d36ff;--sapAssistant_Color2: #a100c2;--sapAssistant_BackgroundGradient: linear-gradient(#5d36ff, #a100c2);--sapAssistant_Background: #5d36ff;--sapAssistant_BorderColor: #5d36ff;--sapAssistant_TextColor: #fff;--sapAssistant_Hover_Background: #2800cf;--sapAssistant_Hover_BorderColor: #2800cf;--sapAssistant_Hover_TextColor: #fff;--sapAssistant_Active_Background: #fff;--sapAssistant_Active_BorderColor: #5d36ff;--sapAssistant_Active_TextColor: #5d36ff;--sapAssistant_Question_Background: #eae5ff;--sapAssistant_Question_BorderColor: #eae5ff;--sapAssistant_Question_TextColor: #1d2d3e;--sapAssistant_Answer_Background: #eff1f2;--sapAssistant_Answer_BorderColor: #eff1f2;--sapAssistant_Answer_TextColor: #1d2d3e;--sapAvatar_1_Background: #fff3b8;--sapAvatar_1_BorderColor: #fff3b8;--sapAvatar_1_TextColor: #a45d00;--sapAvatar_2_Background: #ffd0e7;--sapAvatar_2_BorderColor: #ffd0e7;--sapAvatar_2_TextColor: #aa0808;--sapAvatar_3_Background: #ffdbe7;--sapAvatar_3_BorderColor: #ffdbe7;--sapAvatar_3_TextColor: #ba066c;--sapAvatar_4_Background: #ffdcf3;--sapAvatar_4_BorderColor: #ffdcf3;--sapAvatar_4_TextColor: #a100c2;--sapAvatar_5_Background: #ded3ff;--sapAvatar_5_BorderColor: #ded3ff;--sapAvatar_5_TextColor: #552cff;--sapAvatar_6_Background: #d1efff;--sapAvatar_6_BorderColor: #d1efff;--sapAvatar_6_TextColor: #0057d2;--sapAvatar_7_Background: #c2fcee;--sapAvatar_7_BorderColor: #c2fcee;--sapAvatar_7_TextColor: #046c7a;--sapAvatar_8_Background: #ebf5cb;--sapAvatar_8_BorderColor: #ebf5cb;--sapAvatar_8_TextColor: #256f3a;--sapAvatar_9_Background: #ddccf0;--sapAvatar_9_BorderColor: #ddccf0;--sapAvatar_9_TextColor: #6c32a9;--sapAvatar_10_Background: #eaecee;--sapAvatar_10_BorderColor: #eaecee;--sapAvatar_10_TextColor: #556b82;--sapButton_Background: #fff;--sapButton_BorderColor: #bcc3ca;--sapButton_BorderWidth: .0625rem;--sapButton_BorderCornerRadius: .5rem;--sapButton_TextColor: #0064d9;--sapButton_Hover_Background: #eaecee;--sapButton_Hover_BorderColor: #bcc3ca;--sapButton_Hover_TextColor: #0064d9;--sapButton_IconColor: #0064d9;--sapButton_Active_Background: #fff;--sapButton_Active_BorderColor: #0064d9;--sapButton_Active_TextColor: #0064d9;--sapButton_Emphasized_Background: #0070f2;--sapButton_Emphasized_BorderColor: #0070f2;--sapButton_Emphasized_TextColor: #fff;--sapButton_Emphasized_Hover_Background: #0064d9;--sapButton_Emphasized_Hover_BorderColor: #0064d9;--sapButton_Emphasized_Hover_TextColor: #fff;--sapButton_Emphasized_Active_Background: #fff;--sapButton_Emphasized_Active_BorderColor: #0064d9;--sapButton_Emphasized_Active_TextColor: #0064d9;--sapButton_Emphasized_TextShadow: transparent;--sapButton_Emphasized_FontWeight: bold;--sapButton_Reject_Background: #ffd6e9;--sapButton_Reject_BorderColor: #ffc2de;--sapButton_Reject_TextColor: #aa0808;--sapButton_Reject_Hover_Background: #ffbddb;--sapButton_Reject_Hover_BorderColor: #ffbddb;--sapButton_Reject_Hover_TextColor: #aa0808;--sapButton_Reject_Active_Background: #fff;--sapButton_Reject_Active_BorderColor: #e90b0b;--sapButton_Reject_Active_TextColor: #aa0808;--sapButton_Reject_Selected_Background: #fff;--sapButton_Reject_Selected_BorderColor: #e90b0b;--sapButton_Reject_Selected_TextColor: #aa0808;--sapButton_Reject_Selected_Hover_Background: #ffbddb;--sapButton_Reject_Selected_Hover_BorderColor: #e90b0b;--sapButton_Accept_Background: #ebf5cb;--sapButton_Accept_BorderColor: #dbeda0;--sapButton_Accept_TextColor: #256f3a;--sapButton_Accept_Hover_Background: #e3f1b6;--sapButton_Accept_Hover_BorderColor: #e3f1b6;--sapButton_Accept_Hover_TextColor: #256f3a;--sapButton_Accept_Active_Background: #fff;--sapButton_Accept_Active_BorderColor: #30914c;--sapButton_Accept_Active_TextColor: #256f3a;--sapButton_Accept_Selected_Background: #fff;--sapButton_Accept_Selected_BorderColor: #30914c;--sapButton_Accept_Selected_TextColor: #256f3a;--sapButton_Accept_Selected_Hover_Background: #e3f1b6;--sapButton_Accept_Selected_Hover_BorderColor: #30914c;--sapButton_Lite_Background: transparent;--sapButton_Lite_BorderColor: transparent;--sapButton_Lite_TextColor: #0064d9;--sapButton_Lite_Hover_Background: #eaecee;--sapButton_Lite_Hover_BorderColor: #bcc3ca;--sapButton_Lite_Hover_TextColor: #0064d9;--sapButton_Lite_Active_Background: #fff;--sapButton_Lite_Active_BorderColor: #0064d9;--sapButton_Selected_Background: #edf6ff;--sapButton_Selected_BorderColor: #0064d9;--sapButton_Selected_TextColor: #0064d9;--sapButton_Selected_Hover_Background: #d9ecff;--sapButton_Selected_Hover_BorderColor: #0064d9;--sapButton_Attention_Background: #fff3b7;--sapButton_Attention_BorderColor: #ffeb84;--sapButton_Attention_TextColor: #b44f00;--sapButton_Attention_Hover_Background: #ffef9e;--sapButton_Attention_Hover_BorderColor: #ffef9e;--sapButton_Attention_Hover_TextColor: #b44f00;--sapButton_Attention_Active_Background: #fff;--sapButton_Attention_Active_BorderColor: #dd6100;--sapButton_Attention_Active_TextColor: #b44f00;--sapButton_Attention_Selected_Background: #fff;--sapButton_Attention_Selected_BorderColor: #dd6100;--sapButton_Attention_Selected_TextColor: #b44f00;--sapButton_Attention_Selected_Hover_Background: #ffef9e;--sapButton_Attention_Selected_Hover_BorderColor: #dd6100;--sapButton_Negative_Background: #f53232;--sapButton_Negative_BorderColor: #f53232;--sapButton_Negative_TextColor: #fff;--sapButton_Negative_Hover_Background: #e90b0b;--sapButton_Negative_Hover_BorderColor: #e90b0b;--sapButton_Negative_Hover_TextColor: #fff;--sapButton_Negative_Active_Background: #fff;--sapButton_Negative_Active_BorderColor: #f53232;--sapButton_Negative_Active_TextColor: #aa0808;--sapButton_Critical_Background: #e76500;--sapButton_Critical_BorderColor: #e76500;--sapButton_Critical_TextColor: #fff;--sapButton_Critical_Hover_Background: #dd6100;--sapButton_Critical_Hover_BorderColor: #dd6100;--sapButton_Critical_Hover_TextColor: #fff;--sapButton_Critical_Active_Background: #fff;--sapButton_Critical_Active_BorderColor: #dd6100;--sapButton_Critical_Active_TextColor: #b44f00;--sapButton_Success_Background: #30914c;--sapButton_Success_BorderColor: #30914c;--sapButton_Success_TextColor: #fff;--sapButton_Success_Hover_Background: #2c8646;--sapButton_Success_Hover_BorderColor: #2c8646;--sapButton_Success_Hover_TextColor: #fff;--sapButton_Success_Active_Background: #fff;--sapButton_Success_Active_BorderColor: #30914c;--sapButton_Success_Active_TextColor: #256f3a;--sapButton_Information_Background: #e8f3ff;--sapButton_Information_BorderColor: #b5d8ff;--sapButton_Information_TextColor: #0064d9;--sapButton_Information_Hover_Background: #d4e8ff;--sapButton_Information_Hover_BorderColor: #b5d8ff;--sapButton_Information_Hover_TextColor: #0064d9;--sapButton_Information_Active_Background: #fff;--sapButton_Information_Active_BorderColor: #0064d9;--sapButton_Information_Active_TextColor: #0064d9;--sapButton_Neutral_Background: #e8f3ff;--sapButton_Neutral_BorderColor: #b5d8ff;--sapButton_Neutral_TextColor: #0064d9;--sapButton_Neutral_Hover_Background: #d4e8ff;--sapButton_Neutral_Hover_BorderColor: #b5d8ff;--sapButton_Neutral_Hover_TextColor: #0064d9;--sapButton_Neutral_Active_Background: #fff;--sapButton_Neutral_Active_BorderColor: #0064d9;--sapButton_Neutral_Active_TextColor: #0064d9;--sapButton_Track_Background: #788fa6;--sapButton_Track_BorderColor: #788fa6;--sapButton_Track_TextColor: #fff;--sapButton_Track_Hover_Background: #637d97;--sapButton_Track_Hover_BorderColor: #637d97;--sapButton_Track_Selected_Background: #0064d9;--sapButton_Track_Selected_BorderColor: #0064d9;--sapButton_Track_Selected_TextColor: #fff;--sapButton_Track_Selected_Hover_Background: #0058c0;--sapButton_Track_Selected_Hover_BorderColor: #0058c0;--sapButton_Handle_Background: #fff;--sapButton_Handle_BorderColor: #fff;--sapButton_Handle_TextColor: #1d2d3e;--sapButton_Handle_Hover_Background: #fff;--sapButton_Handle_Hover_BorderColor: rgba(255,255,255,.5);--sapButton_Handle_Selected_Background: #edf6ff;--sapButton_Handle_Selected_BorderColor: #edf6ff;--sapButton_Handle_Selected_TextColor: #0064d9;--sapButton_Handle_Selected_Hover_Background: #edf6ff;--sapButton_Handle_Selected_Hover_BorderColor: rgba(237,246,255,.5);--sapButton_Track_Negative_Background: #f53232;--sapButton_Track_Negative_BorderColor: #f53232;--sapButton_Track_Negative_TextColor: #fff;--sapButton_Track_Negative_Hover_Background: #e90b0b;--sapButton_Track_Negative_Hover_BorderColor: #e90b0b;--sapButton_Handle_Negative_Background: #fff;--sapButton_Handle_Negative_BorderColor: #fff;--sapButton_Handle_Negative_TextColor: #aa0808;--sapButton_Handle_Negative_Hover_Background: #fff;--sapButton_Handle_Negative_Hover_BorderColor: rgba(255,255,255,.5);--sapButton_Track_Positive_Background: #30914c;--sapButton_Track_Positive_BorderColor: #30914c;--sapButton_Track_Positive_TextColor: #fff;--sapButton_Track_Positive_Hover_Background: #2c8646;--sapButton_Track_Positive_Hover_BorderColor: #2c8646;--sapButton_Handle_Positive_Background: #fff;--sapButton_Handle_Positive_BorderColor: #fff;--sapButton_Handle_Positive_TextColor: #256f3a;--sapButton_Handle_Positive_Hover_Background: #fff;--sapButton_Handle_Positive_Hover_BorderColor: rgba(255,255,255,.5);--sapButton_TokenBackground: #fff;--sapButton_TokenBorderColor: #bcc3ca;--sapField_Background: #fff;--sapField_BackgroundStyle: 0 100% / 100% .0625rem no-repeat linear-gradient(0deg, #556b81, #556b81) border-box;--sapField_TextColor: #131e29;--sapField_PlaceholderTextColor: #556b82;--sapField_BorderColor: #556b81;--sapField_HelpBackground: #fff;--sapField_BorderWidth: .0625rem;--sapField_BorderStyle: none;--sapField_BorderCornerRadius: .25rem;--sapField_Shadow: inset 0 0 0 .0625rem rgba(85,107,129,.25);--sapField_Hover_Background: #fff;--sapField_Hover_BackgroundStyle: 0 100% / 100% .0625rem no-repeat linear-gradient(0deg, #0064d9, #0064d9) border-box;--sapField_Hover_BorderColor: #0064d9;--sapField_Hover_HelpBackground: #fff;--sapField_Hover_Shadow: inset 0 0 0 .0625rem rgba(79,160,255,.5);--sapField_Hover_InvalidShadow: inset 0 0 0 .0625rem rgba(255,142,196,.45);--sapField_Hover_WarningShadow: inset 0 0 0 .0625rem rgba(255,213,10,.4);--sapField_Hover_SuccessShadow: inset 0 0 0 .0625rem rgba(48,145,76,.18);--sapField_Hover_InformationShadow: inset 0 0 0 .0625rem rgba(104,174,255,.5);--sapField_Active_BorderColor: #0064d9;--sapField_Focus_Background: #fff;--sapField_Focus_BorderColor: #0032a5;--sapField_Focus_HelpBackground: #fff;--sapField_ReadOnly_Background: #eaecee;--sapField_ReadOnly_BackgroundStyle: 0 100% / .375rem .0625rem repeat-x linear-gradient(90deg, #556b81 0, #556b81 .25rem, transparent .25rem) border-box;--sapField_ReadOnly_BorderColor: #556b81;--sapField_ReadOnly_BorderStyle: none;--sapField_ReadOnly_HelpBackground: #eaecee;--sapField_RequiredColor: #ba066c;--sapField_InvalidColor: #e90b0b;--sapField_InvalidBackground: #ffeaf4;--sapField_InvalidBackgroundStyle: 0 100% / 100% .125rem no-repeat linear-gradient(0deg, #e90b0b, #e90b0b) border-box;--sapField_InvalidBorderWidth: .125rem;--sapField_InvalidBorderStyle: none;--sapField_InvalidShadow: inset 0 0 0 .0625rem rgba(255,142,196,.45);--sapField_WarningColor: #dd6100;--sapField_WarningBackground: #fff8d6;--sapField_WarningBackgroundStyle: 0 100% / 100% .125rem no-repeat linear-gradient(0deg, #dd6100, #dd6100) border-box;--sapField_WarningBorderWidth: .125rem;--sapField_WarningBorderStyle: none;--sapField_WarningShadow: inset 0 0 0 .0625rem rgba(255,213,10,.4);--sapField_SuccessColor: #30914c;--sapField_SuccessBackground: #f5fae5;--sapField_SuccessBackgroundStyle: 0 100% / 100% .0625rem no-repeat linear-gradient(0deg, #30914c, #30914c) border-box;--sapField_SuccessBorderWidth: .0625rem;--sapField_SuccessBorderStyle: none;--sapField_SuccessShadow: inset 0 0 0 .0625rem rgba(48,145,76,.18);--sapField_InformationColor: #0070f2;--sapField_InformationBackground: #e1f4ff;--sapField_InformationBackgroundStyle: 0 100% / 100% .125rem no-repeat linear-gradient(0deg, #0070f2, #0070f2) border-box;--sapField_InformationBorderWidth: .125rem;--sapField_InformationBorderStyle: none;--sapField_InformationShadow: inset 0 0 0 .0625rem rgba(104,174,255,.5);--sapGroup_TitleBackground: #fff;--sapGroup_TitleBorderColor: #a8b2bd;--sapGroup_TitleTextColor: #1d2d3e;--sapGroup_Title_FontSize: 1rem;--sapGroup_ContentBackground: #fff;--sapGroup_ContentBorderColor: #d9d9d9;--sapGroup_BorderWidth: .0625rem;--sapGroup_BorderCornerRadius: .5rem;--sapGroup_FooterBackground: transparent;--sapToolbar_Background: #fff;--sapToolbar_SeparatorColor: #d9d9d9;--sapList_HeaderBackground: #fff;--sapList_HeaderBorderColor: #a8b2bd;--sapList_HeaderTextColor: #1d2d3e;--sapList_BorderColor: #e5e5e5;--sapList_BorderWidth: .0625rem;--sapList_TextColor: #1d2d3e;--sapList_Active_TextColor: #1d2d3e;--sapList_Active_Background: #dee2e5;--sapList_SelectionBackgroundColor: #ebf8ff;--sapList_SelectionBorderColor: #0064d9;--sapList_Hover_SelectionBackground: #dcf3ff;--sapList_Background: #fff;--sapList_Hover_Background: #eaecee;--sapList_AlternatingBackground: #f5f6f7;--sapList_GroupHeaderBackground: #fff;--sapList_GroupHeaderBorderColor: #a8b2bd;--sapList_GroupHeaderTextColor: #1d2d3e;--sapList_TableGroupHeaderBackground: #eff1f2;--sapList_TableGroupHeaderBorderColor: #a8b2bd;--sapList_TableGroupHeaderTextColor: #1d2d3e;--sapList_FooterBackground: #fff;--sapList_FooterTextColor: #1d2d3e;--sapList_TableFooterBorder: #a8b2bd;--sapList_TableFixedBorderColor: #8c8c8c;--sapMessage_ErrorBorderColor: #ff8ec4;--sapMessage_WarningBorderColor: #ffe770;--sapMessage_SuccessBorderColor: #cee67e;--sapMessage_InformationBorderColor: #7bcfff;--sapPopover_BorderCornerRadius: .5rem;--sapProgress_Background: #d5dadd;--sapProgress_BorderColor: #d5dadd;--sapProgress_TextColor: #1d2d3e;--sapProgress_FontSize: .875rem;--sapProgress_NegativeBackground: #ffdbec;--sapProgress_NegativeBorderColor: #ffdbec;--sapProgress_NegativeTextColor: #1d2d3e;--sapProgress_CriticalBackground: #fff4bd;--sapProgress_CriticalBorderColor: #fff4bd;--sapProgress_CriticalTextColor: #1d2d3e;--sapProgress_PositiveBackground: #e5f2ba;--sapProgress_PositiveBorderColor: #e5f2ba;--sapProgress_PositiveTextColor: #1d2d3e;--sapProgress_InformationBackground: #cdedff;--sapProgress_InformationBorderColor: #cdedff;--sapProgress_InformationTextColor: #1d2d3e;--sapProgress_Value_Background: #617b94;--sapProgress_Value_BorderColor: #617b94;--sapProgress_Value_TextColor: #788fa6;--sapProgress_Value_NegativeBackground: #f53232;--sapProgress_Value_NegativeBorderColor: #f53232;--sapProgress_Value_NegativeTextColor: #f53232;--sapProgress_Value_CriticalBackground: #e76500;--sapProgress_Value_CriticalBorderColor: #e76500;--sapProgress_Value_CriticalTextColor: #e76500;--sapProgress_Value_PositiveBackground: #30914c;--sapProgress_Value_PositiveBorderColor: #30914c;--sapProgress_Value_PositiveTextColor: #30914c;--sapProgress_Value_InformationBackground: #0070f2;--sapProgress_Value_InformationBorderColor: #0070f2;--sapProgress_Value_InformationTextColor: #0070f2;--sapScrollBar_FaceColor: #7b91a8;--sapScrollBar_TrackColor: #fff;--sapScrollBar_BorderColor: #7b91a8;--sapScrollBar_SymbolColor: #0064d9;--sapScrollBar_Dimension: .75rem;--sapScrollBar_Hover_FaceColor: #5b728b;--sapSlider_Background: #d5dadd;--sapSlider_BorderColor: #d5dadd;--sapSlider_Selected_Background: #0064d9;--sapSlider_Selected_BorderColor: #0064d9;--sapSlider_HandleBackground: #fff;--sapSlider_HandleBorderColor: #b0d5ff;--sapSlider_RangeHandleBackground: #fff;--sapSlider_Hover_HandleBackground: #d9ecff;--sapSlider_Hover_HandleBorderColor: #b0d5ff;--sapSlider_Hover_RangeHandleBackground: #d9ecff;--sapSlider_Active_HandleBackground: #fff;--sapSlider_Active_HandleBorderColor: #0064d9;--sapSlider_Active_RangeHandleBackground: transparent;--sapPageHeader_Background: #fff;--sapPageHeader_BorderColor: #d9d9d9;--sapPageHeader_TextColor: #1d2d3e;--sapPageFooter_Background: #fff;--sapPageFooter_BorderColor: #d9d9d9;--sapPageFooter_TextColor: #1d2d3e;--sapInfobar_Background: #c2fcee;--sapInfobar_Hover_Background: #fff;--sapInfobar_Active_Background: #fff;--sapInfobar_NonInteractive_Background: #f5f6f7;--sapInfobar_TextColor: #046c7a;--sapObjectHeader_Background: #fff;--sapObjectHeader_Hover_Background: #eaecee;--sapObjectHeader_BorderColor: #d9d9d9;--sapObjectHeader_Title_TextColor: #1d2d3e;--sapObjectHeader_Title_FontSize: 1.5rem;--sapObjectHeader_Title_SnappedFontSize: 1.25rem;--sapObjectHeader_Title_FontFamily: "72Black", "72Blackfull","72", "72full", Arial, Helvetica, sans-serif;--sapObjectHeader_Subtitle_TextColor: #556b82;--sapBlockLayer_Background: #000;--sapTile_Background: #fff;--sapTile_Hover_Background: #eaecee;--sapTile_Active_Background: #dee2e5;--sapTile_BorderColor: transparent;--sapTile_BorderCornerRadius: 1rem;--sapTile_TitleTextColor: #1d2d3e;--sapTile_TextColor: #556b82;--sapTile_IconColor: #556b82;--sapTile_SeparatorColor: #ccc;--sapTile_Interactive_BorderColor: #b3b3b3;--sapTile_OverlayBackground: #fff;--sapTile_OverlayForegroundColor: #1d2d3e;--sapAccentColor1: #d27700;--sapAccentColor2: #aa0808;--sapAccentColor3: #ba066c;--sapAccentColor4: #a100c2;--sapAccentColor5: #5d36ff;--sapAccentColor6: #0057d2;--sapAccentColor7: #046c7a;--sapAccentColor8: #256f3a;--sapAccentColor9: #6c32a9;--sapAccentColor10: #5b738b;--sapAccentBackgroundColor1: #fff3b8;--sapAccentBackgroundColor2: #ffd0e7;--sapAccentBackgroundColor3: #ffdbe7;--sapAccentBackgroundColor4: #ffdcf3;--sapAccentBackgroundColor5: #ded3ff;--sapAccentBackgroundColor6: #d1efff;--sapAccentBackgroundColor7: #c2fcee;--sapAccentBackgroundColor8: #ebf5cb;--sapAccentBackgroundColor9: #ddccf0;--sapAccentBackgroundColor10: #eaecee;--sapIndicationColor_1: #840606;--sapIndicationColor_1_Background: #840606;--sapIndicationColor_1_BorderColor: #840606;--sapIndicationColor_1_TextColor: #fff;--sapIndicationColor_1_Hover_Background: #6c0505;--sapIndicationColor_1_Active_Background: #fff;--sapIndicationColor_1_Active_BorderColor: #fb9d9d;--sapIndicationColor_1_Active_TextColor: #840606;--sapIndicationColor_1_Selected_Background: #fff;--sapIndicationColor_1_Selected_BorderColor: #fb9d9d;--sapIndicationColor_1_Selected_TextColor: #840606;--sapIndicationColor_1b: #fb9d9d;--sapIndicationColor_1b_BorderColor: #fb9d9d;--sapIndicationColor_1b_Hover_Background: #fa8585;--sapIndicationColor_2: #aa0808;--sapIndicationColor_2_Background: #aa0808;--sapIndicationColor_2_BorderColor: #aa0808;--sapIndicationColor_2_TextColor: #fff;--sapIndicationColor_2_Hover_Background: #920707;--sapIndicationColor_2_Active_Background: #fff;--sapIndicationColor_2_Active_BorderColor: #fcc4c4;--sapIndicationColor_2_Active_TextColor: #aa0808;--sapIndicationColor_2_Selected_Background: #fff;--sapIndicationColor_2_Selected_BorderColor: #fcc4c4;--sapIndicationColor_2_Selected_TextColor: #aa0808;--sapIndicationColor_2b: #fcc4c4;--sapIndicationColor_2b_BorderColor: #fcc4c4;--sapIndicationColor_2b_Hover_Background: #fbacac;--sapIndicationColor_3: #b95100;--sapIndicationColor_3_Background: #e76500;--sapIndicationColor_3_BorderColor: #e76500;--sapIndicationColor_3_TextColor: #fff;--sapIndicationColor_3_Hover_Background: #d85e00;--sapIndicationColor_3_Active_Background: #fff;--sapIndicationColor_3_Active_BorderColor: #fff2c0;--sapIndicationColor_3_Active_TextColor: #b95100;--sapIndicationColor_3_Selected_Background: #fff;--sapIndicationColor_3_Selected_BorderColor: #fff2c0;--sapIndicationColor_3_Selected_TextColor: #b95100;--sapIndicationColor_3b: #fff2c0;--sapIndicationColor_3b_BorderColor: #fff2c0;--sapIndicationColor_3b_Hover_Background: #ffeda6;--sapIndicationColor_4: #256f3a;--sapIndicationColor_4_Background: #256f3a;--sapIndicationColor_4_BorderColor: #256f3a;--sapIndicationColor_4_TextColor: #fff;--sapIndicationColor_4_Hover_Background: #1f5c30;--sapIndicationColor_4_Active_Background: #fff;--sapIndicationColor_4_Active_BorderColor: #bae8bc;--sapIndicationColor_4_Active_TextColor: #256f3a;--sapIndicationColor_4_Selected_Background: #fff;--sapIndicationColor_4_Selected_BorderColor: #bae8bc;--sapIndicationColor_4_Selected_TextColor: #256f3a;--sapIndicationColor_4b: #bae8bc;--sapIndicationColor_4b_BorderColor: #bae8bc;--sapIndicationColor_4b_Hover_Background: #a7e2a9;--sapIndicationColor_5: #0070f2;--sapIndicationColor_5_Background: #0070f2;--sapIndicationColor_5_BorderColor: #0070f2;--sapIndicationColor_5_TextColor: #fff;--sapIndicationColor_5_Hover_Background: #0064d9;--sapIndicationColor_5_Active_Background: #fff;--sapIndicationColor_5_Active_BorderColor: #d3effd;--sapIndicationColor_5_Active_TextColor: #0070f2;--sapIndicationColor_5_Selected_Background: #fff;--sapIndicationColor_5_Selected_BorderColor: #d3effd;--sapIndicationColor_5_Selected_TextColor: #0070f2;--sapIndicationColor_5b: #d3effd;--sapIndicationColor_5b_BorderColor: #d3effd;--sapIndicationColor_5b_Hover_Background: #bbe6fc;--sapIndicationColor_6: #046c7a;--sapIndicationColor_6_Background: #046c7a;--sapIndicationColor_6_BorderColor: #046c7a;--sapIndicationColor_6_TextColor: #fff;--sapIndicationColor_6_Hover_Background: #035661;--sapIndicationColor_6_Active_Background: #fff;--sapIndicationColor_6_Active_BorderColor: #cdf5ec;--sapIndicationColor_6_Active_TextColor: #046c7a;--sapIndicationColor_6_Selected_Background: #fff;--sapIndicationColor_6_Selected_BorderColor: #cdf5ec;--sapIndicationColor_6_Selected_TextColor: #046c7a;--sapIndicationColor_6b: #cdf5ec;--sapIndicationColor_6b_BorderColor: #cdf5ec;--sapIndicationColor_6b_Hover_Background: #b8f1e4;--sapIndicationColor_7: #5d36ff;--sapIndicationColor_7_Background: #5d36ff;--sapIndicationColor_7_BorderColor: #5d36ff;--sapIndicationColor_7_TextColor: #fff;--sapIndicationColor_7_Hover_Background: #481cff;--sapIndicationColor_7_Active_Background: #fff;--sapIndicationColor_7_Active_BorderColor: #e2dbff;--sapIndicationColor_7_Active_TextColor: #5d36ff;--sapIndicationColor_7_Selected_Background: #fff;--sapIndicationColor_7_Selected_BorderColor: #e2dbff;--sapIndicationColor_7_Selected_TextColor: #5d36ff;--sapIndicationColor_7b: #e2dbff;--sapIndicationColor_7b_BorderColor: #e2dbff;--sapIndicationColor_7b_Hover_Background: #cdc2ff;--sapIndicationColor_8: #a100c2;--sapIndicationColor_8_Background: #a100c2;--sapIndicationColor_8_BorderColor: #a100c2;--sapIndicationColor_8_TextColor: #fff;--sapIndicationColor_8_Hover_Background: #8c00a9;--sapIndicationColor_8_Active_Background: #fff;--sapIndicationColor_8_Active_BorderColor: #f8d6ff;--sapIndicationColor_8_Active_TextColor: #a100c2;--sapIndicationColor_8_Selected_Background: #fff;--sapIndicationColor_8_Selected_BorderColor: #f8d6ff;--sapIndicationColor_8_Selected_TextColor: #a100c2;--sapIndicationColor_8b: #f8d6ff;--sapIndicationColor_8b_BorderColor: #f8d6ff;--sapIndicationColor_8b_Hover_Background: #f4bdff;--sapIndicationColor_9: #1d2d3e;--sapIndicationColor_9_Background: #1d2d3e;--sapIndicationColor_9_BorderColor: #1d2d3e;--sapIndicationColor_9_TextColor: #fff;--sapIndicationColor_9_Hover_Background: #15202d;--sapIndicationColor_9_Active_Background: #fff;--sapIndicationColor_9_Active_BorderColor: #d9d9d9;--sapIndicationColor_9_Active_TextColor: #1d2d3e;--sapIndicationColor_9_Selected_Background: #fff;--sapIndicationColor_9_Selected_BorderColor: #d9d9d9;--sapIndicationColor_9_Selected_TextColor: #1d2d3e;--sapIndicationColor_9b: #fff;--sapIndicationColor_9b_BorderColor: #d9d9d9;--sapIndicationColor_9b_Hover_Background: #f2f2f2;--sapIndicationColor_10: #45484a;--sapIndicationColor_10_Background: #83888b;--sapIndicationColor_10_BorderColor: #83888b;--sapIndicationColor_10_TextColor: #fff;--sapIndicationColor_10_Hover_Background: #767b7e;--sapIndicationColor_10_Active_Background: #fff;--sapIndicationColor_10_Active_BorderColor: #eaecee;--sapIndicationColor_10_Active_TextColor: #45484a;--sapIndicationColor_10_Selected_Background: #fff;--sapIndicationColor_10_Selected_BorderColor: #eaecee;--sapIndicationColor_10_Selected_TextColor: #45484a;--sapIndicationColor_10b: #eaecee;--sapIndicationColor_10b_BorderColor: #eaecee;--sapIndicationColor_10b_Hover_Background: #dcdfe3;--sapLegend_WorkingBackground: #fff;--sapLegend_NonWorkingBackground: #ebebeb;--sapLegend_CurrentDateTime: #a100c2;--sapLegendColor1: #c35500;--sapLegendColor2: #d23a0a;--sapLegendColor3: #df1278;--sapLegendColor4: #840606;--sapLegendColor5: #cc00dc;--sapLegendColor6: #0057d2;--sapLegendColor7: #07838f;--sapLegendColor8: #188918;--sapLegendColor9: #5b738b;--sapLegendColor10: #7800a4;--sapLegendColor11: #a93e00;--sapLegendColor12: #aa2608;--sapLegendColor13: #ba066c;--sapLegendColor14: #8d2a00;--sapLegendColor15: #4e247a;--sapLegendColor16: #002a86;--sapLegendColor17: #035663;--sapLegendColor18: #1e592f;--sapLegendColor19: #1a4796;--sapLegendColor20: #470ced;--sapLegendBackgroundColor1: #ffef9f;--sapLegendBackgroundColor2: #feeae1;--sapLegendBackgroundColor3: #fbf6f8;--sapLegendBackgroundColor4: #fbebeb;--sapLegendBackgroundColor5: #ffe5fe;--sapLegendBackgroundColor6: #d1efff;--sapLegendBackgroundColor7: #c2fcee;--sapLegendBackgroundColor8: #f5fae5;--sapLegendBackgroundColor9: #f5f6f7;--sapLegendBackgroundColor10: #fff0fa;--sapLegendBackgroundColor11: #fff8d6;--sapLegendBackgroundColor12: #fff6f6;--sapLegendBackgroundColor13: #f7ebef;--sapLegendBackgroundColor14: #f1ecd5;--sapLegendBackgroundColor15: #f0e7f8;--sapLegendBackgroundColor16: #ebf8ff;--sapLegendBackgroundColor17: #dafdf5;--sapLegendBackgroundColor18: #ebf5cb;--sapLegendBackgroundColor19: #fafdff;--sapLegendBackgroundColor20: #eceeff;--sapChart_OrderedColor_1: #0070f2;--sapChart_OrderedColor_2: #c87b00;--sapChart_OrderedColor_3: #75980b;--sapChart_OrderedColor_4: #df1278;--sapChart_OrderedColor_5: #8b47d7;--sapChart_OrderedColor_6: #049f9a;--sapChart_OrderedColor_7: #3c8cdd;--sapChart_OrderedColor_8: #cc00dc;--sapChart_OrderedColor_9: #798c77;--sapChart_OrderedColor_10: #da6c6c;--sapChart_OrderedColor_11: #5d36ff;--sapChart_Bad: #f53232;--sapChart_Critical: #e76500;--sapChart_Good: #30914c;--sapChart_Neutral: #788fa6;--sapChart_Sequence_1: #0070f2;--sapChart_Sequence_2: #c87b00;--sapChart_Sequence_3: #75980b;--sapChart_Sequence_4: #df1278;--sapChart_Sequence_5: #8b47d7;--sapChart_Sequence_6: #049f9a;--sapChart_Sequence_7: #3c8cdd;--sapChart_Sequence_8: #cc00dc;--sapChart_Sequence_9: #798c77;--sapChart_Sequence_10: #da6c6c;--sapChart_Sequence_11: #5d36ff;--sapChart_Sequence_Neutral: #788fa6;}
` };
var parameters_bundle_css_default = styleData;

// node_modules/@ui5/webcomponents/dist/generated/themes/sap_horizon/parameters-bundle.css.js
var styleData2 = { packageName: "@ui5/webcomponents", fileName: "themes/sap_horizon/parameters-bundle.css.ts", content: `:root{--ui5-v1-24-2-avatar-hover-box-shadow-offset: 0px 0px 0px .0625rem;--ui5-v1-24-2-avatar-initials-color: var(--sapContent_ImagePlaceholderForegroundColor);--ui5-v1-24-2-avatar-border-radius-img-deduction: .0625rem;--_ui5-v1-24-2_avatar_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-24-2_avatar_focus_width: .0625rem;--_ui5-v1-24-2_avatar_focus_color: var(--sapContent_FocusColor);--_ui5-v1-24-2_avatar_focus_offset: .1875rem;--ui5-v1-24-2-avatar-initials-border: .0625rem solid var(--sapAvatar_1_BorderColor);--ui5-v1-24-2-avatar-border-radius: var(--sapElement_BorderCornerRadius);--_ui5-v1-24-2_avatar_fontsize_XS: 1rem;--_ui5-v1-24-2_avatar_fontsize_S: 1.125rem;--_ui5-v1-24-2_avatar_fontsize_M: 1.5rem;--_ui5-v1-24-2_avatar_fontsize_L: 2.25rem;--_ui5-v1-24-2_avatar_fontsize_XL: 3rem;--ui5-v1-24-2-avatar-accent1: var(--sapAvatar_1_Background);--ui5-v1-24-2-avatar-accent2: var(--sapAvatar_2_Background);--ui5-v1-24-2-avatar-accent3: var(--sapAvatar_3_Background);--ui5-v1-24-2-avatar-accent4: var(--sapAvatar_4_Background);--ui5-v1-24-2-avatar-accent5: var(--sapAvatar_5_Background);--ui5-v1-24-2-avatar-accent6: var(--sapAvatar_6_Background);--ui5-v1-24-2-avatar-accent7: var(--sapAvatar_7_Background);--ui5-v1-24-2-avatar-accent8: var(--sapAvatar_8_Background);--ui5-v1-24-2-avatar-accent9: var(--sapAvatar_9_Background);--ui5-v1-24-2-avatar-accent10: var(--sapAvatar_10_Background);--ui5-v1-24-2-avatar-placeholder: var(--sapContent_ImagePlaceholderBackground);--ui5-v1-24-2-avatar-accent1-color: var(--sapAvatar_1_TextColor);--ui5-v1-24-2-avatar-accent2-color: var(--sapAvatar_2_TextColor);--ui5-v1-24-2-avatar-accent3-color: var(--sapAvatar_3_TextColor);--ui5-v1-24-2-avatar-accent4-color: var(--sapAvatar_4_TextColor);--ui5-v1-24-2-avatar-accent5-color: var(--sapAvatar_5_TextColor);--ui5-v1-24-2-avatar-accent6-color: var(--sapAvatar_6_TextColor);--ui5-v1-24-2-avatar-accent7-color: var(--sapAvatar_7_TextColor);--ui5-v1-24-2-avatar-accent8-color: var(--sapAvatar_8_TextColor);--ui5-v1-24-2-avatar-accent9-color: var(--sapAvatar_9_TextColor);--ui5-v1-24-2-avatar-accent10-color: var(--sapAvatar_10_TextColor);--ui5-v1-24-2-avatar-placeholder-color: var(--sapContent_ImagePlaceholderForegroundColor);--ui5-v1-24-2-avatar-accent1-border-color: var(--sapAvatar_1_BorderColor);--ui5-v1-24-2-avatar-accent2-border-color: var(--sapAvatar_2_BorderColor);--ui5-v1-24-2-avatar-accent3-border-color: var(--sapAvatar_3_BorderColor);--ui5-v1-24-2-avatar-accent4-border-color: var(--sapAvatar_4_BorderColor);--ui5-v1-24-2-avatar-accent5-border-color: var(--sapAvatar_5_BorderColor);--ui5-v1-24-2-avatar-accent6-border-color: var(--sapAvatar_6_BorderColor);--ui5-v1-24-2-avatar-accent7-border-color: var(--sapAvatar_7_BorderColor);--ui5-v1-24-2-avatar-accent8-border-color: var(--sapAvatar_8_BorderColor);--ui5-v1-24-2-avatar-accent9-border-color: var(--sapAvatar_9_BorderColor);--ui5-v1-24-2-avatar-accent10-border-color: var(--sapAvatar_10_BorderColor);--ui5-v1-24-2-avatar-placeholder-border-color: var(--sapContent_ImagePlaceholderBackground);--_ui5-v1-24-2_avatar_icon_XS: var(--_ui5-v1-24-2_avatar_fontsize_XS);--_ui5-v1-24-2_avatar_icon_S: var(--_ui5-v1-24-2_avatar_fontsize_S);--_ui5-v1-24-2_avatar_icon_M: var(--_ui5-v1-24-2_avatar_fontsize_M);--_ui5-v1-24-2_avatar_icon_L: var(--_ui5-v1-24-2_avatar_fontsize_L);--_ui5-v1-24-2_avatar_icon_XL: var(--_ui5-v1-24-2_avatar_fontsize_XL);--_ui5-v1-24-2_avatar_group_button_focus_border: none;--_ui5-v1-24-2_avatar_group_focus_border_radius: .375rem;--_ui5-v1-24-2-badge-icon-width: .75rem;--ui5-v1-24-2-badge-text-shadow: var(--sapContent_TextShadow);--ui5-v1-24-2-badge-contrast-text-shadow: var(--sapContent_ContrastTextShadow);--ui5-v1-24-2-badge-color-scheme-1-border: var(--sapAccentColor1);--ui5-v1-24-2-badge-color-scheme-2-border: var(--sapAccentColor2);--ui5-v1-24-2-badge-color-scheme-3-border: var(--sapAccentColor3);--ui5-v1-24-2-badge-color-scheme-4-border: var(--sapAccentColor4);--ui5-v1-24-2-badge-color-scheme-5-border: var(--sapAccentColor5);--ui5-v1-24-2-badge-color-scheme-6-border: var(--sapAccentColor6);--ui5-v1-24-2-badge-color-scheme-7-border: var(--sapAccentColor7);--ui5-v1-24-2-badge-color-scheme-8-border: var(--sapLegendColor18);--ui5-v1-24-2-badge-color-scheme-9-border: var(--sapAccentColor10);--ui5-v1-24-2-badge-color-scheme-10-border: var(--sapAccentColor9);--ui5-v1-24-2-badge-set2-color-scheme-1-color: var(--sapIndicationColor_1);--ui5-v1-24-2-badge-set2-color-scheme-1-background: var(--sapIndicationColor_1b);--ui5-v1-24-2-badge-set2-color-scheme-1-border: var(--sapIndicationColor_1b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-1-hover-background: var(--sapIndicationColor_1b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-1-active-color: var(--sapIndicationColor_1_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-1-active-background: var(--sapIndicationColor_1_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-1-active-border: var(--sapIndicationColor_1_Active_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-2-color: var(--sapIndicationColor_2);--ui5-v1-24-2-badge-set2-color-scheme-2-background: var(--sapIndicationColor_2b);--ui5-v1-24-2-badge-set2-color-scheme-2-border: var(--sapIndicationColor_2b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-2-hover-background: var(--sapIndicationColor_2b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-2-active-color: var(--sapIndicationColor_2_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-2-active-background: var(--sapIndicationColor_2_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-2-active-border: var(--sapIndicationColor_2_Active_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-3-color: var(--sapIndicationColor_3);--ui5-v1-24-2-badge-set2-color-scheme-3-background: var(--sapIndicationColor_3b);--ui5-v1-24-2-badge-set2-color-scheme-3-border: var(--sapIndicationColor_3b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-3-hover-background: var(--sapIndicationColor_3b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-3-active-color: var(--sapIndicationColor_3_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-3-active-background: var(--sapIndicationColor_3_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-3-active-border: var(--sapIndicationColor_3_Active_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-4-color: var(--sapIndicationColor_4);--ui5-v1-24-2-badge-set2-color-scheme-4-background: var(--sapIndicationColor_4b);--ui5-v1-24-2-badge-set2-color-scheme-4-border: var(--sapIndicationColor_4b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-4-hover-background: var(--sapIndicationColor_4b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-4-active-color: var(--sapIndicationColor_4_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-4-active-background: var(--sapIndicationColor_4_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-4-active-border: var(--sapIndicationColor_4_Active_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-5-color: var(--sapIndicationColor_5);--ui5-v1-24-2-badge-set2-color-scheme-5-background: var(--sapIndicationColor_5b);--ui5-v1-24-2-badge-set2-color-scheme-5-border: var(--sapIndicationColor_5b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-5-hover-background: var(--sapIndicationColor_5b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-5-active-color: var(--sapIndicationColor_5_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-5-active-background: var(--sapIndicationColor_5_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-5-active-border: var(--sapIndicationColor_5_Active_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-6-color: var(--sapIndicationColor_6);--ui5-v1-24-2-badge-set2-color-scheme-6-background: var(--sapIndicationColor_6b);--ui5-v1-24-2-badge-set2-color-scheme-6-border: var(--sapIndicationColor_6b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-6-hover-background: var(--sapIndicationColor_6b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-6-active-color: var(--sapIndicationColor_6_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-6-active-background: var(--sapIndicationColor_6_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-6-active-border: var(--sapIndicationColor_6_Active_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-7-color: var(--sapIndicationColor_7);--ui5-v1-24-2-badge-set2-color-scheme-7-background: var(--sapIndicationColor_7b);--ui5-v1-24-2-badge-set2-color-scheme-7-border: var(--sapIndicationColor_7b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-7-hover-background: var(--sapIndicationColor_7b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-7-active-color: var(--sapIndicationColor_7_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-7-active-background: var(--sapIndicationColor_7_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-7-active-border: var(--sapIndicationColor_7_Active_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-8-color: var(--sapIndicationColor_8);--ui5-v1-24-2-badge-set2-color-scheme-8-background: var(--sapIndicationColor_8b);--ui5-v1-24-2-badge-set2-color-scheme-8-border: var(--sapIndicationColor_8b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-8-hover-background: var(--sapIndicationColor_8b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-8-active-color: var(--sapIndicationColor_8_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-8-active-background: var(--sapIndicationColor_8_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-8-active-border: var(--sapIndicationColor_8_Active_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-9-color: var(--sapIndicationColor_9);--ui5-v1-24-2-badge-set2-color-scheme-9-background: var(--sapIndicationColor_9b);--ui5-v1-24-2-badge-set2-color-scheme-9-border: var(--sapIndicationColor_9b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-9-hover-background: var(--sapIndicationColor_9b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-9-active-color: var(--sapIndicationColor_9_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-9-active-background: var(--sapIndicationColor_9_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-9-active-border: var(--sapIndicationColor_9_Active_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-10-color: var(--sapIndicationColor_10);--ui5-v1-24-2-badge-set2-color-scheme-10-background: var(--sapIndicationColor_10b);--ui5-v1-24-2-badge-set2-color-scheme-10-border: var(--sapIndicationColor_10b_BorderColor);--ui5-v1-24-2-badge-set2-color-scheme-10-hover-background: var(--sapIndicationColor_10b_Hover_Background);--ui5-v1-24-2-badge-set2-color-scheme-10-active-color: var(--sapIndicationColor_10_Active_TextColor);--ui5-v1-24-2-badge-set2-color-scheme-10-active-background: var(--sapIndicationColor_10_Active_Background);--ui5-v1-24-2-badge-set2-color-scheme-10-active-border: var(--sapIndicationColor_10_Active_BorderColor);--_ui5-v1-24-2-badge-height: 1.375rem;--_ui5-v1-24-2-badge-border: none;--_ui5-v1-24-2-badge-border-radius: .25rem;--_ui5-v1-24-2-badge-padding-inline: .375em;--_ui5-v1-24-2-badge-padding-inline-icon-only: .313rem;--_ui5-v1-24-2-badge-text-transform: none;--_ui5-v1-24-2-badge-icon-height: 1rem;--_ui5-v1-24-2-badge-icon-gap: .25rem;--_ui5-v1-24-2-badge-font-size: var(--sapFontSize);--_ui5-v1-24-2-badge-font: var(--sapFontSemiboldDuplexFamily);--_ui5-v1-24-2-badge-font-weight: normal;--_ui5-v1-24-2-badge-letter-spacing: normal;--ui5-v1-24-2-badge-color-scheme-1-background: var(--sapAvatar_1_Background);--ui5-v1-24-2-badge-color-scheme-1-color: var(--sapAvatar_1_TextColor);--ui5-v1-24-2-badge-color-scheme-2-background: var(--sapAvatar_2_Background);--ui5-v1-24-2-badge-color-scheme-2-color: var(--sapAvatar_2_TextColor);--ui5-v1-24-2-badge-color-scheme-3-background: var(--sapAvatar_3_Background);--ui5-v1-24-2-badge-color-scheme-3-color: var(--sapAvatar_3_TextColor);--ui5-v1-24-2-badge-color-scheme-4-background: var(--sapAvatar_4_Background);--ui5-v1-24-2-badge-color-scheme-4-color: var(--sapAvatar_4_TextColor);--ui5-v1-24-2-badge-color-scheme-5-background: var(--sapAvatar_5_Background);--ui5-v1-24-2-badge-color-scheme-5-color: var(--sapAvatar_5_TextColor);--ui5-v1-24-2-badge-color-scheme-6-background: var(--sapAvatar_6_Background);--ui5-v1-24-2-badge-color-scheme-6-color: var(--sapAvatar_6_TextColor);--ui5-v1-24-2-badge-color-scheme-7-background: var(--sapAvatar_7_Background);--ui5-v1-24-2-badge-color-scheme-7-color: var(--sapAvatar_7_TextColor);--ui5-v1-24-2-badge-color-scheme-8-background: var(--sapAvatar_8_Background);--ui5-v1-24-2-badge-color-scheme-8-color: var(--sapAvatar_8_TextColor);--ui5-v1-24-2-badge-color-scheme-9-background: var(--sapAvatar_9_Background);--ui5-v1-24-2-badge-color-scheme-9-color: var(--sapAvatar_9_TextColor);--ui5-v1-24-2-badge-color-scheme-10-background: var(--sapAvatar_10_Background);--ui5-v1-24-2-badge-color-scheme-10-color: var(--sapAvatar_10_TextColor);--_ui5-v1-24-2_breadcrumbs_margin: 0 0 .5rem 0;--browser_scrollbar_border_radius: var(--sapElement_BorderCornerRadius);--browser_scrollbar_border: none;--_ui5-v1-24-2_busy_indicator_color: var(--sapContent_BusyColor);--_ui5-v1-24-2_busy_indicator_focus_border_radius: .75rem;--_ui5-v1-24-2_busy_indicator_focus_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-24-2_button_base_min_compact_width: 2rem;--_ui5-v1-24-2_button_base_height: var(--sapElement_Height);--_ui5-v1-24-2_button_compact_height: 1.625rem;--_ui5-v1-24-2_button_border_radius: var(--sapButton_BorderCornerRadius);--_ui5-v1-24-2_button_compact_padding: .4375rem;--_ui5-v1-24-2_button_emphasized_outline: 1px dotted var(--sapContent_FocusColor);--_ui5-v1-24-2_button_focus_offset: 1px;--_ui5-v1-24-2_button_focus_width: 1px;--_ui5-v1-24-2_button_emphasized_focused_border_before: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_button_emphasized_focused_active_border_color: transparent;--_ui5-v1-24-2_button_focused_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_button_focused_border_radius: .375rem;--_ui5-v1-24-2_button_focused_inner_border_radius: .375rem;--_ui5-v1-24-2_button_base_min_width: 2.25rem;--_ui5-v1-24-2_button_base_padding: .5625rem;--_ui5-v1-24-2_button_base_icon_only_padding: .5625rem;--_ui5-v1-24-2_button_base_icon_margin: .375rem;--_ui5-v1-24-2_button_icon_font_size: 1rem;--_ui5-v1-24-2_button_text_shadow: none;--_ui5-v1-24-2_button_emphasized_border_width: .0625rem;--_ui5-v1-24-2_button_pressed_focused_border_color: var(--sapContent_FocusColor);--_ui5-v1-24-2_button_fontFamily: var(--sapFontSemiboldDuplexFamily);--_ui5-v1-24-2_button_emphasized_focused_border_color: var(--sapContent_ContrastFocusColor);--_ui5-v1-24-2-calendar-legend-root-padding: .75rem;--_ui5-v1-24-2-calendar-legend-root-width: 18.5rem;--_ui5-v1-24-2-calendar-legend-item-box-margin: .25rem .5rem .25rem .25rem;--_ui5-v1-24-2-calendar-legend-item-root-focus-margin: 0;--_ui5-v1-24-2-calendar-legend-item-root-width: 7.75rem;--_ui5-v1-24-2-calendar-legend-item-root-focus-border: var(--sapContent_FocusWidth) solid var(--sapContent_FocusColor);--_ui5-v1-24-2-calendar-legend-item-root-focus-border-radius: .125rem;--_ui5-v1-24-2_card_box_shadow: var(--sapContent_Shadow0);--_ui5-v1-24-2_card_header_border_color: var(--sapTile_SeparatorColor);--_ui5-v1-24-2_card_header_focus_border: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-24-2_card_header_focus_bottom_radius: 0px;--_ui5-v1-24-2_card_header_title_font_weight: normal;--_ui5-v1-24-2_card_header_subtitle_margin_top: .25rem;--_ui5-v1-24-2_card_hover_box_shadow: var(--sapContent_Shadow2);--_ui5-v1-24-2_card_header_focus_offset: 0px;--_ui5-v1-24-2_card_header_focus_radius: var(--_ui5-v1-24-2_card_border-radius);--_ui5-v1-24-2_card_header_title_font_family: var(--sapFontHeaderFamily);--_ui5-v1-24-2_card_header_title_font_size: var(--sapFontHeader6Size);--_ui5-v1-24-2_card_header_hover_bg: var(--sapTile_Hover_Background);--_ui5-v1-24-2_card_header_active_bg: var(--sapTile_Active_Background);--_ui5-v1-24-2_card_header_border: none;--_ui5-v1-24-2_card_border-radius: var(--sapTile_BorderCornerRadius);--_ui5-v1-24-2_card_header_padding: 1rem 1rem .75rem 1rem;--_ui5-v1-24-2_card_border: none;--ui5-v1-24-2_carousel_background_color_solid: var(--sapGroup_ContentBackground);--ui5-v1-24-2_carousel_background_color_translucent: var(--sapBackgroundColor);--ui5-v1-24-2_carousel_button_size: 2.5rem;--ui5-v1-24-2_carousel_inactive_dot_size: .25rem;--ui5-v1-24-2_carousel_inactive_dot_margin: 0 .375rem;--ui5-v1-24-2_carousel_inactive_dot_border: 1px solid var(--sapContent_ForegroundBorderColor);--ui5-v1-24-2_carousel_inactive_dot_background: var(--sapContent_ForegroundBorderColor);--ui5-v1-24-2_carousel_active_dot_border: 1px solid var(--sapContent_Selected_ForegroundColor);--ui5-v1-24-2_carousel_active_dot_background: var(--sapContent_Selected_ForegroundColor);--ui5-v1-24-2_carousel_navigation_button_active_box_shadow: none;--_ui5-v1-24-2_checkbox_box_shadow: none;--_ui5-v1-24-2_checkbox_transition: unset;--_ui5-v1-24-2_checkbox_focus_border: none;--_ui5-v1-24-2_checkbox_border_radius: 0;--_ui5-v1-24-2_checkbox_focus_outline: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-24-2_checkbox_outer_hover_background: transparent;--_ui5-v1-24-2_checkbox_inner_width_height: 1.375rem;--_ui5-v1-24-2_checkbox_inner_disabled_border_color: var(--sapField_BorderColor);--_ui5-v1-24-2_checkbox_inner_information_box_shadow: none;--_ui5-v1-24-2_checkbox_inner_warning_box_shadow: none;--_ui5-v1-24-2_checkbox_inner_error_box_shadow: none;--_ui5-v1-24-2_checkbox_inner_success_box_shadow: none;--_ui5-v1-24-2_checkbox_inner_default_box_shadow: none;--_ui5-v1-24-2_checkbox_inner_background: var(--sapField_Background);--_ui5-v1-24-2_checkbox_wrapped_focus_padding: .375rem;--_ui5-v1-24-2_checkbox_wrapped_content_margin_top: .125rem;--_ui5-v1-24-2_checkbox_compact_wrapper_padding: .5rem;--_ui5-v1-24-2_checkbox_compact_width_height: 2rem;--_ui5-v1-24-2_checkbox_compact_inner_size: 1rem;--_ui5-v1-24-2_checkbox_compact_focus_position: .375rem;--_ui5-v1-24-2_checkbox_compact_wrapped_label_margin_top: -1px;--_ui5-v1-24-2_checkbox_label_offset: var(--_ui5-v1-24-2_checkbox_wrapper_padding);--_ui5-v1-24-2_checkbox_disabled_label_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_checkbox_default_focus_border: none;--_ui5-v1-24-2_checkbox_focus_outline_display: block;--_ui5-v1-24-2_checkbox_wrapper_padding: .6875rem;--_ui5-v1-24-2_checkbox_width_height: 2.75rem;--_ui5-v1-24-2_checkbox_label_color: var(--sapField_TextColor);--_ui5-v1-24-2_checkbox_inner_border: solid var(--sapField_BorderWidth) var(--sapField_BorderColor);--_ui5-v1-24-2_checkbox_inner_border_radius: var(--sapField_BorderCornerRadius);--_ui5-v1-24-2_checkbox_checkmark_color: var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_checkbox_hover_background: var(--sapContent_Selected_Hover_Background);--_ui5-v1-24-2_checkbox_inner_hover_border_color: var(--sapField_Hover_BorderColor);--_ui5-v1-24-2_checkbox_inner_hover_checked_border_color: var(--sapField_Hover_BorderColor);--_ui5-v1-24-2_checkbox_inner_selected_border_color: var(--sapField_BorderColor);--_ui5-v1-24-2_checkbox_inner_active_border_color: var(--sapField_Hover_BorderColor);--_ui5-v1-24-2_checkbox_active_background: var(--sapContent_Selected_Hover_Background);--_ui5-v1-24-2_checkbox_inner_readonly_border: var(--sapElement_BorderWidth) var(--sapField_ReadOnly_BorderColor) dashed;--_ui5-v1-24-2_checkbox_inner_error_border: var(--sapField_InvalidBorderWidth) solid var(--sapField_InvalidColor);--_ui5-v1-24-2_checkbox_inner_error_background_hover: var(--sapField_Hover_Background);--_ui5-v1-24-2_checkbox_inner_warning_border: var(--sapField_WarningBorderWidth) solid var(--sapField_WarningColor);--_ui5-v1-24-2_checkbox_inner_warning_color: var(--sapField_WarningColor);--_ui5-v1-24-2_checkbox_inner_warning_background_hover: var(--sapField_Hover_Background);--_ui5-v1-24-2_checkbox_checkmark_warning_color: var(--sapField_WarningColor);--_ui5-v1-24-2_checkbox_inner_success_border: var(--sapField_SuccessBorderWidth) solid var(--sapField_SuccessColor);--_ui5-v1-24-2_checkbox_inner_success_background_hover: var(--sapField_Hover_Background);--_ui5-v1-24-2_checkbox_inner_information_color: var(--sapField_InformationColor);--_ui5-v1-24-2_checkbox_inner_information_border: var(--sapField_InformationBorderWidth) solid var(--sapField_InformationColor);--_ui5-v1-24-2_checkbox_inner_information_background_hover: var(--sapField_Hover_Background);--_ui5-v1-24-2_checkbox_disabled_opacity: var(--sapContent_DisabledOpacity);--_ui5-v1-24-2_checkbox_focus_position: .3125rem;--_ui5-v1-24-2_checkbox_focus_border_radius: .5rem;--_ui5-v1-24-2_checkbox_right_focus_distance: var(--_ui5-v1-24-2_checkbox_focus_position);--_ui5-v1-24-2_checkbox_wrapped_focus_left_top_bottom_position: .1875rem;--_ui5-v1-24-2_color-palette-item-outer-border-radius: .25rem;--_ui5-v1-24-2_color-palette-item-inner-border-radius: .1875rem;--_ui5-v1-24-2_color-palette-item-container-sides-padding: .3125rem;--_ui5-v1-24-2_color-palette-item-container-rows-padding: .6875rem;--_ui5-v1-24-2_color-palette-item-focus-height: 1.5rem;--_ui5-v1-24-2_color-palette-item-container-padding: var(--_ui5-v1-24-2_color-palette-item-container-sides-padding) var(--_ui5-v1-24-2_color-palette-item-container-rows-padding);--_ui5-v1-24-2_color-palette-item-hover-margin: .0625rem;--_ui5-v1-24-2_color-palette-row-height: 9.5rem;--_ui5-v1-24-2_color-palette-button-height: 3rem;--_ui5-v1-24-2_color-palette-item-before-focus-color: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_color-palette-item-before-focus-offset: -.3125rem;--_ui5-v1-24-2_color-palette-item-before-focus-hover-offset: -.0625rem;--_ui5-v1-24-2_color-palette-item-after-focus-color: .0625rem solid var(--sapContent_ContrastFocusColor);--_ui5-v1-24-2_color-palette-item-after-focus-offset: -.1875rem;--_ui5-v1-24-2_color-palette-item-after-focus-hover-offset: .0625rem;--_ui5-v1-24-2_color-palette-item-before-focus-border-radius: .4375rem;--_ui5-v1-24-2_color-palette-item-after-focus-border-radius: .3125rem;--_ui5-v1-24-2_color-palette-item-hover-outer-border-radius: .4375rem;--_ui5-v1-24-2_color-palette-item-hover-inner-border-radius: .375rem;--_ui5-v1-24-2_color_picker_circle_outer_border: .0625rem solid var(--sapContent_ContrastShadowColor);--_ui5-v1-24-2_color_picker_circle_inner_border: .0625rem solid var(--sapField_BorderColor);--_ui5-v1-24-2_color_picker_circle_inner_circle_size: .5625rem;--_ui5-v1-24-2_color_picker_slider_handle_box_shadow: .125rem solid var(--sapField_BorderColor);--_ui5-v1-24-2_color_picker_slider_handle_border: .125rem solid var(--sapField_BorderColor);--_ui5-v1-24-2_color_picker_slider_handle_outline_hover: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_color_picker_slider_handle_outline_focus: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_color_picker_slider_handle_margin_top: -.1875rem;--_ui5-v1-24-2_color_picker_slider_handle_focus_margin_top: var(--_ui5-v1-24-2_color_picker_slider_handle_margin_top);--_ui5-v1-24-2_color_picker_slider_container_margin_top: -11px;--_ui5-v1-24-2_color_picker_slider_handle_inline_focus: 1px solid var(--sapContent_ContrastFocusColor);--_ui5-v1-24-2_datepicker_icon_border: none;--_ui5-v1-24-2-datepicker-hover-background: var(--sapField_Hover_Background);--_ui5-v1-24-2-datepicker_border_radius: .25rem;--_ui5-v1-24-2-datepicker_icon_border_radius: .125rem;--_ui5-v1-24-2_daypicker_item_box_shadow: inset 0 0 0 .0625rem var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_daypicker_item_margin: 2px;--_ui5-v1-24-2_daypicker_item_border: none;--_ui5-v1-24-2_daypicker_item_selected_border_color: var(--sapList_Background);--_ui5-v1-24-2_daypicker_daynames_container_height: 2rem;--_ui5-v1-24-2_daypicker_weeknumbers_container_padding_top: 2rem;--_ui5-v1-24-2_daypicker_item_othermonth_background_color: var(--sapList_Background);--_ui5-v1-24-2_daypicker_item_othermonth_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_daypicker_item_othermonth_hover_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_daypicker_item_now_inner_border_radius: 0;--_ui5-v1-24-2_daypicker_item_outline_width: 1px;--_ui5-v1-24-2_daypicker_item_outline_offset: 1px;--_ui5-v1-24-2_daypicker_item_now_focus_after_width: calc(100% - .25rem) ;--_ui5-v1-24-2_daypicker_item_now_focus_after_height: calc(100% - .25rem) ;--_ui5-v1-24-2_daypicker_item_now_selected_focus_after_width: calc(100% - .375rem) ;--_ui5-v1-24-2_daypicker_item_now_selected_focus_after_height: calc(100% - .375rem) ;--_ui5-v1-24-2_daypicker_item_selected_background: transparent;--_ui5-v1-24-2_daypicker_item_outline_focus_after: none;--_ui5-v1-24-2_daypicker_item_border_focus_after: var(--_ui5-v1-24-2_daypicker_item_outline_width) dotted var(--sapContent_FocusColor);--_ui5-v1-24-2_daypicker_item_width_focus_after: calc(100% - .25rem) ;--_ui5-v1-24-2_daypicker_item_height_focus_after: calc(100% - .25rem) ;--_ui5-v1-24-2_daypicker_item_now_outline: none;--_ui5-v1-24-2_daypicker_item_now_outline_offset: none;--_ui5-v1-24-2_daypicker_item_now_outline_offset_focus_after: var(--_ui5-v1-24-2_daypicker_item_now_outline_offset);--_ui5-v1-24-2_daypicker_item_selected_between_hover_background: var(--sapList_Hover_SelectionBackground);--_ui5-v1-24-2_daypicker_item_now_not_selected_inset: 0;--_ui5-v1-24-2_daypicker_item_now_border_color: var(--sapLegend_CurrentDateTime);--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_border_radios: .25rem;--_ui5-v1-24-2_daypicker_special_day_top: 2.5rem;--_ui5-v1-24-2_daypicker_special_day_before_border_color: var(--sapList_Background);--_ui5-v1-24-2_daypicker_selected_item_now_special_day_border_bottom_radius: 0;--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_after_border_width: .125rem;--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_dot: .375rem;--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_top: 2rem;--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_right: 1.4375rem;--_ui5-v1-24-2_daypicker_item_border_radius: .4375rem;--_ui5-v1-24-2_daypicker_item_focus_border: .0625rem dotted var(--sapContent_FocusColor);--_ui5-v1-24-2_daypicker_item_selected_border: .0625rem solid var(--sapList_SelectionBorderColor);--_ui5-v1-24-2_daypicker_item_not_selected_focus_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_daypicker_item_selected_focus_color: var(--sapContent_FocusColor);--_ui5-v1-24-2_daypicker_item_selected_focus_width: .125rem;--_ui5-v1-24-2_daypicker_item_no_selected_inset: .375rem;--_ui5-v1-24-2_daypicker_item_now_border_focus_after: .125rem solid var(--sapList_SelectionBorderColor);--_ui5-v1-24-2_daypicker_item_now_border_radius_focus_after: .3125rem;--_ui5-v1-24-2_day_picker_item_selected_now_border_focus: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_day_picker_item_selected_now_border_radius_focus: .1875rem;--ui5-v1-24-2-dp-item_withsecondtype_border: .375rem;--_ui5-v1-24-2_daypicker_item_now_border: .125rem solid var(--sapLegend_CurrentDateTime);--_ui5-v1-24-2_daypicker_dayname_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_daypicker_weekname_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_daypicker_item_selected_box_shadow: inset 0 0 0 .0625rem var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_daypicker_item_selected_daytext_hover_background: transparent;--_ui5-v1-24-2_daypicker_item_border_radius_item: .5rem;--_ui5-v1-24-2_daypicker_item_border_radius_focus_after: .1875rem;--_ui5-v1-24-2_daypicker_item_selected_between_border: .5rem;--_ui5-v1-24-2_daypicker_item_selected_between_background: var(--sapList_SelectionBackgroundColor);--_ui5-v1-24-2_daypicker_item_selected_between_text_background: transparent;--_ui5-v1-24-2_daypicker_item_selected_between_text_font: var(--sapFontFamily);--_ui5-v1-24-2_daypicker_item_selected_text_font: var(--sapFontBoldFamily);--_ui5-v1-24-2_daypicker_item_now_box_shadow: inset 0 0 0 .35rem var(--sapList_Background);--_ui5-v1-24-2_daypicker_item_selected_text_outline: .0625rem solid var(--sapSelectedColor);--_ui5-v1-24-2_daypicker_item_now_selected_outline_offset: -.25rem;--_ui5-v1-24-2_daypicker_item_now_selected_between_inset: .25rem;--_ui5-v1-24-2_daypicker_item_now_selected_between_border: .0625rem solid var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_daypicker_item_now_selected_between_border_radius: .1875rem;--_ui5-v1-24-2_daypicker_item_select_between_border: 1px solid var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_daypicker_item_weeekend_filter: brightness(105%);--_ui5-v1-24-2_daypicker_item_selected_hover: var(--sapList_Hover_Background);--_ui5-v1-24-2_daypicker_item_now_inset: .3125rem;--_ui5-v1-24-2-dp-item_withsecondtype_border: .25rem;--_ui5-v1-24-2_daypicker_item_selected__secondary_type_text_outline: .0625rem solid var(--sapSelectedColor);--_ui5-v1-24-2_daypicker_two_calendar_item_now_day_text_content: "";--_ui5-v1-24-2_daypicker_two_calendar_item_now_selected_border_width: .125rem;--_ui5-v1-24-2_daypicker_two_calendar_item_border_radius: .5rem;--_ui5-v1-24-2_daypicker_two_calendar_item_border_focus_border_radius: .375rem;--_ui5-v1-24-2_daypicker_two_calendar_item_no_selected_inset: 0;--_ui5-v1-24-2_daypicker_two_calendar_item_selected_now_border_radius_focus: .1875rem;--_ui5-v1-24-2_daypicker_two_calendar_item_no_selected_focus_inset: .1875rem;--_ui5-v1-24-2_daypicker_two_calendar_item_no_select_focus_border_radius: .3125rem;--_ui5-v1-24-2_daypicker_two_calendar_item_now_inset: .3125rem;--_ui5-v1-24-2_daypicker_two_calendar_item_now_selected_border_inset: .125rem;--_ui5-v1-24-2_daypicker_selected_item_special_day_width: calc(100% - .125rem) ;--_ui5-v1-24-2_daypicker_special_day_border_bottom_radius: .5rem;--_ui5-v1-24-2-daypicker_item_selected_now_border_radius: .5rem;--_ui5-v1-24-2_daypicker_selected_item_now_special_day_width: calc(100% - .1875rem) ;--_ui5-v1-24-2_daypicker_selected_item_now_special_day_border_bottom_radius_alternate: .5rem;--_ui5-v1-24-2_daypicker_selected_item_now_special_day_top: 2.4375rem;--_ui5-v1-24-2_daypicker_two_calendar_item_margin_bottom: 0;--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_now_inset: .3125rem;--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_now_border_radius: .25rem;--_ui5-v1-24-2_daypicker_item_now_focus_margin: 0;--_ui5-v1-24-2_daypicker_special_day_border_top: none;--_ui5-v1-24-2_daypicker_special_day_selected_border_radius_bottom: .25rem;--_ui5-v1-24-2_daypicker_specialday_focused_top: 2.125rem;--_ui5-v1-24-2_daypicker_specialday_focused_width: calc(100% - .75rem) ;--_ui5-v1-24-2_daypicker_specialday_focused_border_bottom: 0;--_ui5-v1-24-2_daypicker_item_now_specialday_top: 2.3125rem;--_ui5-v1-24-2_daypicker_item_now_specialday_width: calc(100% - .5rem) ;--_ui5-v1-24-2_dialog_resize_handle_color: var(--sapButton_Lite_TextColor);--_ui5-v1-24-2_dialog_header_error_state_icon_color: var(--sapNegativeElementColor);--_ui5-v1-24-2_dialog_header_information_state_icon_color: var(--sapInformativeElementColor);--_ui5-v1-24-2_dialog_header_success_state_icon_color: var(--sapPositiveElementColor);--_ui5-v1-24-2_dialog_header_warning_state_icon_color: var(--sapCriticalElementColor);--_ui5-v1-24-2_dialog_header_state_line_height: .0625rem;--_ui5-v1-24-2_dialog_header_focus_bottom_offset: 2px;--_ui5-v1-24-2_dialog_header_focus_top_offset: 1px;--_ui5-v1-24-2_dialog_header_focus_left_offset: 1px;--_ui5-v1-24-2_dialog_header_focus_right_offset: 1px;--_ui5-v1-24-2_dialog_resize_handle_right: 0;--_ui5-v1-24-2_dialog_resize_handle_bottom: 3px;--_ui5-v1-24-2_dialog_header_border_radius: var(--sapElement_BorderCornerRadius);--_ui5-v1-24-2_file_uploader_value_state_error_hover_background_color: var(--sapField_Hover_Background);--_ui5-v1-24-2_file_uploader_hover_border: none;--ui5-v1-24-2-group-header-listitem-background-color: var(--sapList_GroupHeaderBackground);--ui5-v1-24-2-icon-focus-border-radius: .25rem;--_ui5-v1-24-2_input_width: 13.125rem;--_ui5-v1-24-2_input_min_width: 2.75rem;--_ui5-v1-24-2_input_height: var(--sapElement_Height);--_ui5-v1-24-2_input_compact_height: 1.625rem;--_ui5-v1-24-2_input_value_state_error_hover_background: var(--sapField_Hover_Background);--_ui5-v1-24-2_input_background_color: var(--sapField_Background);--_ui5-v1-24-2_input_border_radius: var(--sapField_BorderCornerRadius);--_ui5-v1-24-2_input_placeholder_style: italic;--_ui5-v1-24-2_input_placeholder_color: var(--sapField_PlaceholderTextColor);--_ui5-v1-24-2_input_bottom_border_height: 0;--_ui5-v1-24-2_input_bottom_border_color: transparent;--_ui5-v1-24-2_input_focused_border_color: var(--sapField_Hover_BorderColor);--_ui5-v1-24-2_input_state_border_width: .125rem;--_ui5-v1-24-2_input_information_border_width: .125rem;--_ui5-v1-24-2_input_error_font_weight: normal;--_ui5-v1-24-2_input_warning_font_weight: normal;--_ui5-v1-24-2_input_focus_border_width: 1px;--_ui5-v1-24-2_input_error_warning_font_style: inherit;--_ui5-v1-24-2_input_error_warning_text_indent: 0;--_ui5-v1-24-2_input_disabled_color: var(--sapContent_DisabledTextColor);--_ui5-v1-24-2_input_disabled_font_weight: normal;--_ui5-v1-24-2_input_disabled_border_color: var(--sapField_BorderColor);--_ui5-v1-24-2-input_disabled_background: var(--sapField_Background);--_ui5-v1-24-2_input_readonly_border_color: var(--sapField_ReadOnly_BorderColor);--_ui5-v1-24-2_input_readonly_background: var(--sapField_ReadOnly_Background);--_ui5-v1-24-2_input_disabled_opacity: var(--sapContent_DisabledOpacity);--_ui5-v1-24-2_input_icon_min_width: 2.25rem;--_ui5-v1-24-2_input_compact_min_width: 2rem;--_ui5-v1-24-2_input_transition: none;--_ui5-v1-24-2-input-value-state-icon-display: none;--_ui5-v1-24-2_input_value_state_error_border_color: var(--sapField_InvalidColor);--_ui5-v1-24-2_input_focused_value_state_error_border_color: var(--sapField_InvalidColor);--_ui5-v1-24-2_input_value_state_warning_border_color: var(--sapField_WarningColor);--_ui5-v1-24-2_input_focused_value_state_warning_border_color: var(--sapField_WarningColor);--_ui5-v1-24-2_input_value_state_success_border_color: var(--sapField_SuccessColor);--_ui5-v1-24-2_input_focused_value_state_success_border_color: var(--sapField_SuccessColor);--_ui5-v1-24-2_input_value_state_success_border_width: 1px;--_ui5-v1-24-2_input_value_state_information_border_color: var(--sapField_InformationColor);--_ui5-v1-24-2_input_focused_value_state_information_border_color: var(--sapField_InformationColor);--_ui5-v1-24-2-input-value-state-information-border-width: 1px;--_ui5-v1-24-2-input-background-image: none;--ui5-v1-24-2_input_focus_pseudo_element_content: "";--_ui5-v1-24-2_input_value_state_error_warning_placeholder_font_weight: normal;--_ui5-v1-24-2-input_error_placeholder_color: var(--sapField_PlaceholderTextColor);--_ui5-v1-24-2_input_icon_width: 2.25rem;--_ui5-v1-24-2-input-icons-count: 0;--_ui5-v1-24-2_input_margin_top_bottom: .1875rem;--_ui5-v1-24-2_input_tokenizer_min_width: 3.25rem;--_ui5-v1-24-2-input-border: none;--_ui5-v1-24-2_input_hover_border: none;--_ui5-v1-24-2_input_focus_border_radius: .25rem;--_ui5-v1-24-2_input_readonly_focus_border_radius: .125rem;--_ui5-v1-24-2_input_error_warning_border_style: none;--_ui5-v1-24-2_input_focused_value_state_error_background: var(--sapField_Hover_Background);--_ui5-v1-24-2_input_focused_value_state_warning_background: var(--sapField_Hover_Background);--_ui5-v1-24-2_input_focused_value_state_success_background: var(--sapField_Hover_Background);--_ui5-v1-24-2_input_focused_value_state_information_background: var(--sapField_Hover_Background);--_ui5-v1-24-2_input_focused_value_state_error_focus_outline_color: var(--sapField_InvalidColor);--_ui5-v1-24-2_input_focused_value_state_warning_focus_outline_color: var(--sapField_WarningColor);--_ui5-v1-24-2_input_focused_value_state_success_focus_outline_color: var(--sapField_SuccessColor);--_ui5-v1-24-2_input_focus_offset: 0;--_ui5-v1-24-2_input_readonly_focus_offset: .125rem;--_ui5-v1-24-2_input_information_icon_padding: .625rem .625rem .5rem .625rem;--_ui5-v1-24-2_input_information_focused_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v1-24-2_input_error_warning_icon_padding: .625rem .625rem .5rem .625rem;--_ui5-v1-24-2_input_error_warning_focused_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v1-24-2_input_custom_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v1-24-2_input_error_warning_custom_icon_padding: .625rem .625rem .5rem .625rem;--_ui5-v1-24-2_input_error_warning_custom_focused_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v1-24-2_input_information_custom_icon_padding: .625rem .625rem .5rem .625rem;--_ui5-v1-24-2_input_information_custom_focused_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v1-24-2_input_focus_outline_color: var(--sapField_Active_BorderColor);--_ui5-v1-24-2_input_icon_wrapper_height: calc(100% - 1px) ;--_ui5-v1-24-2_input_icon_wrapper_state_height: calc(100% - 2px) ;--_ui5-v1-24-2_input_icon_wrapper_success_state_height: calc(100% - var(--_ui5-v1-24-2_input_value_state_success_border_width));--_ui5-v1-24-2_input_icon_color: var(--sapContent_IconColor);--_ui5-v1-24-2_input_icon_pressed_bg: var(--sapButton_Selected_Background);--_ui5-v1-24-2_input_icon_padding: .625rem .625rem .5625rem .625rem;--_ui5-v1-24-2_input_icon_hover_bg: var(--sapField_Focus_Background);--_ui5-v1-24-2_input_icon_pressed_color: var(--sapButton_Active_TextColor);--_ui5-v1-24-2_input_icon_border_radius: .25rem;--_ui5-v1-24-2_input_icon_box_shadow: var(--sapField_Hover_Shadow);--_ui5-v1-24-2_input_icon_border: none;--_ui5-v1-24-2_input_error_icon_box_shadow: var(--sapContent_Negative_Shadow);--_ui5-v1-24-2_input_warning_icon_box_shadow: var(--sapContent_Critical_Shadow);--_ui5-v1-24-2_input_information_icon_box_shadow: var(--sapContent_Informative_Shadow);--_ui5-v1-24-2_input_success_icon_box_shadow: var(--sapContent_Positive_Shadow);--_ui5-v1-24-2_input_icon_error_pressed_color: var(--sapButton_Reject_Selected_TextColor);--_ui5-v1-24-2_input_icon_warning_pressed_color: var(--sapButton_Attention_Selected_TextColor);--_ui5-v1-24-2_input_icon_information_pressed_color: var(--sapButton_Selected_TextColor);--_ui5-v1-24-2_input_icon_success_pressed_color: var(--sapButton_Accept_Selected_TextColor);--_ui5-v1-24-2_link_focus_text_decoration: underline;--_ui5-v1-24-2_link_text_decoration: var(--sapLink_TextDecoration);--_ui5-v1-24-2_link_hover_text_decoration: var(--sapLink_Hover_TextDecoration);--_ui5-v1-24-2_link_focused_hover_text_decoration: none;--_ui5-v1-24-2_link_focused_hover_text_color: var(--sapContent_ContrastTextColor);--_ui5-v1-24-2_link_active_text_decoration: var(--sapLink_Active_TextDecoration);--_ui5-v1-24-2_link_outline: none;--_ui5-v1-24-2_link_focus_border-radius: .125rem;--_ui5-v1-24-2_link_focus_background_color: var(--sapContent_FocusColor);--_ui5-v1-24-2_link_focus_color: var(--sapContent_ContrastTextColor);--_ui5-v1-24-2_link_subtle_text_decoration: underline;--_ui5-v1-24-2_link_subtle_text_decoration_hover: none;--ui5-v1-24-2_list_footer_text_color: var(--sapList_FooterTextColor);--ui5-v1-24-2-listitem-background-color: var(--sapList_Background);--ui5-v1-24-2-listitem-border-bottom: var(--sapList_BorderWidth) solid var(--sapList_BorderColor);--ui5-v1-24-2-listitem-selected-border-bottom: 1px solid var(--sapList_SelectionBorderColor);--ui5-v1-24-2-listitem-focused-selected-border-bottom: 1px solid var(--sapList_SelectionBorderColor);--_ui5-v1-24-2_listitembase_focus_width: 1px;--_ui5-v1-24-2-listitembase_disabled_opacity: .5;--_ui5-v1-24-2_product_switch_item_border: none;--ui5-v1-24-2-listitem-active-border-color: var(--sapContent_FocusColor);--_ui5-v1-24-2_menu_item_padding: 0 1rem 0 .75rem;--_ui5-v1-24-2_menu_item_submenu_icon_right: 1rem;--_ui5-v1-24-2_menu_item_additional_text_start_margin: 1rem;--_ui5-v1-24-2_menu_popover_border_radius: var(--sapPopover_BorderCornerRadius);--_ui5-v1-24-2_monthpicker_item_border: none;--_ui5-v1-24-2_monthpicker_item_margin: 1px;--_ui5-v1-24-2_monthpicker_item_border_radius: .5rem;--_ui5-v1-24-2_monthpicker_item_focus_after_border: var(--_ui5-v1-24-2_button_focused_border);--_ui5-v1-24-2_monthpicker_item_focus_after_border_radius: .5rem;--_ui5-v1-24-2_monthpicker_item_focus_after_width: calc(100% - .5rem) ;--_ui5-v1-24-2_monthpicker_item_focus_after_height: calc(100% - .5rem) ;--_ui5-v1-24-2_monthpicker_item_focus_after_offset: .25rem;--_ui5-v1-24-2_monthpicker_item_selected_text_color: var(--sapContent_Selected_TextColor);--_ui5-v1-24-2_monthpicker_item_selected_background_color:var(--sapLegend_WorkingBackground);--_ui5-v1-24-2_monthpicker_item_selected_hover_color: var(--sapList_Hover_Background);--_ui5-v1-24-2_monthpicker_item_selected_box_shadow: none;--_ui5-v1-24-2_monthpicker_item_focus_after_outline: .125rem solid var(--sapSelectedColor);--_ui5-v1-24-2_monthpicker_item_selected_font_wieght: bold;--_ui5-v1-24-2_message_strip_icon_width: 2.5rem;--_ui5-v1-24-2_message_strip_button_border_width: 0;--_ui5-v1-24-2_message_strip_button_border_style: none;--_ui5-v1-24-2_message_strip_button_border_color: transparent;--_ui5-v1-24-2_message_strip_button_border_radius: 0;--_ui5-v1-24-2_message_strip_padding: .4375rem 2.5rem .4375rem 2.5rem;--_ui5-v1-24-2_message_strip_padding_block_no_icon: .4375rem .4375rem;--_ui5-v1-24-2_message_strip_padding_inline_no_icon: 1rem 2.5rem;--_ui5-v1-24-2_message_strip_button_height: 1.625rem;--_ui5-v1-24-2_message_strip_border_width: 1px;--_ui5-v1-24-2_message_strip_close_button_border: none;--_ui5-v1-24-2_message_strip_icon_top: .4375rem;--_ui5-v1-24-2_message_strip_focus_width: 1px;--_ui5-v1-24-2_message_strip_focus_offset: -2px;--_ui5-v1-24-2_message_strip_close_button_top: .125rem;--_ui5-v1-24-2_message_strip_close_button_right: .1875rem;--_ui5-v1-24-2_panel_focus_border: var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);--_ui5-v1-24-2_panel_header_height: 2.75rem;--_ui5-v1-24-2_panel_button_root_width: 2.75rem;--_ui5-v1-24-2_panel_button_root_height: 2.75rem;--_ui5-v1-24-2_panel_header_padding_right: .5rem;--_ui5-v1-24-2_panel_header_button_wrapper_padding: .25rem;--_ui5-v1-24-2_panel_border_radius: var(--sapElement_BorderCornerRadius);--_ui5-v1-24-2_panel_border_bottom: none;--_ui5-v1-24-2_panel_default_header_border: .0625rem solid var(--sapGroup_TitleBorderColor);--_ui5-v1-24-2_panel_outline_offset: -.125rem;--_ui5-v1-24-2_panel_border_radius_expanded: var(--sapElement_BorderCornerRadius) var(--sapElement_BorderCornerRadius) 0 0;--_ui5-v1-24-2_panel_icon_color: var(--sapButton_Lite_TextColor);--_ui5-v1-24-2_panel_focus_offset: 0px;--_ui5-v1-24-2_panel_focus_bottom_offset: -1px;--_ui5-v1-24-2_panel_content_padding: .625rem 1rem;--_ui5-v1-24-2_panel_header_background_color: var(--sapGroup_TitleBackground);--_ui5-v1-24-2_popover_background: var(--sapGroup_ContentBackground);--_ui5-v1-24-2_popover_box_shadow: var(--sapContent_Shadow2);--_ui5-v1-24-2_popover_no_arrow_box_shadow: var(--sapContent_Shadow1);--_ui5-v1-24-2_popup_content_padding_s: 1rem;--_ui5-v1-24-2_popup_content_padding_m_l: 2rem;--_ui5-v1-24-2_popup_content_padding_xl: 3rem;--_ui5-v1-24-2_popup_header_footer_padding_s: 1rem;--_ui5-v1-24-2_popup_header_footer_padding_m_l: 2rem;--_ui5-v1-24-2_popup_header_footer_padding_xl: 3rem;--_ui5-v1-24-2_popup_viewport_margin: 10px;--_ui5-v1-24-2_popup_header_font_weight: 400;--_ui5-v1-24-2_popup_header_prop_header_text_alignment: flex-start;--_ui5-v1-24-2_popup_header_background: var(--sapPageHeader_Background);--_ui5-v1-24-2_popup_header_shadow: var(--sapContent_HeaderShadow);--_ui5-v1-24-2_popup_header_border: none;--_ui5-v1-24-2_popup_header_font_family: var(--sapFontHeaderFamily);--_ui5-v1-24-2_popup_border_radius: .5rem;--_ui5-v1-24-2_popup_block_layer_background: color-mix(in oklch, transparent, var(--sapBlockLayer_Background) 60%);--_ui5-v1-24-2_progress_indicator_bar_border_max: none;--_ui5-v1-24-2_progress_indicator_icon_visibility: inline-block;--_ui5-v1-24-2_progress_indicator_side_points_visibility: block;--_ui5-v1-24-2_progress_indicator_padding: 1.25rem 0 .75rem 0;--_ui5-v1-24-2_progress_indicator_padding_end: 1.25rem;--_ui5-v1-24-2_progress_indicator_host_height: unset;--_ui5-v1-24-2_progress_indicator_host_min_height: unset;--_ui5-v1-24-2_progress_indicator_host_box_sizing: border-box;--_ui5-v1-24-2_progress_indicator_root_position: relative;--_ui5-v1-24-2_progress_indicator_root_border_radius: .25rem;--_ui5-v1-24-2_progress_indicator_root_height: .375rem;--_ui5-v1-24-2_progress_indicator_root_min_height: .375rem;--_ui5-v1-24-2_progress_indicator_root_overflow: visible;--_ui5-v1-24-2_progress_indicator_bar_height: .625rem;--_ui5-v1-24-2_progress_indicator_bar_border_radius: .5rem;--_ui5-v1-24-2_progress_indicator_remaining_bar_border_radius: .25rem;--_ui5-v1-24-2_progress_indicator_remaining_bar_position: absolute;--_ui5-v1-24-2_progress_indicator_remaining_bar_width: 100%;--_ui5-v1-24-2_progress_indicator_remaining_bar_overflow: visible;--_ui5-v1-24-2_progress_indicator_icon_position: absolute;--_ui5-v1-24-2_progress_indicator_icon_right_position: -1.25rem;--_ui5-v1-24-2_progress_indicator_value_margin: 0 0 .1875rem 0;--_ui5-v1-24-2_progress_indicator_value_position: absolute;--_ui5-v1-24-2_progress_indicator_value_top_position: -1.3125rem;--_ui5-v1-24-2_progress_indicator_value_left_position: 0;--_ui5-v1-24-2_progress_indicator_background_none: var(--sapProgress_Background);--_ui5-v1-24-2_progress_indicator_background_error: var(--sapProgress_NegativeBackground);--_ui5-v1-24-2_progress_indicator_background_warning: var(--sapProgress_CriticalBackground);--_ui5-v1-24-2_progress_indicator_background_success: var(--sapProgress_PositiveBackground);--_ui5-v1-24-2_progress_indicator_background_information: var(--sapProgress_InformationBackground);--_ui5-v1-24-2_progress_indicator_value_state_none: var(--sapProgress_Value_Background);--_ui5-v1-24-2_progress_indicator_value_state_error: var(--sapProgress_Value_NegativeBackground);--_ui5-v1-24-2_progress_indicator_value_state_warning: var(--sapProgress_Value_CriticalBackground);--_ui5-v1-24-2_progress_indicator_value_state_success: var(--sapProgress_Value_PositiveBackground);--_ui5-v1-24-2_progress_indicator_value_state_information: var(--sapProgress_Value_InformationBackground);--_ui5-v1-24-2_progress_indicator_value_state_error_icon_color: var(--sapProgress_Value_NegativeTextColor);--_ui5-v1-24-2_progress_indicator_value_state_warning_icon_color: var(--sapProgress_Value_CriticalTextColor);--_ui5-v1-24-2_progress_indicator_value_state_success_icon_color: var(--sapProgress_Value_PositiveTextColor);--_ui5-v1-24-2_progress_indicator_value_state_information_icon_color: var(--sapProgress_Value_InformationTextColor);--_ui5-v1-24-2_progress_indicator_border: none;--_ui5-v1-24-2_progress_indicator_border_color_error: var(--sapErrorBorderColor);--_ui5-v1-24-2_progress_indicator_border_color_warning: var(--sapWarningBorderColor);--_ui5-v1-24-2_progress_indicator_border_color_success: var(--sapSuccessBorderColor);--_ui5-v1-24-2_progress_indicator_border_color_information: var(--sapInformationBorderColor);--_ui5-v1-24-2_progress_indicator_color: var(--sapField_TextColor);--_ui5-v1-24-2_progress_indicator_bar_color: var(--sapProgress_TextColor);--_ui5-v1-24-2_progress_indicator_icon_size: var(--sapFontLargeSize);--_ui5-v1-24-2_rating_indicator_item_height: 1em;--_ui5-v1-24-2_rating_indicator_item_width: 1em;--_ui5-v1-24-2_rating_indicator_component_spacing: .5rem 0px;--_ui5-v1-24-2_rating_indicator_border_radius: .25rem;--_ui5-v1-24-2_rating_indicator_outline_offset: .125rem;--_ui5-v1-24-2_rating_indicator_readonly_item_height: .75em;--_ui5-v1-24-2_rating_indicator_readonly_item_width: .75em;--_ui5-v1-24-2_rating_indicator_readonly_item_spacing: .1875rem .1875rem;--_ui5-v1-24-2_segmented_btn_inner_border: .0625rem solid transparent;--_ui5-v1-24-2_segmented_btn_inner_border_odd_child: .0625rem solid transparent;--_ui5-v1-24-2_segmented_btn_inner_pressed_border_odd_child: .0625rem solid var(--sapButton_Selected_BorderColor);--_ui5-v1-24-2_segmented_btn_inner_border_radius: var(--sapButton_BorderCornerRadius);--_ui5-v1-24-2_segmented_btn_background_color: var(--sapButton_Lite_Background);--_ui5-v1-24-2_segmented_btn_border_color: var(--sapButton_Lite_BorderColor);--_ui5-v1-24-2_segmented_btn_hover_box_shadow: none;--_ui5-v1-24-2_segmented_btn_item_border_left: .0625rem;--_ui5-v1-24-2_segmented_btn_item_border_right: .0625rem;--_ui5-v1-24-2_radio_button_min_width: 2.75rem;--_ui5-v1-24-2_radio_button_hover_fill_error: var(--sapField_Hover_Background);--_ui5-v1-24-2_radio_button_hover_fill_warning: var(--sapField_Hover_Background);--_ui5-v1-24-2_radio_button_hover_fill_success: var(--sapField_Hover_Background);--_ui5-v1-24-2_radio_button_hover_fill_information: var(--sapField_Hover_Background);--_ui5-v1-24-2_radio_button_checked_fill: var(--sapSelectedColor);--_ui5-v1-24-2_radio_button_checked_error_fill: var(--sapField_InvalidColor);--_ui5-v1-24-2_radio_button_checked_success_fill: var(--sapField_SuccessColor);--_ui5-v1-24-2_radio_button_checked_information_fill: var(--sapField_InformationColor);--_ui5-v1-24-2_radio_button_warning_error_border_dash: 0;--_ui5-v1-24-2_radio_button_outer_ring_color: var(--sapField_BorderColor);--_ui5-v1-24-2_radio_button_outer_ring_width: var(--sapField_BorderWidth);--_ui5-v1-24-2_radio_button_outer_ring_bg: var(--sapField_Background);--_ui5-v1-24-2_radio_button_outer_ring_hover_color: var(--sapField_Hover_BorderColor);--_ui5-v1-24-2_radio_button_outer_ring_active_color: var(--sapField_Hover_BorderColor);--_ui5-v1-24-2_radio_button_outer_ring_checked_hover_color: var(--sapField_Hover_BorderColor);--_ui5-v1-24-2_radio_button_outer_ring_padding_with_label: 0 .6875rem;--_ui5-v1-24-2_radio_button_border: none;--_ui5-v1-24-2_radio_button_focus_border: none;--_ui5-v1-24-2_radio_button_focus_outline: block;--_ui5-v1-24-2_radio_button_color: var(--sapField_BorderColor);--_ui5-v1-24-2_radio_button_label_offset: 1px;--_ui5-v1-24-2_radio_button_items_align: unset;--_ui5-v1-24-2_radio_button_information_border_width: var(--sapField_InformationBorderWidth);--_ui5-v1-24-2_radio_button_border_width: var(--sapContent_FocusWidth);--_ui5-v1-24-2_radio_button_border_radius: .5rem;--_ui5-v1-24-2_radio_button_label_color: var(--sapField_TextColor);--_ui5-v1-24-2_radio_button_inner_ring_radius: 27.5%;--_ui5-v1-24-2_radio_button_outer_ring_padding: 0 .6875rem;--_ui5-v1-24-2_radio_button_read_only_border_type: 4,2;--_ui5-v1-24-2_radio_button_inner_ring_color: var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_radio_button_checked_warning_fill: var(--sapField_WarningColor);--_ui5-v1-24-2_radio_button_read_only_inner_ring_color: var(--sapField_TextColor);--_ui5-v1-24-2_radio_button_read_only_border_width: var(--sapElement_BorderWidth);--_ui5-v1-24-2_radio_button_hover_fill: var(--sapContent_Selected_Hover_Background);--_ui5-v1-24-2_radio_button_focus_dist: .375rem;--_ui5-v1-24-2_switch_height: 2.75rem;--_ui5-v1-24-2_switch_foucs_border_size: 1px;--_ui5-v1-24-2-switch-root-border-radius: 0;--_ui5-v1-24-2-switch-root-box-shadow: none;--_ui5-v1-24-2-switch-focus: "";--_ui5-v1-24-2_switch_track_border_radius: .75rem;--_ui5-v1-24-2-switch-track-border: 1px solid;--_ui5-v1-24-2_switch_track_transition: none;--_ui5-v1-24-2_switch_handle_border_radius: 1rem;--_ui5-v1-24-2-switch-handle-icon-display: none;--_ui5-v1-24-2-switch-slider-texts-display: inline;--_ui5-v1-24-2_switch_width: 3.5rem;--_ui5-v1-24-2_switch_min_width: none;--_ui5-v1-24-2_switch_with_label_width: 3.875rem;--_ui5-v1-24-2_switch_focus_outline: none;--_ui5-v1-24-2_switch_root_after_outline: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_switch_root_after_boreder: none;--_ui5-v1-24-2_switch_root_after_boreder_radius: 1rem;--_ui5-v1-24-2_switch_root_outline_top: .5rem;--_ui5-v1-24-2_switch_root_outline_bottom: .5rem;--_ui5-v1-24-2_switch_root_outline_left: .375rem;--_ui5-v1-24-2_switch_root_outline_right: .375rem;--_ui5-v1-24-2_switch_disabled_opacity: var(--sapContent_DisabledOpacity);--_ui5-v1-24-2_switch_transform: translateX(100%) translateX(-1.625rem);--_ui5-v1-24-2_switch_transform_with_label: translateX(100%) translateX(-1.875rem);--_ui5-v1-24-2_switch_rtl_transform: translateX(-100%) translateX(1.625rem);--_ui5-v1-24-2_switch_rtl_transform_with_label: translateX(-100%) translateX(1.875rem);--_ui5-v1-24-2_switch_track_width: 2.5rem;--_ui5-v1-24-2_switch_track_height: 1.5rem;--_ui5-v1-24-2_switch_track_with_label_width: 2.875rem;--_ui5-v1-24-2_switch_track_with_label_height: 1.5rem;--_ui5-v1-24-2_switch_track_active_background_color: var(--sapButton_Track_Selected_Background);--_ui5-v1-24-2_switch_track_inactive_background_color: var(--sapButton_Track_Background);--_ui5-v1-24-2_switch_track_hover_active_background_color: var(--sapButton_Track_Selected_Hover_Background);--_ui5-v1-24-2_switch_track_hover_inactive_background_color: var(--sapButton_Track_Hover_Background);--_ui5-v1-24-2_switch_track_active_border_color: var(--sapButton_Track_Selected_BorderColor);--_ui5-v1-24-2_switch_track_inactive_border_color: var(--sapButton_Track_BorderColor);--_ui5-v1-24-2_switch_track_hover_active_border_color: var(--sapButton_Track_Selected_Hover_BorderColor);--_ui5-v1-24-2_switch_track_hover_inactive_border_color: var(--sapButton_Track_Hover_BorderColor);--_ui5-v1-24-2_switch_track_semantic_accept_background_color: var(--sapButton_Track_Positive_Background);--_ui5-v1-24-2_switch_track_semantic_reject_background_color: var(--sapButton_Track_Negative_Background);--_ui5-v1-24-2_switch_track_semantic_hover_accept_background_color: var(--sapButton_Track_Positive_Hover_Background);--_ui5-v1-24-2_switch_track_semantic_hover_reject_background_color: var(--sapButton_Track_Negative_Hover_Background);--_ui5-v1-24-2_switch_track_semantic_accept_border_color: var(--sapButton_Track_Positive_BorderColor);--_ui5-v1-24-2_switch_track_semantic_reject_border_color: var(--sapButton_Track_Negative_BorderColor);--_ui5-v1-24-2_switch_track_semantic_hover_accept_border_color: var(--sapButton_Track_Positive_Hover_BorderColor);--_ui5-v1-24-2_switch_track_semantic_hover_reject_border_color: var(--sapButton_Track_Negative_Hover_BorderColor);--_ui5-v1-24-2_switch_track_icon_display: inline-block;--_ui5-v1-24-2_switch_handle_width: 1.5rem;--_ui5-v1-24-2_switch_handle_height: 1.25rem;--_ui5-v1-24-2_switch_handle_with_label_width: 1.75rem;--_ui5-v1-24-2_switch_handle_with_label_height: 1.25rem;--_ui5-v1-24-2_switch_handle_border: var(--_ui5-v1-24-2_switch_handle_border_width) solid var(--sapButton_Handle_BorderColor);--_ui5-v1-24-2_switch_handle_border_width: .125rem;--_ui5-v1-24-2_switch_handle_active_background_color: var(--sapButton_Handle_Selected_Background);--_ui5-v1-24-2_switch_handle_inactive_background_color: var(--sapButton_Handle_Background);--_ui5-v1-24-2_switch_handle_hover_active_background_color: var(--sapButton_Handle_Selected_Hover_Background);--_ui5-v1-24-2_switch_handle_hover_inactive_background_color: var(--sapButton_Handle_Hover_Background);--_ui5-v1-24-2_switch_handle_active_border_color: var(--sapButton_Handle_Selected_BorderColor);--_ui5-v1-24-2_switch_handle_inactive_border_color: var(--sapButton_Handle_BorderColor);--_ui5-v1-24-2_switch_handle_hover_active_border_color: var(--sapButton_Handle_Selected_BorderColor);--_ui5-v1-24-2_switch_handle_hover_inactive_border_color: var(--sapButton_Handle_BorderColor);--_ui5-v1-24-2_switch_handle_semantic_accept_background_color: var(--sapButton_Handle_Positive_Background);--_ui5-v1-24-2_switch_handle_semantic_reject_background_color: var(--sapButton_Handle_Negative_Background);--_ui5-v1-24-2_switch_handle_semantic_hover_accept_background_color: var(--sapButton_Handle_Positive_Hover_Background);--_ui5-v1-24-2_switch_handle_semantic_hover_reject_background_color: var(--sapButton_Handle_Negative_Hover_Background);--_ui5-v1-24-2_switch_handle_semantic_accept_border_color: var(--sapButton_Handle_Positive_BorderColor);--_ui5-v1-24-2_switch_handle_semantic_reject_border_color: var(--sapButton_Handle_Negative_BorderColor);--_ui5-v1-24-2_switch_handle_semantic_hover_accept_border_color: var(--sapButton_Handle_Positive_BorderColor);--_ui5-v1-24-2_switch_handle_semantic_hover_reject_border_color: var(--sapButton_Handle_Negative_BorderColor);--_ui5-v1-24-2_switch_handle_on_hover_box_shadow: 0 0 0 .125rem var(--sapButton_Handle_Selected_Hover_BorderColor);--_ui5-v1-24-2_switch_handle_off_hover_box_shadow: 0 0 0 .125rem var(--sapButton_Handle_Hover_BorderColor);--_ui5-v1-24-2_switch_handle_semantic_on_hover_box_shadow: 0 0 0 .125rem var(--sapButton_Handle_Positive_Hover_BorderColor);--_ui5-v1-24-2_switch_handle_semantic_off_hover_box_shadow: 0 0 0 .125rem var(--sapButton_Handle_Negative_Hover_BorderColor);--_ui5-v1-24-2_switch_handle_left: .0625rem;--_ui5-v1-24-2_switch_text_font_family: var(--sapContent_IconFontFamily);--_ui5-v1-24-2_switch_text_font_size: var(--sapFontLargeSize);--_ui5-v1-24-2_switch_text_width: 1.25rem;--_ui5-v1-24-2_switch_text_with_label_font_family: "72-Condensed-Bold" , "72" , "72full" , Arial, Helvetica, sans-serif;--_ui5-v1-24-2_switch_text_with_label_font_size: var(--sapFontSmallSize);--_ui5-v1-24-2_switch_text_with_label_width: 1.75rem;--_ui5-v1-24-2_switch_text_inactive_left: .1875rem;--_ui5-v1-24-2_switch_text_inactive_left_alternate: .0625rem;--_ui5-v1-24-2_switch_text_inactive_right: auto;--_ui5-v1-24-2_switch_text_inactive_right_alternate: 0;--_ui5-v1-24-2_switch_text_active_left: .1875rem;--_ui5-v1-24-2_switch_text_active_left_alternate: .0625rem;--_ui5-v1-24-2_switch_text_active_right: auto;--_ui5-v1-24-2_switch_text_active_color: var(--sapButton_Handle_Selected_TextColor);--_ui5-v1-24-2_switch_text_inactive_color: var(--sapButton_Handle_TextColor);--_ui5-v1-24-2_switch_text_semantic_accept_color: var(--sapButton_Handle_Positive_TextColor);--_ui5-v1-24-2_switch_text_semantic_reject_color: var(--sapButton_Handle_Negative_TextColor);--_ui5-v1-24-2_switch_text_overflow: hidden;--_ui5-v1-24-2_switch_text_z_index: 1;--_ui5-v1-24-2_switch_text_hidden: hidden;--_ui5-v1-24-2_switch_text_min_width: none;--_ui5-v1-24-2_switch_icon_width: 1rem;--_ui5-v1-24-2_switch_icon_height: 1rem;--_ui5-v1-24-2_select_disabled_background: var(--sapField_Background);--_ui5-v1-24-2_select_disabled_border_color: var(--sapField_BorderColor);--_ui5-v1-24-2_select_state_error_warning_border_style: solid;--_ui5-v1-24-2_select_state_error_warning_border_width: .125rem;--_ui5-v1-24-2_select_focus_width: 1px;--_ui5-v1-24-2_select_label_color: var(--sapField_TextColor);--_ui5-v1-24-2_select_hover_icon_left_border: none;--_ui5-v1-24-2_select_option_focus_border_radius: var(--sapElement_BorderCornerRadius);--_ui5-v1-24-2_split_button_host_transparent_hover_background: transparent;--_ui5-v1-24-2_split_button_transparent_disabled_background: transparent;--_ui5-v1-24-2_split_button_host_default_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_BorderColor);--_ui5-v1-24-2_split_button_host_attention_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Attention_BorderColor);--_ui5-v1-24-2_split_button_host_emphasized_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Emphasized_BorderColor);--_ui5-v1-24-2_split_button_host_positive_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Accept_BorderColor);--_ui5-v1-24-2_split_button_host_negative_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Reject_BorderColor);--_ui5-v1-24-2_split_button_host_transparent_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_Lite_BorderColor);--_ui5-v1-24-2_split_text_button_border_color: transparent;--_ui5-v1-24-2_split_text_button_background_color: transparent;--_ui5-v1-24-2_split_text_button_emphasized_border: var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-24-2_split_text_button_emphasized_border_width: .0625rem;--_ui5-v1-24-2_split_text_button_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-24-2_split_text_button_emphasized_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-24-2_split_text_button_positive_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-24-2_split_text_button_negative_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-24-2_split_text_button_attention_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-24-2_split_text_button_transparent_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-24-2_split_arrow_button_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-24-2_split_arrow_button_emphasized_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-24-2_split_arrow_button_emphasized_hover_border_left: var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-24-2_split_arrow_button_positive_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-24-2_split_arrow_button_negative_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-24-2_split_arrow_button_attention_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-24-2_split_arrow_button_transparent_hover_border: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-24-2_split_text_button_hover_border_left: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-24-2_split_text_button_emphasized_hover_border_left: var(--sapButton_BorderWidth) solid var(--sapButton_Emphasized_BorderColor);--_ui5-v1-24-2_split_text_button_positive_hover_border_left: var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-24-2_split_text_button_negative_hover_border_left: var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-24-2_split_text_button_attention_hover_border_left: var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-24-2_split_text_button_transparent_hover_border_left: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-24-2_split_button_focused_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_split_button_focused_border_radius: .375rem;--_ui5-v1-24-2_split_button_hover_border_radius: var(--_ui5-v1-24-2_button_border_radius);--_ui5-v1-24-2_split_button_middle_separator_width: 0;--_ui5-v1-24-2_split_button_middle_separator_left: -.0625rem;--_ui5-v1-24-2_split_button_middle_separator_hover_display: none;--_ui5-v1-24-2_split_button_text_button_width: 2.375rem;--_ui5-v1-24-2_split_button_text_button_right_border_width: .0625rem;--_ui5-v1-24-2_split_button_transparent_hover_background: var(--sapButton_Lite_Hover_Background);--_ui5-v1-24-2_split_button_transparent_hover_color: var(--sapButton_TextColor);--_ui5-v1-24-2_split_button_host_transparent_hover_box_shadow: inset 0 0 0 var(--sapButton_BorderWidth) var(--sapButton_BorderColor);--_ui5-v1-24-2_split_button_inner_focused_border_radius_outer: .375rem;--_ui5-v1-24-2_split_button_inner_focused_border_radius_inner: .375rem;--_ui5-v1-24-2_split_button_emphasized_separator_color: transparent;--_ui5-v1-24-2_split_button_positive_separator_color: transparent;--_ui5-v1-24-2_split_button_negative_separator_color: transparent;--_ui5-v1-24-2_split_button_attention_separator_color: transparent;--_ui5-v1-24-2_split_button_attention_separator_color_default: var(--sapButton_Attention_TextColor);--_ui5-v1-24-2_split_text_button_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-24-2_split_text_button_emphasized_hover_border_right: none;--_ui5-v1-24-2_split_text_button_positive_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_Accept_BorderColor);--_ui5-v1-24-2_split_text_button_negative_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_Reject_BorderColor);--_ui5-v1-24-2_split_text_button_attention_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_Attention_BorderColor);--_ui5-v1-24-2_split_text_button_transparent_hover_border_right: var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);--_ui5-v1-24-2_split_button_middle_separator_hover_display_emphasized: none;--_ui5-v1-24-2_tc_header_height: var(--_ui5-v1-24-2_tc_item_height);--_ui5-v1-24-2_tc_header_height_text_only: var(--_ui5-v1-24-2_tc_item_text_only_height);--_ui5-v1-24-2_tc_header_height_text_with_additional_text: var(--_ui5-v1-24-2_tc_item_text_only_with_additional_text_height);--_ui5-v1-24-2_tc_header_box_shadow: var(--sapContent_HeaderShadow);--_ui5-v1-24-2_tc_header_background: var(--sapObjectHeader_Background);--_ui5-v1-24-2_tc_header_background_translucent: var(--sapObjectHeader_Background);--_ui5-v1-24-2_tc_content_background: var(--sapBackgroundColor);--_ui5-v1-24-2_tc_content_background_translucent: var(--sapGroup_ContentBackground);--_ui5-v1-24-2_tc_headeritem_padding: 1rem;--_ui5-v1-24-2_tc_headerItem_additional_text_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_tc_headerItem_text_selected_color: var(--sapSelectedColor);--_ui5-v1-24-2_tc_headerItem_text_selected_hover_color: var(--sapSelectedColor);--_ui5-v1-24-2_tc_headerItem_additional_text_font_weight: normal;--_ui5-v1-24-2_tc_headerItem_neutral_color: var(--sapNeutralTextColor);--_ui5-v1-24-2_tc_headerItem_positive_color: var(--sapPositiveTextColor);--_ui5-v1-24-2_tc_headerItem_negative_color: var(--sapNegativeTextColor);--_ui5-v1-24-2_tc_headerItem_critical_color: var(--sapCriticalTextColor);--_ui5-v1-24-2_tc_headerItem_neutral_border_color: var(--sapNeutralElementColor);--_ui5-v1-24-2_tc_headerItem_positive_border_color: var(--sapPositiveElementColor);--_ui5-v1-24-2_tc_headerItem_negative_border_color: var(--sapNegativeElementColor);--_ui5-v1-24-2_tc_headerItem_critical_border_color: var(--sapCriticalElementColor);--_ui5-v1-24-2_tc_headerItem_neutral_selected_border_color: var(--_ui5-v1-24-2_tc_headerItem_neutral_color);--_ui5-v1-24-2_tc_headerItem_positive_selected_border_color: var(--_ui5-v1-24-2_tc_headerItem_positive_color);--_ui5-v1-24-2_tc_headerItem_negative_selected_border_color: var(--_ui5-v1-24-2_tc_headerItem_negative_color);--_ui5-v1-24-2_tc_headerItem_critical_selected_border_color: var(--_ui5-v1-24-2_tc_headerItem_critical_color);--_ui5-v1-24-2_tc_headerItem_transition: none;--_ui5-v1-24-2_tc_headerItem_hover_border_visibility: hidden;--_ui5-v1-24-2_tc_headerItemContent_border_radius: .125rem .125rem 0 0;--_ui5-v1-24-2_tc_headerItemContent_border_bg: transparent;--_ui5-v1-24-2_tc_headerItem_neutral_border_bg: transparent;--_ui5-v1-24-2_tc_headerItem_positive_border_bg: transparent;--_ui5-v1-24-2_tc_headerItem_negative_border_bg: transparent;--_ui5-v1-24-2_tc_headerItem_critical_border_bg: transparent;--_ui5-v1-24-2_tc_headerItemContent_border_height: 0;--_ui5-v1-24-2_tc_headerItemContent_focus_offset: 1rem;--_ui5-v1-24-2_tc_headerItem_text_focus_border_offset_left: 0px;--_ui5-v1-24-2_tc_headerItem_text_focus_border_offset_right: 0px;--_ui5-v1-24-2_tc_headerItem_text_focus_border_offset_top: 0px;--_ui5-v1-24-2_tc_headerItem_text_focus_border_offset_bottom: 0px;--_ui5-v1-24-2_tc_headerItem_mixed_mode_focus_border_offset_left: .75rem;--_ui5-v1-24-2_tc_headerItem_mixed_mode_focus_border_offset_right: .625rem;--_ui5-v1-24-2_tc_headerItem_mixed_mode_focus_border_offset_top: .75rem;--_ui5-v1-24-2_tc_headerItem_mixed_mode_focus_border_offset_bottom: .75rem;--_ui5-v1-24-2_tc_headerItemContent_focus_border: none;--_ui5-v1-24-2_tc_headerItemContent_default_focus_border: none;--_ui5-v1-24-2_tc_headerItemContent_focus_border_radius: 0;--_ui5-v1-24-2_tc_headerItemSemanticIcon_display: none;--_ui5-v1-24-2_tc_headerItemSemanticIcon_size: .75rem;--_ui5-v1-24-2_tc_mixedMode_itemText_font_family: var(--sapFontFamily);--_ui5-v1-24-2_tc_mixedMode_itemText_font_size: var(--sapFontSmallSize);--_ui5-v1-24-2_tc_mixedMode_itemText_font_weight: normal;--_ui5-v1-24-2_tc_overflowItem_positive_color: var(--sapPositiveColor);--_ui5-v1-24-2_tc_overflowItem_negative_color: var(--sapNegativeColor);--_ui5-v1-24-2_tc_overflowItem_critical_color: var(--sapCriticalColor);--_ui5-v1-24-2_tc_overflowItem_focus_offset: .125rem;--_ui5-v1-24-2_tc_overflowItem_extraIndent: 0rem;--_ui5-v1-24-2_tc_headerItemIcon_positive_selected_background: var(--sapPositiveColor);--_ui5-v1-24-2_tc_headerItemIcon_negative_selected_background: var(--sapNegativeColor);--_ui5-v1-24-2_tc_headerItemIcon_critical_selected_background: var(--sapCriticalColor);--_ui5-v1-24-2_tc_headerItemIcon_neutral_selected_background: var(--sapNeutralColor);--_ui5-v1-24-2_tc_headerItemIcon_semantic_selected_color: var(--sapGroup_ContentBackground);--_ui5-v1-24-2_tc_header_border_bottom: .0625rem solid var(--sapObjectHeader_Background);--_ui5-v1-24-2_tc_headerItemContent_border_bottom: .1875rem solid var(--sapSelectedColor);--_ui5-v1-24-2_tc_headerItem_color: var(--sapTextColor);--_ui5-v1-24-2_tc_overflowItem_default_color: var(--sapTextColor);--_ui5-v1-24-2_tc_overflowItem_current_color: CurrentColor;--_ui5-v1-24-2_tc_content_border_bottom: .0625rem solid var(--sapObjectHeader_BorderColor);--_ui5-v1-24-2_tc_headerItem_expand_button_margin_inline_start: 0rem;--_ui5-v1-24-2_tc_headerItem_single_click_expand_button_margin_inline_start: .25rem;--_ui5-v1-24-2_tc_headerItem_expand_button_border_radius: .25rem;--_ui5-v1-24-2_tc_headerItem_expand_button_separator_display: inline-block;--_ui5-v1-24-2_tc_headerItem_focus_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_tc_headerItem_focus_border_offset: -5px;--_ui5-v1-24-2_tc_headerItemIcon_focus_border_radius: 50%;--_ui5-v1-24-2_tc_headerItem_focus_border_radius: .375rem;--_ui5-v1-24-2_tc_headeritem_text_font_weight: bold;--_ui5-v1-24-2_tc_headerItem_focus_offset: 1px;--_ui5-v1-24-2_tc_headerItem_text_hover_color: var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_tc_headerItemIcon_border: .125rem solid var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_tc_headerItemIcon_color: var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_tc_headerItemIcon_selected_background: var(--sapContent_Selected_ForegroundColor);--_ui5-v1-24-2_tc_headerItemIcon_background_color: var(--sapContent_Selected_Background);--_ui5-v1-24-2_tc_headerItemIcon_selected_color: var(--sapContent_ContrastIconColor);--_ui5-v1-24-2_tc_mixedMode_itemText_color: var(--sapTextColor);--_ui5-v1-24-2_tc_overflow_text_color: var(--sapTextColor);--_ui5-v1-24-2_textarea_state_border_width: .125rem;--_ui5-v1-24-2_textarea_information_border_width: .125rem;--_ui5-v1-24-2_textarea_placeholder_font_style: italic;--_ui5-v1-24-2_textarea_value_state_error_warning_placeholder_font_weight: normal;--_ui5-v1-24-2_textarea_error_placeholder_font_style: italic;--_ui5-v1-24-2_textarea_error_placeholder_color: var(--sapField_PlaceholderTextColor);--_ui5-v1-24-2_textarea_error_hover_background_color: var(--sapField_Hover_Background);--_ui5-v1-24-2_textarea_disabled_opacity: .4;--_ui5-v1-24-2_textarea_focus_pseudo_element_content: "";--_ui5-v1-24-2_textarea_min_height: 2.25rem;--_ui5-v1-24-2_textarea_padding_right_and_left_readonly: .5625rem;--_ui5-v1-24-2_textarea_padding_top_readonly: .4375rem;--_ui5-v1-24-2_textarea_exceeded_text_height: 1rem;--_ui5-v1-24-2_textarea_hover_border: none;--_ui5-v1-24-2_textarea_focus_border_radius: .25rem;--_ui5-v1-24-2_textarea_error_warning_border_style: none;--_ui5-v1-24-2_textarea_line_height: 1.5;--_ui5-v1-24-2_textarea_focused_value_state_error_background: var(--sapField_Hover_Background);--_ui5-v1-24-2_textarea_focused_value_state_warning_background: var(--sapField_Hover_Background);--_ui5-v1-24-2_textarea_focused_value_state_success_background: var(--sapField_Hover_Background);--_ui5-v1-24-2_textarea_focused_value_state_information_background: var(--sapField_Hover_Background);--_ui5-v1-24-2_textarea_focused_value_state_error_focus_outline_color: var(--sapField_InvalidColor);--_ui5-v1-24-2_textarea_focused_value_state_warning_focus_outline_color: var(--sapField_WarningColor);--_ui5-v1-24-2_textarea_focused_value_state_success_focus_outline_color: var(--sapField_SuccessColor);--_ui5-v1-24-2_textarea_focus_offset: 0;--_ui5-v1-24-2_textarea_readonly_focus_offset: 1px;--_ui5-v1-24-2_textarea_focus_outline_color: var(--sapField_Active_BorderColor);--_ui5-v1-24-2_textarea_value_state_focus_offset: 0;--_ui5-v1-24-2_textarea_wrapper_padding: .0625rem;--_ui5-v1-24-2_textarea_success_wrapper_padding: .0625rem;--_ui5-v1-24-2_textarea_warning_error_wrapper_padding: .0625rem .0625rem .125rem .0625rem;--_ui5-v1-24-2_textarea_information_wrapper_padding: .0625rem .0625rem .125rem .0625rem;--_ui5-v1-24-2_textarea_padding_bottom_readonly: .375rem;--_ui5-v1-24-2_textarea_padding_top_error_warning: .5rem;--_ui5-v1-24-2_textarea_padding_bottom_error_warning: .4375rem;--_ui5-v1-24-2_textarea_padding_top_information: .5rem;--_ui5-v1-24-2_textarea_padding_bottom_information: .4375rem;--_ui5-v1-24-2_textarea_padding_right_and_left: .625rem;--_ui5-v1-24-2_textarea_padding_right_and_left_error_warning: .625rem;--_ui5-v1-24-2_textarea_padding_right_and_left_information: .625rem;--_ui5-v1-24-2_textarea_readonly_border_style: dashed;--_ui5-v1-24-2_time_picker_border: .0625rem solid transparent;--_ui5-v1-24-2-time_picker_border_radius: .25rem;--_ui5-v1-24-2_toast_vertical_offset: 3rem;--_ui5-v1-24-2_toast_horizontal_offset: 2rem;--_ui5-v1-24-2_toast_background: var(--sapList_Background);--_ui5-v1-24-2_toast_shadow: var(--sapContent_Shadow2);--_ui5-v1-24-2_toast_offset_width: -.1875rem;--_ui5-v1-24-2_wheelslider_item_text_size: var(--sapFontSize);--_ui5-v1-24-2_wheelslider_label_text_size: var(--sapFontSmallSize);--_ui5-v1-24-2_wheelslider_selection_frame_margin_top: calc(var(--_ui5-v1-24-2_wheelslider_item_height) * 2);--_ui5-v1-24-2_wheelslider_mobile_selection_frame_margin_top: calc(var(--_ui5-v1-24-2_wheelslider_item_height) * 4);--_ui5-v1-24-2_wheelslider_label_text_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_wheelslider_height: 240px;--_ui5-v1-24-2_wheelslider_mobile_height: 432px;--_ui5-v1-24-2_wheelslider_item_width: 48px;--_ui5-v1-24-2_wheelslider_item_height: 46px;--_ui5-v1-24-2_wheelslider_arrows_visibility: hidden;--_ui5-v1-24-2_wheelslider_item_background_color: var(--sapLegend_WorkingBackground);--_ui5-v1-24-2_wheelslider_item_text_color: var(--sapTextColor);--_ui_wheelslider_item_hover_color: var(--sapList_AlternatingBackground);--_ui_wheelslider_item_expanded_hover_color: var(--sapList_AlternatingBackground);--_ui_wheelslider_item_exanded_hover_color: var(--sapList_AlternatingBackground);--_ui5-v1-24-2_wheelslider_item_border_color: var(--sapList_SelectionBorderColor);--_ui5-v1-24-2_wheelslider_item_expanded_border_color: transparent;--_ui5-v1-24-2_wheelslider_item_hovered_border_color: transparent;--_ui5-v1-24-2_wheelslider_collapsed_item_text_color: var(--sapList_SelectionBorderColor);--_ui5-v1-24-2_wheelslider_selected_item_background_color: var(--sapContent_Selected_Background);--_ui5-v1-24-2_wheelslider_selected_item_hover_background_color: var(--sapButton_Emphasized_Hover_BorderColor);--_ui5-v1-24-2_wheelslider_active_item_background_color:var(--sapContent_Selected_Background);--_ui5-v1-24-2_wheelslider_active_item_text_color: var(--sapContent_Selected_TextColor);--_ui5-v1-24-2_wheelslider_selection_frame_color: var(--sapList_SelectionBorderColor);--_ui_wheelslider_item_border_radius: var(--_ui5-v1-24-2_button_border_radius);--_ui5-v1-24-2_toggle_button_pressed_focussed: var(--sapButton_Selected_BorderColor);--_ui5-v1-24-2_toggle_button_pressed_focussed_hovered: var(--sapButton_Selected_BorderColor);--_ui5-v1-24-2_toggle_button_selected_positive_text_color: var(--sapButton_Selected_TextColor);--_ui5-v1-24-2_toggle_button_selected_negative_text_color: var(--sapButton_Selected_TextColor);--_ui5-v1-24-2_toggle_button_selected_attention_text_color: var(--sapButton_Selected_TextColor);--_ui5-v1-24-2_toggle_button_emphasized_pressed_focussed_hovered: var(--sapContent_FocusColor);--_ui5-v1-24-2_toggle_button_emphasized_text_shadow: none;--_ui5-v1-24-2_yearpicker_item_selected_focus: var(--sapContent_Selected_Background);--_ui5-v1-24-2_yearpicker_item_border: none;--_ui5-v1-24-2_yearpicker_item_margin: 1px;--_ui5-v1-24-2_yearpicker_item_border_radius: .5rem;--_ui5-v1-24-2_yearpicker_item_focus_after_offset: .25rem;--_ui5-v1-24-2_yearpicker_item_focus_after_border: var(--_ui5-v1-24-2_button_focused_border);--_ui5-v1-24-2_yearpicker_item_focus_after_border_radius: .5rem;--_ui5-v1-24-2_yearpicker_item_focus_after_width: calc(100% - .5rem) ;--_ui5-v1-24-2_yearpicker_item_focus_after_height: calc(100% - .5rem) ;--_ui5-v1-24-2_yearpicker_item_selected_background_color: transparent;--_ui5-v1-24-2_yearpicker_item_selected_text_color: var(--sapContent_Selected_TextColor);--_ui5-v1-24-2_yearpicker_item_selected_box_shadow: none;--_ui5-v1-24-2_yearpicker_item_selected_hover_color: var(--sapList_Hover_Background);--_ui5-v1-24-2_yearpicker_item_focus_after_outline: none;--_ui5-v1-24-2_calendar_header_middle_button_width: 6.25rem;--_ui5-v1-24-2_calendar_header_middle_button_flex: 1 1 auto;--_ui5-v1-24-2_calendar_header_middle_button_focus_after_display: block;--_ui5-v1-24-2_calendar_header_middle_button_focus_after_width: calc(100% - .375rem) ;--_ui5-v1-24-2_calendar_header_middle_button_focus_after_height: calc(100% - .375rem) ;--_ui5-v1-24-2_calendar_header_middle_button_focus_after_top_offset: .125rem;--_ui5-v1-24-2_calendar_header_middle_button_focus_after_left_offset: .125rem;--_ui5-v1-24-2_calendar_header_arrow_button_border: none;--_ui5-v1-24-2_calendar_header_arrow_button_border_radius: .5rem;--_ui5-v1-24-2_calendar_header_button_background_color: var(--sapButton_Lite_Background);--_ui5-v1-24-2_calendar_header_arrow_button_box_shadow: 0 0 .125rem 0 rgb(85 107 130 / 72%);--_ui5-v1-24-2_calendar_header_middle_button_focus_border_radius: .5rem;--_ui5-v1-24-2_calendar_header_middle_button_focus_border: none;--_ui5-v1-24-2_calendar_header_middle_button_focus_after_border: none;--_ui5-v1-24-2_calendar_header_middle_button_focus_background: transparent;--_ui5-v1-24-2_calendar_header_middle_button_focus_outline: .125rem solid var(--sapSelectedColor);--_ui5-v1-24-2_calendar_header_middle_button_focus_active_outline: .0625rem solid var(--sapSelectedColor);--_ui5-v1-24-2_calendar_header_middle_button_focus_active_background: transparent;--_ui5-v1-24-2_token_background: var(--sapButton_TokenBackground);--_ui5-v1-24-2_token_readonly_background: var(--sapButton_TokenBackground);--_ui5-v1-24-2_token_readonly_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_token_right_margin: .3125rem;--_ui5-v1-24-2_token_padding: .25rem 0;--_ui5-v1-24-2_token_left_padding: .3125rem;--_ui5-v1-24-2_token_focused_selected_border: 1px solid var(--sapButton_Selected_BorderColor);--_ui5-v1-24-2_token_focus_offset: -.25rem;--_ui5-v1-24-2_token_focus_outline_width: .0625rem;--_ui5-v1-24-2_token_hover_border_color: var(--sapButton_TokenBorderColor);--_ui5-v1-24-2_token_selected_focus_outline: none;--_ui5-v1-24-2_token_focus_outline: none;--_ui5-v1-24-2_token_outline_offset: .125rem;--_ui5-v1-24-2_token_selected_hover_border_color: var(--sapButton_Selected_BorderColor);--ui5-v1-24-2_token_focus_pseudo_element_content: "";--_ui5-v1-24-2_token_border_radius: .375rem;--_ui5-v1-24-2_token_focus_outline_border_radius: .5rem;--_ui5-v1-24-2_token_text_color: var(--sapTextColor);--_ui5-v1-24-2_token_selected_text_font_family: var(--sapFontSemiboldDuplexFamily);--_ui5-v1-24-2_token_selected_internal_border_bottom: .125rem solid var(--sapButton_Selected_BorderColor);--_ui5-v1-24-2_token_selected_internal_border_bottom_radius: .1875rem;--_ui5-v1-24-2_token_text_icon_top: .0625rem;--_ui5-v1-24-2_token_selected_focused_offset_bottom: -.375rem;--_ui5-v1-24-2_token_readonly_padding: .25rem .3125rem;--_ui5-v1-24-2_tokenizer-popover_offset: .3125rem;--_ui5-v1-24-2_tokenizer_n_more_text_color: var(--sapLinkColor);--_ui5-v1-24-2-multi_combobox_token_margin_top: 1px;--_ui5-v1-24-2_slider_progress_container_dot_background: var(--sapField_BorderColor);--_ui5-v1-24-2_slider_progress_border: none;--_ui5-v1-24-2_slider_padding: 1.406rem 1.0625rem;--_ui5-v1-24-2_slider_inner_height: .25rem;--_ui5-v1-24-2_slider_outer_height: 1.6875rem;--_ui5-v1-24-2_slider_progress_border_radius: .25rem;--_ui5-v1-24-2_slider_tickmark_bg: var(--sapField_BorderColor);--_ui5-v1-24-2_slider_handle_margin_left: calc(-1 * (var(--_ui5-v1-24-2_slider_handle_width) / 2));--_ui5-v1-24-2_slider_handle_outline_offset: .075rem;--_ui5-v1-24-2_slider_progress_outline: .0625rem dotted var(--sapContent_FocusColor);--_ui5-v1-24-2_slider_progress_outline_offset: -.8125rem;--_ui5-v1-24-2_slider_disabled_opacity: .4;--_ui5-v1-24-2_slider_tooltip_border_color: var(--sapField_BorderColor);--_ui5-v1-24-2_range_slider_handle_background_focus: transparent;--_ui5-v1-24-2_slider_progress_box_sizing: content-box;--_ui5-v1-24-2_range_slider_focus_outline_width: 100%;--_ui5-v1-24-2_slider_progress_outline_offset_left: 0;--_ui5-v1-24-2_range_slider_focus_outline_radius: 0;--_ui5-v1-24-2_slider_progress_container_top: 0;--_ui5-v1-24-2_slider_progress_height: 100%;--_ui5-v1-24-2_slider_active_progress_border: none;--_ui5-v1-24-2_slider_active_progress_left: 0;--_ui5-v1-24-2_slider_active_progress_top: 0;--_ui5-v1-24-2_slider_no_tickmarks_progress_container_top: var(--_ui5-v1-24-2_slider_progress_container_top);--_ui5-v1-24-2_slider_no_tickmarks_progress_height: var(--_ui5-v1-24-2_slider_progress_height);--_ui5-v1-24-2_slider_no_tickmarks_active_progress_border: var(--_ui5-v1-24-2_slider_active_progress_border);--_ui5-v1-24-2_slider_no_tickmarks_active_progress_left: var(--_ui5-v1-24-2_slider_active_progress_left);--_ui5-v1-24-2_slider_no_tickmarks_active_progress_top: var(--_ui5-v1-24-2_slider_active_progress_top);--_ui5-v1-24-2_slider_handle_focus_visibility: none;--_ui5-v1-24-2_slider_handle_icon_size: 1rem;--_ui5-v1-24-2_slider_progress_container_background: var(--sapSlider_Background);--_ui5-v1-24-2_slider_progress_container_dot_display: block;--_ui5-v1-24-2_slider_inner_min_width: 4rem;--_ui5-v1-24-2_slider_progress_background: var(--sapSlider_Selected_Background);--_ui5-v1-24-2_slider_progress_before_background: var(--sapSlider_Selected_Background);--_ui5-v1-24-2_slider_progress_after_background: var(--sapContent_MeasureIndicatorColor);--_ui5-v1-24-2_slider_handle_background: var(--sapSlider_HandleBackground);--_ui5-v1-24-2_slider_handle_icon_display: inline-block;--_ui5-v1-24-2_slider_handle_border: .0625rem solid var(--sapSlider_HandleBorderColor);--_ui5-v1-24-2_slider_handle_border_radius: .5rem;--_ui5-v1-24-2_slider_handle_height: 1.5rem;--_ui5-v1-24-2_slider_handle_width: 2rem;--_ui5-v1-24-2_slider_handle_top: -.625rem;--_ui5-v1-24-2_slider_handle_font_family: "SAP-icons";--_ui5-v1-24-2_slider_handle_hover_border: .0625rem solid var(--sapSlider_Hover_HandleBorderColor);--_ui5-v1-24-2_slider_handle_focus_border: .125rem solid var(--sapContent_FocusColor);--_ui5-v1-24-2_slider_handle_background_focus: var(--sapSlider_Active_RangeHandleBackground);--_ui5-v1-24-2_slider_handle_outline: none;--_ui5-v1-24-2_slider_handle_hover_background: var(--sapSlider_Hover_HandleBackground);--_ui5-v1-24-2_slider_tooltip_background: var(--sapField_Focus_Background);--_ui5-v1-24-2_slider_tooltip_border: none;--_ui5-v1-24-2_slider_tooltip_border_radius: .5rem;--_ui5-v1-24-2_slider_tooltip_box_shadow: var(--sapContent_Shadow1);--_ui5-v1-24-2_range_slider_legacy_progress_focus_display: none;--_ui5-v1-24-2_range_slider_progress_focus_display: block;--_ui5-v1-24-2_slider_tickmark_in_range_bg: var(--sapSlider_Selected_BorderColor);--_ui5-v1-24-2_slider_label_fontsize: var(--sapFontSmallSize);--_ui5-v1-24-2_slider_label_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_slider_tooltip_min_width: 2rem;--_ui5-v1-24-2_slider_tooltip_padding: .25rem;--_ui5-v1-24-2_slider_tooltip_fontsize: var(--sapFontSmallSize);--_ui5-v1-24-2_slider_tooltip_color: var(--sapContent_LabelColor);--_ui5-v1-24-2_slider_tooltip_height: 1.375rem;--_ui5-v1-24-2_slider_handle_focus_width: 1px;--_ui5-v1-24-2_slider_start_end_point_size: .5rem;--_ui5-v1-24-2_slider_start_end_point_left: -.75rem;--_ui5-v1-24-2_slider_start_end_point_top: -.125rem;--_ui5-v1-24-2_slider_handle_focused_tooltip_distance: calc(var(--_ui5-v1-24-2_slider_tooltip_bottom) - var(--_ui5-v1-24-2_slider_handle_focus_width));--_ui5-v1-24-2_slider_tooltip_border_box: border-box;--_ui5-v1-24-2_range_slider_handle_active_background: var(--sapSlider_Active_RangeHandleBackground);--_ui5-v1-24-2_range_slider_active_handle_icon_display: none;--_ui5-v1-24-2_range_slider_progress_focus_top: -15px;--_ui5-v1-24-2_range_slider_progress_focus_left: calc(-1 * (var(--_ui5-v1-24-2_slider_handle_width) / 2) - 5px);--_ui5-v1-24-2_range_slider_progress_focus_padding: 0 1rem 0 1rem;--_ui5-v1-24-2_range_slider_progress_focus_width: calc(100% + var(--_ui5-v1-24-2_slider_handle_width) + 10px);--_ui5-v1-24-2_range_slider_progress_focus_height: calc(var(--_ui5-v1-24-2_slider_handle_height) + 10px);--_ui5-v1-24-2_range_slider_root_hover_handle_icon_display: inline-block;--_ui5-v1-24-2_range_slider_root_hover_handle_bg: var(--_ui5-v1-24-2_slider_handle_hover_background);--_ui5-v1-24-2_range_slider_root_active_handle_icon_display: none;--_ui5-v1-24-2_slider_tickmark_height: .5rem;--_ui5-v1-24-2_slider_tickmark_top: -2px;--_ui5-v1-24-2_slider_handle_box_sizing: border-box;--_ui5-v1-24-2_range_slider_handle_background: var(--sapSlider_RangeHandleBackground);--_ui5-v1-24-2_slider_tooltip_bottom: 2rem;--_ui5-v1-24-2_value_state_message_border: none;--_ui5-v1-24-2_value_state_header_border: none;--_ui5-v1-24-2_input_value_state_icon_offset: .5rem;--_ui5-v1-24-2_value_state_header_box_shadow_error: inset 0 -.0625rem var(--sapField_InvalidColor);--_ui5-v1-24-2_value_state_header_box_shadow_information: inset 0 -.0625rem var(--sapField_InformationColor);--_ui5-v1-24-2_value_state_header_box_shadow_success: inset 0 -.0625rem var(--sapField_SuccessColor);--_ui5-v1-24-2_value_state_header_box_shadow_warning: inset 0 -.0625rem var(--sapField_WarningColor);--_ui5-v1-24-2_value_state_message_icon_offset_phone: 1rem;--_ui5-v1-24-2_value_state_header_border_bottom: none;--_ui5-v1-24-2_input_value_state_icon_display: inline-block;--_ui5-v1-24-2_value_state_message_padding: .5rem .5rem .5rem 1.875rem;--_ui5-v1-24-2_value_state_header_padding: .5rem .5rem .5rem 1.875rem;--_ui5-v1-24-2_value_state_message_popover_box_shadow: var(--sapContent_Shadow1);--_ui5-v1-24-2_value_state_message_icon_width: 1rem;--_ui5-v1-24-2_value_state_message_icon_height: 1rem;--_ui5-v1-24-2_value_state_header_offset: -.25rem;--_ui5-v1-24-2_value_state_message_popover_border_radius: var(--sapPopover_BorderCornerRadius);--_ui5-v1-24-2_value_state_message_padding_phone: .5rem .5rem .5rem 2.375rem;--_ui5-v1-24-2_value_state_message_line_height: 1.125rem;--ui5-v1-24-2_table_bottom_border: 1px solid var(--sapList_BorderColor);--ui5-v1-24-2_table_multiselect_column_width: 2.75rem;--ui5-v1-24-2_table_header_row_border_width: 1px;--_ui5-v1-24-2_table_load_more_border-bottom: none;--ui5-v1-24-2_table_header_row_outline_width: var(--sapContent_FocusWidth);--ui5-v1-24-2_table_header_row_font_family: var(--sapFontSemiboldDuplexFamily);--ui5-v1-24-2_table_header_row_border_bottom_color: var(--sapList_HeaderBorderColor);--ui5-v1-24-2_table_header_row_font_weight: bold;--ui5-v1-24-2_table_multiselect_popin_row_padding: 3.25rem;--ui5-v1-24-2_table_row_outline_width: var(--sapContent_FocusWidth);--ui5-v1-24-2_table_group_row_font-weight: bold;--ui5-v1-24-2_table_border_width: 1px 0 1px 0;--_ui5-v1-24-2-toolbar-padding-left: .5rem;--_ui5-v1-24-2-toolbar-padding-right: .5rem;--_ui5-v1-24-2-toolbar-item-margin-left: 0;--_ui5-v1-24-2-toolbar-item-margin-right: .25rem;--_ui5-v1-24-2_step_input_min_width: 7.25rem;--_ui5-v1-24-2_step_input_padding: 2.5rem;--_ui5-v1-24-2_step_input_input_error_background_color: inherit;--_ui5-v1-24-2-step_input_button_state_hover_background_color: var(--sapField_Hover_Background);--_ui5-v1-24-2_step_input_border_style: none;--_ui5-v1-24-2_step_input_border_style_hover: none;--_ui5-v1-24-2_step_input_button_background_color: transparent;--_ui5-v1-24-2_step_input_input_border: none;--_ui5-v1-24-2_step_input_input_margin_top: 0;--_ui5-v1-24-2_step_input_button_display: inline-flex;--_ui5-v1-24-2_step_input_button_left: 0;--_ui5-v1-24-2_step_input_button_right: 0;--_ui5-v1-24-2_step_input_input_border_focused_after: .125rem solid #0070f2;--_ui5-v1-24-2_step_input_input_border_top_bottom_focused_after: 0;--_ui5-v1-24-2_step_input_input_border_radius_focused_after: .25rem;--_ui5-v1-24-2_step_input_input_information_border_color_focused_after: var(--sapField_InformationColor);--_ui5-v1-24-2_step_input_input_warning_border_color_focused_after: var(--sapField_WarningColor);--_ui5-v1-24-2_step_input_input_success_border_color_focused_after: var(--sapField_SuccessColor);--_ui5-v1-24-2_step_input_input_error_border_color_focused_after: var(--sapField_InvalidColor);--_ui5-v1-24-2_step_input_disabled_button_background: none;--_ui5-v1-24-2_step_input_border_color_hover: none;--_ui5-v1-24-2_step_input_border_hover: none;--_ui5-v1-24-2_input_input_background_color: transparent;--_ui5-v1-24-2_load_more_padding: 0;--_ui5-v1-24-2_load_more_border: 1px top solid transparent;--_ui5-v1-24-2_load_more_border_radius: none;--_ui5-v1-24-2_load_more_outline_width: var(--sapContent_FocusWidth);--_ui5-v1-24-2_load_more_border-bottom: var(--sapList_BorderWidth) solid var(--sapList_BorderColor);--_ui5-v1-24-2_calendar_height: 24.5rem;--_ui5-v1-24-2_calendar_width: 20rem;--_ui5-v1-24-2_calendar_padding: 1rem;--_ui5-v1-24-2_calendar_left_right_padding: .5rem;--_ui5-v1-24-2_calendar_top_bottom_padding: 1rem;--_ui5-v1-24-2_calendar_header_height: 3rem;--_ui5-v1-24-2_calendar_header_arrow_button_width: 2.5rem;--_ui5-v1-24-2_calendar_header_padding: .25rem 0;--_ui5-v1-24-2_checkbox_root_side_padding: .6875rem;--_ui5-v1-24-2_checkbox_icon_size: 1rem;--_ui5-v1-24-2_checkbox_partially_icon_size: .75rem;--_ui5-v1-24-2_custom_list_item_rb_min_width: 2.75rem;--_ui5-v1-24-2_day_picker_item_width: 2.25rem;--_ui5-v1-24-2_day_picker_item_height: 2.875rem;--_ui5-v1-24-2_day_picker_empty_height: 3rem;--_ui5-v1-24-2_day_picker_item_justify_content: space-between;--_ui5-v1-24-2_dp_two_calendar_item_now_text_padding_top: .375rem;--_ui5-v1-24-2_daypicker_item_now_selected_two_calendar_focus_special_day_top: 2rem;--_ui5-v1-24-2_daypicker_item_now_selected_two_calendar_focus_special_day_right: 1.4375rem;--_ui5-v1-24-2_dp_two_calendar_item_primary_text_height: 1.8125rem;--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_height: 1rem;--_ui5-v1-24-2_dp_two_calendar_item_text_padding_top: .4375rem;--_ui5-v1-24-2_daypicker_item_now_selected_two_calendar_focus_secondary_text_padding_block: 0 .5rem;--_ui5-v1-24-2_color-palette-swatch-container-padding: .3125rem .6875rem;--_ui5-v1-24-2_datetime_picker_width: 40.0625rem;--_ui5-v1-24-2_datetime_picker_height: 25rem;--_ui5-v1-24-2_datetime_timeview_width: 17rem;--_ui5-v1-24-2_datetime_timeview_phonemode_width: 19.5rem;--_ui5-v1-24-2_datetime_timeview_padding: 1rem;--_ui5-v1-24-2_datetime_timeview_phonemode_clocks_width: 24.5rem;--_ui5-v1-24-2_datetime_dateview_phonemode_margin_bottom: 0;--_ui5-v1-24-2_dialog_content_min_height: 2.75rem;--_ui5-v1-24-2_dialog_footer_height: 2.75rem;--_ui5-v1-24-2_input_inner_padding: 0 .625rem;--_ui5-v1-24-2_input_inner_padding_with_icon: 0 .25rem 0 .625rem;--_ui5-v1-24-2_input_inner_space_to_tokenizer: .125rem;--_ui5-v1-24-2_input_inner_space_to_n_more_text: .1875rem;--_ui5-v1-24-2_list_no_data_height: 3rem;--_ui5-v1-24-2_list_item_cb_margin_right: 0;--_ui5-v1-24-2_list_item_title_size: var(--sapFontLargeSize);--_ui5-v1-24-2_list_no_data_font_size: var(--sapFontLargeSize);--_ui5-v1-24-2_list_item_img_size: 3rem;--_ui5-v1-24-2_list_item_img_top_margin: .5rem;--_ui5-v1-24-2_list_item_img_bottom_margin: .5rem;--_ui5-v1-24-2_list_item_img_hn_margin: .75rem;--_ui5-v1-24-2_list_item_dropdown_base_height: 2.5rem;--_ui5-v1-24-2_list_item_base_height: var(--sapElement_LineHeight);--_ui5-v1-24-2_list_item_icon_size: 1.125rem;--_ui5-v1-24-2_list_item_icon_padding-inline-end: .5rem;--_ui5-v1-24-2_list_item_selection_btn_margin_top: calc(-1 * var(--_ui5-v1-24-2_checkbox_wrapper_padding));--_ui5-v1-24-2_list_item_content_vertical_offset: calc((var(--_ui5-v1-24-2_list_item_base_height) - var(--_ui5-v1-24-2_list_item_title_size)) / 2);--_ui5-v1-24-2_group_header_list_item_height: 2.75rem;--_ui5-v1-24-2_list_busy_row_height: 3rem;--_ui5-v1-24-2_month_picker_item_height: 3rem;--_ui5-v1-24-2_list_buttons_left_space: .125rem;--_ui5-v1-24-2_popup_default_header_height: 2.75rem;--_ui5-v1-24-2-notification-overflow-popover-padding: .25rem .5rem;--_ui5-v1-24-2_year_picker_item_height: 3rem;--_ui5-v1-24-2_tokenizer_padding: .25rem;--_ui5-v1-24-2_token_height: 1.625rem;--_ui5-v1-24-2_token_icon_size: .75rem;--_ui5-v1-24-2_token_icon_padding: .25rem .5rem;--_ui5-v1-24-2_token_wrapper_right_padding: .3125rem;--_ui5-v1-24-2_token_wrapper_left_padding: 0;--_ui5-v1-24-2_tl_bubble_padding: 1rem;--_ui5-v1-24-2_tl_indicator_before_bottom: -1.625rem;--_ui5-v1-24-2_tl_padding: 1rem 1rem 1rem .5rem;--_ui5-v1-24-2_tl_li_margin_bottom: 1.625rem;--_ui5-v1-24-2_switch_focus_width_size_horizon_exp: calc(100% + 4px) ;--_ui5-v1-24-2_switch_focus_height_size_horizon_exp: calc(100% + 4px) ;--_ui5-v1-24-2_tc_item_text: 3rem;--_ui5-v1-24-2_tc_item_height: 4.75rem;--_ui5-v1-24-2_tc_item_text_only_height: 2.75rem;--_ui5-v1-24-2_tc_item_text_only_with_additional_text_height: 3.75rem;--_ui5-v1-24-2_tc_item_text_line_height: 1.325rem;--_ui5-v1-24-2_tc_item_icon_circle_size: 2.75rem;--_ui5-v1-24-2_tc_item_icon_size: 1.25rem;--_ui5-v1-24-2_tc_item_add_text_margin_top: .375rem;--_ui5-v1-24-2_textarea_margin: .25rem 0;--_ui5-v1-24-2_radio_button_height: 2.75rem;--_ui5-v1-24-2_radio_button_label_side_padding: .875rem;--_ui5-v1-24-2_radio_button_inner_size: 2.75rem;--_ui5-v1-24-2_radio_button_svg_size: 1.375rem;--_ui5-v1-24-2-responsive_popover_header_height: 2.75rem;--ui5-v1-24-2_side_navigation_item_height: 2.75rem;--_ui5-v1-24-2_load_more_text_height: 2.75rem;--_ui5-v1-24-2_load_more_text_font_size: var(--sapFontMediumSize);--_ui5-v1-24-2_load_more_desc_padding: .375rem 2rem .875rem 2rem;--ui5-v1-24-2_table_header_row_height: 2.75rem;--ui5-v1-24-2_table_row_height: 2.75rem;--ui5-v1-24-2_table_focus_outline_offset: -.125rem;--ui5-v1-24-2_table_group_row_height: 2rem;--_ui5-v1-24-2-tree-indent-step: 1.5rem;--_ui5-v1-24-2-tree-toggle-box-width: 2.75rem;--_ui5-v1-24-2-tree-toggle-box-height: 2.25rem;--_ui5-v1-24-2-tree-toggle-icon-size: 1.0625rem;--_ui5-v1-24-2_timeline_tli_indicator_before_bottom: -1.625rem;--_ui5-v1-24-2_timeline_tli_indicator_before_right: -1.625rem;--_ui5-v1-24-2_timeline_tli_indicator_before_without_icon_bottom: -1.875rem;--_ui5-v1-24-2_timeline_tli_indicator_before_without_icon_right: -1.9375rem;--_ui5-v1-24-2-toolbar-separator-height: 2rem;--_ui5-v1-24-2-toolbar-height: 2.75rem;--_ui5-v1-24-2_toolbar_overflow_padding: .25rem .5rem;--_ui5-v1-24-2_split_button_middle_separator_top: .625rem;--_ui5-v1-24-2_split_button_middle_separator_height: 1rem;--_ui5-v1-24-2_color-palette-item-height: 1.75rem;--_ui5-v1-24-2_color-palette-item-hover-height: 2.25rem;--_ui5-v1-24-2_color-palette-item-margin: calc(((var(--_ui5-v1-24-2_color-palette-item-hover-height) - var(--_ui5-v1-24-2_color-palette-item-height)) / 2) + .0625rem);--_ui5-v1-24-2_color-palette-row-width: 12rem;--_ui5-v1-24-2_textarea_padding_top: .5rem;--_ui5-v1-24-2_textarea_padding_bottom: .4375rem;--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_padding_block: 0 .5rem;--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_padding: 0 .5rem;--_ui5-v1-24-2_daypicker_two_calendar_item_selected_focus_margin_bottom: 0;--_ui5-v1-24-2_daypicker_two_calendar_item_selected_focus_padding_right: .5rem}[data-ui5-compact-size],.ui5-content-density-compact,.sapUiSizeCompact{--_ui5-v1-24-2_input_min_width: 2rem;--_ui5-v1-24-2_input_icon_width: 2rem;--_ui5-v1-24-2_input_information_icon_padding: .3125rem .5rem .1875rem .5rem;--_ui5-v1-24-2_input_information_focused_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v1-24-2_input_error_warning_icon_padding: .3125rem .5rem .1875rem .5rem;--_ui5-v1-24-2_input_error_warning_focused_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v1-24-2_input_custom_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v1-24-2_input_error_warning_custom_icon_padding: .3125rem .5rem .1875rem .5rem;--_ui5-v1-24-2_input_error_warning_custom_focused_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v1-24-2_input_information_custom_icon_padding: .3125rem .5rem .1875rem .5rem;--_ui5-v1-24-2_input_information_custom_focused_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v1-24-2_input_icon_padding: .3125rem .5rem .25rem .5rem;--_ui5-v1-24-2_panel_header_button_wrapper_padding: .1875rem .25rem;--_ui5-v1-24-2_rating_indicator_item_height: .67em;--_ui5-v1-24-2_rating_indicator_item_width: .67em;--_ui5-v1-24-2_rating_indicator_component_spacing: .8125rem 0px;--_ui5-v1-24-2_rating_indicator_readonly_item_height: .5em;--_ui5-v1-24-2_rating_indicator_readonly_item_width: .5em;--_ui5-v1-24-2_rating_indicator_readonly_item_spacing: .125rem .125rem;--_ui5-v1-24-2_radio_button_min_width: 2rem;--_ui5-v1-24-2_radio_button_outer_ring_padding_with_label: 0 .5rem;--_ui5-v1-24-2_radio_button_outer_ring_padding: 0 .5rem;--_ui5-v1-24-2_radio_button_focus_dist: .1875rem;--_ui5-v1-24-2_switch_height: 2rem;--_ui5-v1-24-2_switch_width: 3rem;--_ui5-v1-24-2_switch_min_width: none;--_ui5-v1-24-2_switch_with_label_width: 3.75rem;--_ui5-v1-24-2_switch_root_outline_top: .25rem;--_ui5-v1-24-2_switch_root_outline_bottom: .25rem;--_ui5-v1-24-2_switch_transform: translateX(100%) translateX(-1.375rem);--_ui5-v1-24-2_switch_transform_with_label: translateX(100%) translateX(-1.875rem);--_ui5-v1-24-2_switch_rtl_transform: translateX(1.375rem) translateX(-100%);--_ui5-v1-24-2_switch_rtl_transform_with_label: translateX(1.875rem) translateX(-100%);--_ui5-v1-24-2_switch_track_width: 2rem;--_ui5-v1-24-2_switch_track_height: 1.25rem;--_ui5-v1-24-2_switch_track_with_label_width: 2.75rem;--_ui5-v1-24-2_switch_track_with_label_height: 1.25rem;--_ui5-v1-24-2_switch_handle_width: 1.25rem;--_ui5-v1-24-2_switch_handle_height: 1rem;--_ui5-v1-24-2_switch_handle_with_label_width: 1.75rem;--_ui5-v1-24-2_switch_handle_with_label_height: 1rem;--_ui5-v1-24-2_switch_text_font_size: var(--sapFontSize);--_ui5-v1-24-2_switch_text_width: 1rem;--_ui5-v1-24-2_switch_text_active_left: .1875rem;--_ui5-v1-24-2_textarea_padding_right_and_left_readonly: .4375rem;--_ui5-v1-24-2_textarea_padding_top_readonly: .125rem;--_ui5-v1-24-2_textarea_exceeded_text_height: .375rem;--_ui5-v1-24-2_textarea_min_height: 1.625rem;--_ui5-v1-24-2_textarea_padding_bottom_readonly: .0625rem;--_ui5-v1-24-2_textarea_padding_top_error_warning: .1875rem;--_ui5-v1-24-2_textarea_padding_bottom_error_warning: .125rem;--_ui5-v1-24-2_textarea_padding_top_information: .1875rem;--_ui5-v1-24-2_textarea_padding_bottom_information: .125rem;--_ui5-v1-24-2_textarea_padding_right_and_left: .5rem;--_ui5-v1-24-2_textarea_padding_right_and_left_error_warning: .5rem;--_ui5-v1-24-2_textarea_padding_right_and_left_information: .5rem;--_ui5-v1-24-2_token_selected_focused_offset_bottom: -.25rem;--_ui5-v1-24-2_tokenizer-popover_offset: .1875rem;--_ui5-v1-24-2_slider_handle_icon_size: .875rem;--_ui5-v1-24-2_slider_padding: 1rem 1.0625rem;--_ui5-v1-24-2_range_slider_progress_focus_width: calc(100% + var(--_ui5-v1-24-2_slider_handle_width) + 10px);--_ui5-v1-24-2_range_slider_progress_focus_height: calc(var(--_ui5-v1-24-2_slider_handle_height) + 10px);--_ui5-v1-24-2_range_slider_progress_focus_top: -.8125rem;--_ui5-v1-24-2_slider_tooltip_bottom: 1.75rem;--_ui5-v1-24-2_slider_handle_focused_tooltip_distance: calc(var(--_ui5-v1-24-2_slider_tooltip_bottom) - var(--_ui5-v1-24-2_slider_handle_focus_width));--_ui5-v1-24-2_range_slider_progress_focus_left: calc(-1 * (var(--_ui5-v1-24-2_slider_handle_width) / 2) - 5px);--_ui5-v1-24-2_button_base_height: var(--sapElement_Compact_Height);--_ui5-v1-24-2_button_base_padding: .4375rem;--_ui5-v1-24-2_button_base_min_width: 2rem;--_ui5-v1-24-2_button_icon_font_size: 1rem;--_ui5-v1-24-2_calendar_height: 18rem;--_ui5-v1-24-2_calendar_width: 17.75rem;--_ui5-v1-24-2_calendar_left_right_padding: .25rem;--_ui5-v1-24-2_calendar_top_bottom_padding: .5rem;--_ui5-v1-24-2_calendar_header_height: 2rem;--_ui5-v1-24-2_calendar_header_arrow_button_width: 2rem;--_ui5-v1-24-2_calendar_header_padding: 0;--_ui5-v1-24-2-calendar-legend-root-padding: .5rem;--_ui5-v1-24-2-calendar-legend-root-width: 16.75rem;--_ui5-v1-24-2-calendar-legend-item-box-margin: .125rem .5rem .125rem .125rem;--_ui5-v1-24-2-calendar-legend-item-root-focus-margin: -.125rem;--_ui5-v1-24-2_checkbox_root_side_padding: var(--_ui5-v1-24-2_checkbox_wrapped_focus_padding);--_ui5-v1-24-2_checkbox_wrapped_content_margin_top: var(--_ui5-v1-24-2_checkbox_compact_wrapped_label_margin_top);--_ui5-v1-24-2_checkbox_wrapped_focus_left_top_bottom_position: var(--_ui5-v1-24-2_checkbox_compact_focus_position);--_ui5-v1-24-2_checkbox_width_height: var(--_ui5-v1-24-2_checkbox_compact_width_height);--_ui5-v1-24-2_checkbox_wrapper_padding: var(--_ui5-v1-24-2_checkbox_compact_wrapper_padding);--_ui5-v1-24-2_checkbox_inner_width_height: var(--_ui5-v1-24-2_checkbox_compact_inner_size);--_ui5-v1-24-2_checkbox_icon_size: .75rem;--_ui5-v1-24-2_checkbox_partially_icon_size: .5rem;--_ui5-v1-24-2_custom_list_item_rb_min_width: 2rem;--_ui5-v1-24-2_daypicker_weeknumbers_container_padding_top: 2rem;--_ui5-v1-24-2_day_picker_item_width: 2rem;--_ui5-v1-24-2_day_picker_item_height: 2rem;--_ui5-v1-24-2_day_picker_empty_height: 2.125rem;--_ui5-v1-24-2_day_picker_item_justify_content: flex-end;--_ui5-v1-24-2_dp_two_calendar_item_now_text_padding_top: .5rem;--_ui5-v1-24-2_dp_two_calendar_item_primary_text_height: 1rem;--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_height: .75rem;--_ui5-v1-24-2_dp_two_calendar_item_text_padding_top: .5rem;--_ui5-v1-24-2_daypicker_special_day_top: 1.625rem;--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_top: 1.25rem;--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_right: 1.25rem;--_ui5-v1-24-2_daypicker_two_calendar_item_margin_bottom: 0;--_ui5-v1-24-2_daypicker_item_now_selected_two_calendar_focus_special_day_top: 1.125rem;--_ui5-v1-24-2_daypicker_item_now_selected_two_calendar_focus_special_day_right: 1.125rem;--_ui5-v1-24-2_daypicker_item_now_selected_two_calendar_focus_secondary_text_padding_block: 0 1rem;--_ui5-v1-24-2_datetime_picker_height: 20.5rem;--_ui5-v1-24-2_datetime_picker_width: 35.5rem;--_ui5-v1-24-2_datetime_timeview_width: 17rem;--_ui5-v1-24-2_datetime_timeview_phonemode_width: 18.5rem;--_ui5-v1-24-2_datetime_timeview_padding: .5rem;--_ui5-v1-24-2_datetime_timeview_phonemode_clocks_width: 21.125rem;--_ui5-v1-24-2_datetime_dateview_phonemode_margin_bottom: 3.125rem;--_ui5-v1-24-2_dialog_content_min_height: 2.5rem;--_ui5-v1-24-2_dialog_footer_height: 2.5rem;--_ui5-v1-24-2_input_height: var(--sapElement_Compact_Height);--_ui5-v1-24-2_input_inner_padding: 0 .5rem;--_ui5-v1-24-2_input_inner_padding_with_icon: 0 .2rem 0 .5rem;--_ui5-v1-24-2_input_inner_space_to_tokenizer: .125rem;--_ui5-v1-24-2_input_inner_space_to_n_more_text: .125rem;--_ui5-v1-24-2_input_icon_min_width: var(--_ui5-v1-24-2_input_compact_min_width);--_ui5-v1-24-2_menu_item_padding: 0 .75rem 0 .5rem;--_ui5-v1-24-2_menu_item_submenu_icon_right: .75rem;--_ui5-v1-24-2-notification-overflow-popover-padding: .25rem .5rem;--_ui5-v1-24-2_popup_default_header_height: 2.5rem;--_ui5-v1-24-2_textarea_margin: .1875rem 0;--_ui5-v1-24-2_list_no_data_height: 2rem;--_ui5-v1-24-2_list_item_cb_margin_right: .5rem;--_ui5-v1-24-2_list_item_title_size: var(--sapFontSize);--_ui5-v1-24-2_list_item_img_top_margin: .55rem;--_ui5-v1-24-2_list_no_data_font_size: var(--sapFontSize);--_ui5-v1-24-2_list_item_dropdown_base_height: 2rem;--_ui5-v1-24-2_list_item_base_height: 2rem;--_ui5-v1-24-2_list_item_icon_size: 1rem;--_ui5-v1-24-2_list_item_selection_btn_margin_top: calc(-1 * var(--_ui5-v1-24-2_checkbox_wrapper_padding));--_ui5-v1-24-2_list_item_content_vertical_offset: calc((var(--_ui5-v1-24-2_list_item_base_height) - var(--_ui5-v1-24-2_list_item_title_size)) / 2);--_ui5-v1-24-2_list_busy_row_height: 2rem;--_ui5-v1-24-2_list_buttons_left_space: .125rem;--_ui5-v1-24-2_month_picker_item_height: 2rem;--_ui5-v1-24-2_year_picker_item_height: 2rem;--_ui5-v1-24-2_panel_header_height: 2rem;--_ui5-v1-24-2_panel_button_root_height: 2rem;--_ui5-v1-24-2_panel_button_root_width: 2.5rem;--_ui5-v1-24-2_token_height: 1.25rem;--_ui5-v1-24-2_token_right_margin: .25rem;--_ui5-v1-24-2_token_left_padding: .25rem;--_ui5-v1-24-2_token_readonly_padding: .125rem .25rem;--_ui5-v1-24-2_token_focus_offset: -.125rem;--_ui5-v1-24-2_token_icon_size: .75rem;--_ui5-v1-24-2_token_icon_padding: .125rem .25rem;--_ui5-v1-24-2_token_wrapper_right_padding: .25rem;--_ui5-v1-24-2_token_wrapper_left_padding: 0;--_ui5-v1-24-2_token_outline_offset: -.125rem;--_ui5-v1-24-2_tl_bubble_padding: .5rem;--_ui5-v1-24-2_tl_indicator_before_bottom: -.5rem;--_ui5-v1-24-2_tl_padding: .5rem;--_ui5-v1-24-2_tl_li_margin_bottom: .5rem;--_ui5-v1-24-2_wheelslider_item_width: 64px;--_ui5-v1-24-2_wheelslider_item_height: 32px;--_ui5-v1-24-2_wheelslider_height: 224px;--_ui5-v1-24-2_wheelslider_selection_frame_margin_top: calc(var(--_ui5-v1-24-2_wheelslider_item_height) * 2);--_ui5-v1-24-2_wheelslider_arrows_visibility: visible;--_ui5-v1-24-2_wheelslider_mobile_selection_frame_margin_top: 128px;--_ui5-v1-24-2_tc_item_text: 2rem;--_ui5-v1-24-2_tc_item_text_line_height: 1.325rem;--_ui5-v1-24-2_tc_item_add_text_margin_top: .3125rem;--_ui5-v1-24-2_tc_item_height: 4rem;--_ui5-v1-24-2_tc_header_height: var(--_ui5-v1-24-2_tc_item_height);--_ui5-v1-24-2_tc_item_icon_circle_size: 2rem;--_ui5-v1-24-2_tc_item_icon_size: 1rem;--_ui5-v1-24-2_radio_button_height: 2rem;--_ui5-v1-24-2_radio_button_label_side_padding: .5rem;--_ui5-v1-24-2_radio_button_inner_size: 2rem;--_ui5-v1-24-2_radio_button_svg_size: 1rem;--_ui5-v1-24-2-responsive_popover_header_height: 2.5rem;--ui5-v1-24-2_side_navigation_item_height: 2rem;--_ui5-v1-24-2_slider_handle_height: 1.25rem;--_ui5-v1-24-2_slider_handle_width: 1.25rem;--_ui5-v1-24-2_slider_tooltip_padding: .25rem;--_ui5-v1-24-2_slider_progress_outline_offset: -.625rem;--_ui5-v1-24-2_slider_outer_height: 1.3125rem;--_ui5-v1-24-2_step_input_min_width: 6rem;--_ui5-v1-24-2_step_input_padding: 2rem;--_ui5-v1-24-2_load_more_text_height: 2.625rem;--_ui5-v1-24-2_load_more_text_font_size: var(--sapFontSize);--_ui5-v1-24-2_load_more_desc_padding: 0 2rem .875rem 2rem;--ui5-v1-24-2_table_header_row_height: 2rem;--ui5-v1-24-2_table_row_height: 2rem;--_ui5-v1-24-2-tree-indent-step: .5rem;--_ui5-v1-24-2-tree-toggle-box-width: 2rem;--_ui5-v1-24-2-tree-toggle-box-height: 1.5rem;--_ui5-v1-24-2-tree-toggle-icon-size: .8125rem;--_ui5-v1-24-2_timeline_tli_indicator_before_bottom: -.5rem;--_ui5-v1-24-2_timeline_tli_indicator_before_right: -.5rem;--_ui5-v1-24-2_timeline_tli_indicator_before_without_icon_bottom: -.75rem;--_ui5-v1-24-2_timeline_tli_indicator_before_without_icon_right: -.8125rem;--_ui5-v1-24-2_vsd_header_container: 2.5rem;--_ui5-v1-24-2_vsd_sub_header_container_height: 2rem;--_ui5-v1-24-2_vsd_header_height: 4rem;--_ui5-v1-24-2_vsd_expand_content_height: 25.4375rem;--_ui5-v1-24-2-toolbar-separator-height: 1.5rem;--_ui5-v1-24-2-toolbar-height: 2rem;--_ui5-v1-24-2_toolbar_overflow_padding: .1875rem .375rem;--_ui5-v1-24-2_textarea_padding_top: .1875rem;--_ui5-v1-24-2_textarea_padding_bottom: .125rem;--_ui5-v1-24-2_checkbox_focus_position: .25rem;--_ui5-v1-24-2_split_button_middle_separator_top: .3125rem;--_ui5-v1-24-2_split_button_middle_separator_height: 1rem;--_ui5-v1-24-2_slider_handle_top: -.5rem;--_ui5-v1-24-2_slider_tooltip_height: 1.375rem;--_ui5-v1-24-2_color-palette-item-height: 1.25rem;--_ui5-v1-24-2_color-palette-item-focus-height: 1rem;--_ui5-v1-24-2_color-palette-item-container-sides-padding: .1875rem;--_ui5-v1-24-2_color-palette-item-container-rows-padding: .8125rem;--_ui5-v1-24-2_color-palette-item-hover-height: 1.625rem;--_ui5-v1-24-2_color-palette-item-margin: calc(((var(--_ui5-v1-24-2_color-palette-item-hover-height) - var(--_ui5-v1-24-2_color-palette-item-height)) / 2) + .0625rem);--_ui5-v1-24-2_color-palette-row-width: 8.75rem;--_ui5-v1-24-2_color-palette-swatch-container-padding: .1875rem .5rem;--_ui5-v1-24-2_color-palette-item-hover-margin: .0625rem;--_ui5-v1-24-2_color-palette-row-height: 7.5rem;--_ui5-v1-24-2_color-palette-button-height: 2rem;--_ui5-v1-24-2_color-palette-item-before-focus-offset: -.25rem;--_ui5-v1-24-2_color-palette-item-after-focus-offset: -.125rem;--_ui5-v1-24-2_color_picker_slider_container_margin_top: -9px;--_ui5-v1-24-2_daypicker_selected_item_now_special_day_top: 1.5625rem;--_ui5-v1-24-2_daypicker_specialday_focused_top: 1.3125rem;--_ui5-v1-24-2_daypicker_selected_item_now_special_day_border_bottom_radius_alternate: .5rem;--_ui5-v1-24-2_daypicker_specialday_focused_border_bottom: .25rem;--_ui5-v1-24-2_daypicker_item_now_specialday_top: 1.4375rem;--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_padding_block: 0 .375rem;--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_padding: 0 .375rem;--_ui5-v1-24-2_daypicker_two_calendar_item_selected_focus_margin_bottom: -.25rem;--_ui5-v1-24-2_daypicker_two_calendar_item_selected_focus_padding_right: .4375rem}[dir=rtl]{--_ui5-v1-24-2_progress_indicator_bar_border_radius: .5rem;--_ui5-v1-24-2_icon_transform_scale: scale(-1, 1);--_ui5-v1-24-2_panel_toggle_btn_rotation: var(--_ui5-v1-24-2_rotation_minus_90deg);--_ui5-v1-24-2_li_notification_group_toggle_btn_rotation: var(--_ui5-v1-24-2_rotation_minus_90deg);--_ui5-v1-24-2_timeline_scroll_container_offset: -.5rem;--_ui5-v1-24-2_popover_upward_arrow_margin: .1875rem .125rem 0 0;--_ui5-v1-24-2_popover_right_arrow_margin: .1875rem .25rem 0 0;--_ui5-v1-24-2_popover_downward_arrow_margin: -.4375rem .125rem 0 0;--_ui5-v1-24-2_popover_left_arrow_margin: .1875rem -.375rem 0 0;--_ui5-v1-24-2_dialog_resize_cursor:sw-resize;--_ui5-v1-24-2_progress_indicator_bar_border_radius: 0 .5rem .5rem 0;--_ui5-v1-24-2_progress_indicator_remaining_bar_border_radius: .5rem 0 0 .5rem;--_ui5-v1-24-2_menu_submenu_margin_offset: 0 -.25rem;--_ui5-v1-24-2_menu_submenu_placement_type_left_margin_offset: 0 .25rem;--_ui5-v1-24-2-menu_item_icon_float: left;--_ui5-v1-24-2-shellbar-notification-btn-count-offset: auto;--_ui5-v1-24-2_segmented_btn_item_border_left: .0625rem;--_ui5-v1-24-2_segmented_btn_item_border_right: .0625rem}:root,[dir=ltr]{--_ui5-v1-24-2_rotation_90deg: rotate(90deg);--_ui5-v1-24-2_rotation_minus_90deg: rotate(-90deg);--_ui5-v1-24-2_icon_transform_scale: none;--_ui5-v1-24-2_panel_toggle_btn_rotation: var(--_ui5-v1-24-2_rotation_90deg);--_ui5-v1-24-2_li_notification_group_toggle_btn_rotation: var(--_ui5-v1-24-2_rotation_90deg);--_ui5-v1-24-2_timeline_scroll_container_offset: .5rem;--_ui5-v1-24-2_popover_upward_arrow_margin: .1875rem 0 0 .1875rem;--_ui5-v1-24-2_popover_right_arrow_margin: .1875rem 0 0 -.375rem;--_ui5-v1-24-2_popover_downward_arrow_margin: -.375rem 0 0 .125rem;--_ui5-v1-24-2_popover_left_arrow_margin: .125rem 0 0 .25rem;--_ui5-v1-24-2_dialog_resize_cursor: se-resize;--_ui5-v1-24-2_progress_indicator_bar_border_radius: .5rem 0 0 .5rem;--_ui5-v1-24-2_progress_indicator_remaining_bar_border_radius: 0 .5rem .5rem 0;--_ui5-v1-24-2_menu_submenu_margin_offset: -.25rem 0;--_ui5-v1-24-2_menu_submenu_placement_type_left_margin_offset: .25rem 0;--_ui5-v1-24-2-menu_item_icon_float: right;--_ui5-v1-24-2-shellbar-notification-btn-count-offset: -.125rem}
` };
var parameters_bundle_css_default2 = styleData2;

// node_modules/@ui5/webcomponents/dist/generated/themes/Icon.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData3 = { packageName: "@ui5/webcomponents", fileName: "themes/Icon.css.ts", content: `:host{-webkit-tap-highlight-color:rgba(0,0,0,0)}:host([hidden]){display:none}:host([invalid]){display:none}:host(:not([hidden]).ui5_hovered){opacity:.7}:host{display:inline-block;width:1rem;height:1rem;color:var(--sapContent_IconColor);fill:currentColor;outline:none}:host([design="Contrast"]){color:var(--sapContent_ContrastIconColor)}:host([design="Critical"]){color:var(--sapCriticalElementColor)}:host([design="Information"]){color:var(--sapInformativeElementColor)}:host([design="Negative"]){color:var(--sapNegativeElementColor)}:host([design="Neutral"]){color:var(--sapNeutralElementColor)}:host([design="NonInteractive"]){color:var(--sapContent_NonInteractiveIconColor)}:host([design="Positive"]){color:var(--sapPositiveElementColor)}:host([interactive][focused]) .ui5-icon-root{outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--ui5-v1-24-2-icon-focus-border-radius)}.ui5-icon-root{display:flex;height:100%;width:100%;outline:none;vertical-align:top}:host([interactive]){cursor:pointer}.ui5-icon-root:not([dir=ltr]){transform:var(--_ui5-v1-24-2_icon_transform_scale);transform-origin:center}
` };
var Icon_css_default = styleData3;

// node_modules/@ui5/webcomponents/dist/Icon.js
var __decorate2 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ICON_NOT_FOUND2 = "ICON_NOT_FOUND";
var PRESENTATION_ROLE = "presentation";
var Icon = class Icon2 extends UI5Element_default {
  _onFocusInHandler() {
    if (this.interactive) {
      this.focused = true;
    }
  }
  _onFocusOutHandler() {
    this.focused = false;
  }
  _onkeydown(e) {
    if (!this.interactive) {
      return;
    }
    if (isEnter(e)) {
      this.fireEvent("click");
    }
    if (isSpace(e)) {
      e.preventDefault();
    }
  }
  _onkeyup(e) {
    if (this.interactive && isSpace(e)) {
      this.fireEvent("click");
    }
  }
  /**
  * Enforce "ltr" direction, based on the icons collection metadata.
  */
  get _dir() {
    return this.ltr ? "ltr" : void 0;
  }
  get effectiveAriaHidden() {
    if (this.ariaHidden === "") {
      if (this.isDecorative) {
        return true;
      }
      return;
    }
    return this.ariaHidden;
  }
  get _tabIndex() {
    return this.interactive ? "0" : void 0;
  }
  get isDecorative() {
    return this.effectiveAccessibleRole === PRESENTATION_ROLE;
  }
  get effectiveAccessibleRole() {
    if (this.accessibleRole) {
      return this.accessibleRole;
    }
    if (this.interactive) {
      return "button";
    }
    return this.effectiveAccessibleName ? "img" : PRESENTATION_ROLE;
  }
  async onBeforeRendering() {
    const name21 = this.name;
    if (!name21) {
      return console.warn("Icon name property is required", this);
    }
    let iconData = getIconDataSync(name21);
    if (!iconData) {
      iconData = await getIconData(name21);
    }
    if (!iconData) {
      this.invalid = true;
      return console.warn(`Required icon is not registered. Invalid icon name: ${this.name}`);
    }
    if (iconData === ICON_NOT_FOUND2) {
      this.invalid = true;
      return console.warn(`Required icon is not registered. You can either import the icon as a module in order to use it e.g. "@ui5/webcomponents-icons/dist/${name21.replace("sap-icon://", "")}.js", or setup a JSON build step and import "@ui5/webcomponents-icons/dist/AllIcons.js".`);
    }
    this.viewBox = iconData.viewBox || "0 0 512 512";
    if (iconData.customTemplate) {
      iconData.pathData = [];
      this.customSvg = executeTemplate_default(iconData.customTemplate, this);
    }
    this.invalid = false;
    this.pathData = Array.isArray(iconData.pathData) ? iconData.pathData : [iconData.pathData];
    this.accData = iconData.accData;
    this.ltr = iconData.ltr;
    this.packageName = iconData.packageName;
    this._onfocusout = this.interactive ? this._onFocusOutHandler.bind(this) : void 0;
    this._onfocusin = this.interactive ? this._onFocusInHandler.bind(this) : void 0;
    if (this.accessibleName) {
      this.effectiveAccessibleName = this.accessibleName;
    } else if (this.accData) {
      const i18nBundle = await getI18nBundle(this.packageName);
      this.effectiveAccessibleName = i18nBundle.getText(this.accData) || void 0;
    } else {
      this.effectiveAccessibleName = void 0;
    }
  }
  get hasIconTooltip() {
    return this.showTooltip && this.effectiveAccessibleName;
  }
};
__decorate2([
  property_default({ type: IconDesign_default, defaultValue: IconDesign_default.Default })
], Icon.prototype, "design", void 0);
__decorate2([
  property_default({ type: Boolean })
], Icon.prototype, "interactive", void 0);
__decorate2([
  property_default()
], Icon.prototype, "name", void 0);
__decorate2([
  property_default()
], Icon.prototype, "accessibleName", void 0);
__decorate2([
  property_default({ type: Boolean })
], Icon.prototype, "showTooltip", void 0);
__decorate2([
  property_default()
], Icon.prototype, "accessibleRole", void 0);
__decorate2([
  property_default()
], Icon.prototype, "ariaHidden", void 0);
__decorate2([
  property_default({ multiple: true })
], Icon.prototype, "pathData", void 0);
__decorate2([
  property_default({ type: Object, defaultValue: void 0, noAttribute: true })
], Icon.prototype, "accData", void 0);
__decorate2([
  property_default({ type: Boolean })
], Icon.prototype, "focused", void 0);
__decorate2([
  property_default({ type: Boolean })
], Icon.prototype, "invalid", void 0);
__decorate2([
  property_default({ noAttribute: true, defaultValue: void 0 })
], Icon.prototype, "effectiveAccessibleName", void 0);
Icon = __decorate2([
  customElement_default({
    tag: "ui5-icon",
    languageAware: true,
    themeAware: true,
    renderer: LitRenderer_default,
    template: IconTemplate_lit_default,
    styles: Icon_css_default
  }),
  event_default("click")
], Icon);
Icon.define();
var Icon_default = Icon;

// node_modules/@ui5/webcomponents-base/dist/MarkedEvents.js
var markedEvents = /* @__PURE__ */ new WeakMap();
var markEvent = (event2, value) => {
  markedEvents.set(event2, value);
};

// node_modules/@ui5/webcomponents-base/dist/util/willShowContent.js
var willShowContent = (childNodes) => {
  return Array.from(childNodes).filter((node) => {
    return node.nodeType !== Node.COMMENT_NODE && (node.nodeType !== Node.TEXT_NODE || (node.nodeValue || "").trim().length !== 0);
  }).length > 0;
};
var willShowContent_default = willShowContent;

// node_modules/@ui5/webcomponents/dist/types/ButtonDesign.js
var ButtonDesign;
(function(ButtonDesign2) {
  ButtonDesign2["Default"] = "Default";
  ButtonDesign2["Positive"] = "Positive";
  ButtonDesign2["Negative"] = "Negative";
  ButtonDesign2["Transparent"] = "Transparent";
  ButtonDesign2["Emphasized"] = "Emphasized";
  ButtonDesign2["Attention"] = "Attention";
})(ButtonDesign || (ButtonDesign = {}));
var ButtonDesign_default = ButtonDesign;

// node_modules/@ui5/webcomponents/dist/types/ButtonType.js
var ButtonType;
(function(ButtonType2) {
  ButtonType2["Button"] = "Button";
  ButtonType2["Submit"] = "Submit";
  ButtonType2["Reset"] = "Reset";
})(ButtonType || (ButtonType = {}));
var ButtonType_default = ButtonType;

// node_modules/@ui5/webcomponents/dist/types/ButtonAccessibleRole.js
var ButtonAccessibleRole;
(function(ButtonAccessibleRole2) {
  ButtonAccessibleRole2["Button"] = "Button";
  ButtonAccessibleRole2["Link"] = "Link";
})(ButtonAccessibleRole || (ButtonAccessibleRole = {}));
var ButtonAccessibleRole_default = ButtonAccessibleRole;

// node_modules/@ui5/webcomponents/dist/generated/templates/ButtonTemplate.lit.js
function block02(context, tags, suffix) {
  return effectiveHtml`<button type="button" class="ui5-button-root" ?disabled="${this.disabled}" data-sap-focus-ref  @focusout=${this._onfocusout} @focusin=${this._onfocusin} @click=${this._onclick} @mousedown=${this._onmousedown} @mouseup=${this._onmouseup} @keydown=${this._onkeydown} @keyup=${this._onkeyup} @touchstart="${this._ontouchstart}" @touchend="${this._ontouchend}" tabindex=${ifDefined(this.tabIndexValue)} aria-expanded="${ifDefined(this.accessibilityAttributes.expanded)}" aria-controls="${ifDefined(this.accessibilityAttributes.controls)}" aria-haspopup="${ifDefined(this._hasPopup)}" aria-label="${ifDefined(this.ariaLabelText)}" title="${ifDefined(this.buttonTitle)}" part="button" role="${ifDefined(this.buttonAccessibleRole)}">${this.icon ? block12.call(this, context, tags, suffix) : void 0}<span id="${ifDefined(this._id)}-content" class="ui5-button-text"><bdi><slot></slot></bdi></span>${this.hasButtonType ? block22.call(this, context, tags, suffix) : void 0}</button> `;
}
function block12(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-icon", tags, suffix)} class="ui5-button-icon" name="${ifDefined(this.icon)}" accessible-role="${ifDefined(this.iconRole)}" part="icon" ?show-tooltip=${this.showIconTooltip}></${scopeTag("ui5-icon", tags, suffix)}>` : effectiveHtml`<ui5-icon class="ui5-button-icon" name="${ifDefined(this.icon)}" accessible-role="${ifDefined(this.iconRole)}" part="icon" ?show-tooltip=${this.showIconTooltip}></ui5-icon>`;
}
function block22(context, tags, suffix) {
  return effectiveHtml`<span class="ui5-hidden-text">${ifDefined(this.buttonTypeText)}</span>`;
}
var ButtonTemplate_lit_default = block02;

// node_modules/@ui5/webcomponents/dist/generated/themes/Button.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData4 = { packageName: "@ui5/webcomponents", fileName: "themes/Button.css.ts", content: `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host(:not([hidden])){display:inline-block}:host{min-width:var(--_ui5-v1-24-2_button_base_min_width);height:var(--_ui5-v1-24-2_button_base_height);line-height:normal;font-family:var(--_ui5-v1-24-2_button_fontFamily);font-size:var(--sapFontSize);text-shadow:var(--_ui5-v1-24-2_button_text_shadow);border-radius:var(--_ui5-v1-24-2_button_border_radius);cursor:pointer;background-color:var(--sapButton_Background);border:var(--sapButton_BorderWidth) solid var(--sapButton_BorderColor);color:var(--sapButton_TextColor);box-sizing:border-box;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ui5-button-root{min-width:inherit;cursor:inherit;height:100%;width:100%;box-sizing:border-box;display:flex;justify-content:center;align-items:center;outline:none;padding:0 var(--_ui5-v1-24-2_button_base_padding);position:relative;background:transparent;border:none;color:inherit;text-shadow:inherit;font:inherit;white-space:inherit;overflow:inherit;text-overflow:inherit;letter-spacing:inherit;word-spacing:inherit;line-height:inherit;-webkit-user-select:none;-moz-user-select:none;user-select:none}:host(:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host(:not([hidden]):not([disabled]).ui5_hovered){background:var(--sapButton_Hover_Background);border:1px solid var(--sapButton_Hover_BorderColor);color:var(--sapButton_Hover_TextColor)}.ui5-button-icon{color:inherit;flex-shrink:0}:host([icon-end]) .ui5-button-root{flex-direction:row-reverse}:host([icon-end]) .ui5-button-icon{margin-inline-start:var(--_ui5-v1-24-2_button_base_icon_margin)}:host([icon-only]) .ui5-button-root{min-width:auto;padding:0}:host([icon-only]) .ui5-button-text{display:none}.ui5-button-text{outline:none;position:relative;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([has-icon]:not([icon-end])) .ui5-button-text{margin-inline-start:var(--_ui5-v1-24-2_button_base_icon_margin)}:host([has-icon][icon-end]) .ui5-button-text{margin-inline-start:0}:host([disabled]){opacity:var(--sapContent_DisabledOpacity);pointer-events:unset;cursor:default}:host([has-icon]:not([icon-only])) .ui5-button-text{min-width:calc(var(--_ui5-v1-24-2_button_base_min_width) - var(--_ui5-v1-24-2_button_base_icon_margin) - 1rem)}:host([disabled]:active){pointer-events:none}:host([focused]:not([active])) .ui5-button-root:after,:host([focused][active][design="Emphasized"]) .ui5-button-root:after,:host([focused][active]) .ui5-button-root:before{content:"";position:absolute;box-sizing:border-box;inset:.0625rem;border:var(--_ui5-v1-24-2_button_focused_border);border-radius:var(--_ui5-v1-24-2_button_focused_border_radius)}:host([focused][active]) .ui5-button-root:before{border-color:var(--_ui5-v1-24-2_button_pressed_focused_border_color)}:host([design="Emphasized"][focused]) .ui5-button-root:after{border-color:var(--_ui5-v1-24-2_button_emphasized_focused_border_color)}:host([design="Emphasized"][focused]) .ui5-button-root:before{content:"";position:absolute;box-sizing:border-box;inset:.0625rem;border:var(--_ui5-v1-24-2_button_emphasized_focused_border_before);border-radius:var(--_ui5-v1-24-2_button_focused_border_radius)}.ui5-button-root::-moz-focus-inner{border:0}bdi{display:block;white-space:inherit;overflow:inherit;text-overflow:inherit}:host([ui5-button][active]:not([disabled]):not([non-interactive])){background-image:none;background-color:var(--sapButton_Active_Background);border-color:var(--sapButton_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([design="Positive"]){background-color:var(--sapButton_Accept_Background);border-color:var(--sapButton_Accept_BorderColor);color:var(--sapButton_Accept_TextColor)}:host([design="Positive"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Positive"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Accept_Hover_Background);border-color:var(--sapButton_Accept_Hover_BorderColor);color:var(--sapButton_Accept_Hover_TextColor)}:host([ui5-button][design="Positive"][active]:not([non-interactive])){background-color:var(--sapButton_Accept_Active_Background);border-color:var(--sapButton_Accept_Active_BorderColor);color:var(--sapButton_Accept_Active_TextColor)}:host([design="Negative"]){background-color:var(--sapButton_Reject_Background);border-color:var(--sapButton_Reject_BorderColor);color:var(--sapButton_Reject_TextColor)}:host([design="Negative"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Negative"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Reject_Hover_Background);border-color:var(--sapButton_Reject_Hover_BorderColor);color:var(--sapButton_Reject_Hover_TextColor)}:host([ui5-button][design="Negative"][active]:not([non-interactive])){background-color:var(--sapButton_Reject_Active_Background);border-color:var(--sapButton_Reject_Active_BorderColor);color:var(--sapButton_Reject_Active_TextColor)}:host([design="Attention"]){background-color:var(--sapButton_Attention_Background);border-color:var(--sapButton_Attention_BorderColor);color:var(--sapButton_Attention_TextColor)}:host([design="Attention"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Attention"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Attention_Hover_Background);border-color:var(--sapButton_Attention_Hover_BorderColor);color:var(--sapButton_Attention_Hover_TextColor)}:host([ui5-button][design="Attention"][active]:not([non-interactive])){background-color:var(--sapButton_Attention_Active_Background);border-color:var(--sapButton_Attention_Active_BorderColor);color:var(--sapButton_Attention_Active_TextColor)}:host([design="Emphasized"]){background-color:var(--sapButton_Emphasized_Background);border-color:var(--sapButton_Emphasized_BorderColor);border-width:var(--_ui5-v1-24-2_button_emphasized_border_width);color:var(--sapButton_Emphasized_TextColor);font-family:var(--sapFontBoldFamily )}:host([design="Emphasized"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Emphasized"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Emphasized_Hover_Background);border-color:var(--sapButton_Emphasized_Hover_BorderColor);border-width:var(--_ui5-v1-24-2_button_emphasized_border_width);color:var(--sapButton_Emphasized_Hover_TextColor)}:host([ui5-button][design="Empasized"][active]:not([non-interactive])){background-color:var(--sapButton_Emphasized_Active_Background);border-color:var(--sapButton_Emphasized_Active_BorderColor);color:var(--sapButton_Emphasized_Active_TextColor)}:host([design="Emphasized"][focused]) .ui5-button-root:after{border-color:var(--_ui5-v1-24-2_button_emphasized_focused_border_color);outline:none}:host([design="Emphasized"][focused][active]:not([non-interactive])) .ui5-button-root:after{border-color:var(--_ui5-v1-24-2_button_emphasized_focused_active_border_color)}:host([design="Transparent"]){background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor);border-color:var(--sapButton_Lite_BorderColor)}:host([design="Transparent"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]):hover),:host([design="Transparent"]:not([active]):not([non-interactive]):not([_is-touch]):not([disabled]).ui5_hovered){background-color:var(--sapButton_Lite_Hover_Background);border-color:var(--sapButton_Lite_Hover_BorderColor);color:var(--sapButton_Lite_Hover_TextColor)}:host([ui5-button][design="Transparent"][active]:not([non-interactive])){background-color:var(--sapButton_Lite_Active_Background);border-color:var(--sapButton_Lite_Active_BorderColor);color:var(--sapButton_Active_TextColor)}:host([ui5-segmented-button-item][active][focused]) .ui5-button-root:after,:host([pressed][focused]) .ui5-button-root:after{border-color:var(--_ui5-v1-24-2_button_pressed_focused_border_color);outline:none}:host([ui5-segmented-button-item][focused]:not(:last-child)) .ui5-button-root:after{border-top-right-radius:var(--_ui5-v1-24-2_button_focused_inner_border_radius);border-bottom-right-radius:var(--_ui5-v1-24-2_button_focused_inner_border_radius)}:host([ui5-segmented-button-item][focused]:not(:first-child)) .ui5-button-root:after{border-top-left-radius:var(--_ui5-v1-24-2_button_focused_inner_border_radius);border-bottom-left-radius:var(--_ui5-v1-24-2_button_focused_inner_border_radius)}
` };
var Button_css_default = styleData4;

// node_modules/@ui5/webcomponents/dist/Button.js
var __decorate3 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Button_1;
var isGlobalHandlerAttached = false;
var activeButton = null;
var Button = Button_1 = class Button2 extends UI5Element_default {
  constructor() {
    super();
    this._deactivate = () => {
      if (activeButton) {
        activeButton._setActiveState(false);
      }
    };
    if (!isGlobalHandlerAttached) {
      document.addEventListener("mouseup", this._deactivate);
      isGlobalHandlerAttached = true;
    }
    const handleTouchStartEvent = (e) => {
      markEvent(e, "button");
      if (this.nonInteractive) {
        return;
      }
      this._setActiveState(true);
    };
    this._ontouchstart = {
      handleEvent: handleTouchStartEvent,
      passive: true
    };
  }
  onEnterDOM() {
    this._isTouch = (isPhone() || isTablet()) && !isCombi();
  }
  async onBeforeRendering() {
    const formSupport = getFeature("FormSupport");
    if (this.type !== ButtonType_default.Button && !formSupport) {
      console.warn(`In order for the "type" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`);
    }
    if (this.submits && !formSupport) {
      console.warn(`In order for the "submits" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`);
    }
    this.iconOnly = this.isIconOnly;
    this.hasIcon = !!this.icon;
    this.buttonTitle = this.tooltip || await getIconAccessibleName(this.icon);
  }
  _onclick(e) {
    var _a3;
    if (this.nonInteractive) {
      return;
    }
    markEvent(e, "button");
    const formSupport = getFeature("FormSupport");
    if (formSupport && this._isSubmit) {
      formSupport.triggerFormSubmit(this);
    }
    if (formSupport && this._isReset) {
      formSupport.triggerFormReset(this);
    }
    if (isSafari()) {
      (_a3 = this.getDomRef()) == null ? void 0 : _a3.focus();
    }
  }
  _onmousedown(e) {
    if (this.nonInteractive || this._isTouch) {
      return;
    }
    markEvent(e, "button");
    this._setActiveState(true);
    activeButton = this;
  }
  _ontouchend(e) {
    if (this.disabled) {
      e.preventDefault();
      e.stopPropagation();
    }
    if (this.active) {
      this._setActiveState(false);
    }
    if (activeButton) {
      activeButton._setActiveState(false);
    }
  }
  _onmouseup(e) {
    markEvent(e, "button");
  }
  _onkeydown(e) {
    markEvent(e, "button");
    if (isSpace(e) || isEnter(e)) {
      this._setActiveState(true);
    }
  }
  _onkeyup(e) {
    if (isSpace(e) || isEnter(e)) {
      if (this.active) {
        this._setActiveState(false);
      }
    }
  }
  _onfocusout() {
    if (this.nonInteractive) {
      return;
    }
    if (this.active) {
      this._setActiveState(false);
    }
    if (isDesktop()) {
      this.focused = false;
    }
  }
  _onfocusin(e) {
    if (this.nonInteractive) {
      return;
    }
    markEvent(e, "button");
    if (isDesktop()) {
      this.focused = true;
    }
  }
  _setActiveState(active) {
    const eventPrevented = !this.fireEvent("_active-state-change", null, true);
    if (eventPrevented) {
      return;
    }
    this.active = active;
  }
  get _hasPopup() {
    var _a3;
    return (_a3 = this.accessibilityAttributes.hasPopup) == null ? void 0 : _a3.toLowerCase();
  }
  get hasButtonType() {
    return this.design !== ButtonDesign_default.Default && this.design !== ButtonDesign_default.Transparent;
  }
  get iconRole() {
    if (!this.icon) {
      return "";
    }
    return "presentation";
  }
  get isIconOnly() {
    return !willShowContent_default(this.text);
  }
  static typeTextMappings() {
    return {
      "Positive": BUTTON_ARIA_TYPE_ACCEPT,
      "Negative": BUTTON_ARIA_TYPE_REJECT,
      "Emphasized": BUTTON_ARIA_TYPE_EMPHASIZED
    };
  }
  get buttonTypeText() {
    return Button_1.i18nBundle.getText(Button_1.typeTextMappings()[this.design]);
  }
  get buttonAccessibleRole() {
    return this.accessibleRole.toLowerCase();
  }
  get tabIndexValue() {
    const tabindex = this.getAttribute("tabindex");
    if (tabindex) {
      return tabindex;
    }
    return this.nonInteractive ? "-1" : this.forcedTabIndex;
  }
  get showIconTooltip() {
    return this.iconOnly && !this.tooltip;
  }
  get ariaLabelText() {
    return getEffectiveAriaLabelText(this);
  }
  get _isSubmit() {
    return this.type === ButtonType_default.Submit || this.submits;
  }
  get _isReset() {
    return this.type === ButtonType_default.Reset;
  }
  static async onDefine() {
    Button_1.i18nBundle = await getI18nBundle("@ui5/webcomponents");
  }
};
__decorate3([
  property_default({ type: ButtonDesign_default, defaultValue: ButtonDesign_default.Default })
], Button.prototype, "design", void 0);
__decorate3([
  property_default({ type: Boolean })
], Button.prototype, "disabled", void 0);
__decorate3([
  property_default()
], Button.prototype, "icon", void 0);
__decorate3([
  property_default({ type: Boolean })
], Button.prototype, "iconEnd", void 0);
__decorate3([
  property_default({ type: Boolean })
], Button.prototype, "submits", void 0);
__decorate3([
  property_default()
], Button.prototype, "tooltip", void 0);
__decorate3([
  property_default({ defaultValue: void 0 })
], Button.prototype, "accessibleName", void 0);
__decorate3([
  property_default({ defaultValue: "" })
], Button.prototype, "accessibleNameRef", void 0);
__decorate3([
  property_default({ type: Object })
], Button.prototype, "accessibilityAttributes", void 0);
__decorate3([
  property_default({ type: ButtonType_default, defaultValue: ButtonType_default.Button })
], Button.prototype, "type", void 0);
__decorate3([
  property_default({ type: ButtonAccessibleRole_default, defaultValue: ButtonAccessibleRole_default.Button })
], Button.prototype, "accessibleRole", void 0);
__decorate3([
  property_default({ type: Boolean })
], Button.prototype, "active", void 0);
__decorate3([
  property_default({ type: Boolean })
], Button.prototype, "iconOnly", void 0);
__decorate3([
  property_default({ type: Boolean })
], Button.prototype, "focused", void 0);
__decorate3([
  property_default({ type: Boolean })
], Button.prototype, "hasIcon", void 0);
__decorate3([
  property_default({ type: Boolean })
], Button.prototype, "nonInteractive", void 0);
__decorate3([
  property_default({ noAttribute: true })
], Button.prototype, "buttonTitle", void 0);
__decorate3([
  property_default({ type: Object })
], Button.prototype, "_iconSettings", void 0);
__decorate3([
  property_default({ defaultValue: "0", noAttribute: true })
], Button.prototype, "forcedTabIndex", void 0);
__decorate3([
  property_default({ type: Boolean })
], Button.prototype, "_isTouch", void 0);
__decorate3([
  slot_default({ type: Node, "default": true })
], Button.prototype, "text", void 0);
Button = Button_1 = __decorate3([
  customElement_default({
    tag: "ui5-button",
    languageAware: true,
    renderer: LitRenderer_default,
    template: ButtonTemplate_lit_default,
    styles: Button_css_default,
    dependencies: [Icon_default]
  }),
  event_default("click"),
  event_default("_active-state-change")
], Button);
Button.define();
var Button_default = Button;

// node_modules/@ui5/webcomponents-base/dist/util/getActiveElement.js
var getActiveElement = () => {
  let element = document.activeElement;
  while (element && element.shadowRoot && element.shadowRoot.activeElement) {
    element = element.shadowRoot.activeElement;
  }
  return element;
};
var getActiveElement_default = getActiveElement;

// node_modules/@ui5/webcomponents-base/dist/util/PopupUtils.js
var popupUtilsData = getSharedResource_default("PopupUtilsData", { currentZIndex: 100 });
var getFocusedElement = () => {
  const element = getActiveElement_default();
  return element && typeof element.focus === "function" ? element : null;
};
var isFocusedElementWithinNode = (node) => {
  const fe = getFocusedElement();
  if (fe) {
    return isNodeContainedWithin(node, fe);
  }
  return false;
};
var isNodeContainedWithin = (parent, child) => {
  let currentNode = parent;
  if (currentNode.shadowRoot) {
    const children = Array.from(currentNode.shadowRoot.children);
    currentNode = children.find((n) => n.localName !== "style");
    if (!currentNode) {
      return false;
    }
  }
  if (currentNode === child) {
    return true;
  }
  const childNodes = currentNode.localName === "slot" ? currentNode.assignedNodes() : currentNode.children;
  if (childNodes) {
    return Array.from(childNodes).some((n) => isNodeContainedWithin(n, child));
  }
  return false;
};
var isPointInRect = (x, y, rect) => {
  return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;
};
var isClickInRect = (e, rect) => {
  let x;
  let y;
  if (e instanceof MouseEvent) {
    x = e.clientX;
    y = e.clientY;
  } else {
    const touch = e.touches[0];
    x = touch.clientX;
    y = touch.clientY;
  }
  return isPointInRect(x, y, rect);
};
function instanceOfPopup(object) {
  return "isUI5Element" in object && "_show" in object;
}
var getClosedPopupParent = (el) => {
  const parent = el.parentElement || el.getRootNode && el.getRootNode().host;
  if (parent && (instanceOfPopup(parent) || parent === document.documentElement)) {
    return parent;
  }
  return getClosedPopupParent(parent);
};
var getNextZIndex = () => {
  const openUI5Support = getFeature("OpenUI5Support");
  if (openUI5Support && openUI5Support.isOpenUI5Detected()) {
    return openUI5Support.getNextZIndex();
  }
  popupUtilsData.currentZIndex += 2;
  return popupUtilsData.currentZIndex;
};

// node_modules/@ui5/webcomponents/dist/generated/templates/ResponsivePopoverTemplate.lit.js
function block03(context, tags, suffix) {
  return effectiveHtml`${this._isPhone ? block13.call(this, context, tags, suffix) : block7.call(this, context, tags, suffix)}`;
}
function block13(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-dialog", tags, suffix)} accessible-name=${ifDefined(this.accessibleName)} accessible-name-ref=${ifDefined(this.accessibleNameRef)} accessible-role=${ifDefined(this.accessibleRole)} stretch ?_disable-initial-focus="${ifDefined(this._disableInitialFocus)}" initial-focus="${ifDefined(this.initialFocus)}" @ui5-before-open="${ifDefined(this._beforeDialogOpen)}" @ui5-after-open="${ifDefined(this._propagateDialogEvent)}" @ui5-before-close="${ifDefined(this._propagateDialogEvent)}" @ui5-after-close="${ifDefined(this._afterDialogClose)}" exportparts="content, header, footer">${!this._hideHeader ? block23.call(this, context, tags, suffix) : void 0}<slot></slot><slot slot="footer" name="footer"></slot></${scopeTag("ui5-dialog", tags, suffix)}>` : effectiveHtml`<ui5-dialog accessible-name=${ifDefined(this.accessibleName)} accessible-name-ref=${ifDefined(this.accessibleNameRef)} accessible-role=${ifDefined(this.accessibleRole)} stretch ?_disable-initial-focus="${ifDefined(this._disableInitialFocus)}" initial-focus="${ifDefined(this.initialFocus)}" @ui5-before-open="${ifDefined(this._beforeDialogOpen)}" @ui5-after-open="${ifDefined(this._propagateDialogEvent)}" @ui5-before-close="${ifDefined(this._propagateDialogEvent)}" @ui5-after-close="${ifDefined(this._afterDialogClose)}" exportparts="content, header, footer">${!this._hideHeader ? block23.call(this, context, tags, suffix) : void 0}<slot></slot><slot slot="footer" name="footer"></slot></ui5-dialog>`;
}
function block23(context, tags, suffix) {
  return effectiveHtml`${this.header.length ? block32.call(this, context, tags, suffix) : block4.call(this, context, tags, suffix)}`;
}
function block32(context, tags, suffix) {
  return effectiveHtml`<slot slot="header" name="header"></slot>`;
}
function block4(context, tags, suffix) {
  return effectiveHtml`<div class="${classMap(this.classes.header)}" slot="header">${this.headerText ? block5.call(this, context, tags, suffix) : void 0}${!this._hideCloseButton ? block6.call(this, context, tags, suffix) : void 0}</div>`;
}
function block5(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-title", tags, suffix)} level="H2" class="ui5-popup-header-text ui5-responsive-popover-header-text">${ifDefined(this.headerText)}</${scopeTag("ui5-title", tags, suffix)}>` : effectiveHtml`<ui5-title level="H2" class="ui5-popup-header-text ui5-responsive-popover-header-text">${ifDefined(this.headerText)}</ui5-title>`;
}
function block6(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-button", tags, suffix)} icon="decline" design="Transparent" aria-label="${ifDefined(this._closeDialogAriaLabel)}" @click="${this.close}"></${scopeTag("ui5-button", tags, suffix)}>` : effectiveHtml`<ui5-button icon="decline" design="Transparent" aria-label="${ifDefined(this._closeDialogAriaLabel)}" @click="${this.close}"></ui5-button>`;
}
function block7(context, tags, suffix) {
  return effectiveHtml`<section style="${styleMap(this.styles.root)}" class="${classMap(this.classes.root)}" role="${ifDefined(this._role)}" aria-modal="${ifDefined(this._ariaModal)}" aria-label="${ifDefined(this._ariaLabel)}" aria-labelledby="${ifDefined(this._ariaLabelledBy)}" @keydown=${this._onkeydown} @focusout=${this._onfocusout} @mouseup=${this._onmouseup} @mousedown=${this._onmousedown}><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToLast}></span><span class="ui5-popover-arrow" style="${styleMap(this.styles.arrow)}"></span>${this._displayHeader ? block8.call(this, context, tags, suffix) : void 0}<div style="${styleMap(this.styles.content)}" class="${classMap(this.classes.content)}"  @scroll="${this._scroll}" part="content"><slot></slot></div>${this._displayFooter ? block11.call(this, context, tags, suffix) : void 0}<span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToFirst}></span></section>`;
}
function block8(context, tags, suffix) {
  return effectiveHtml`<header class="ui5-popup-header-root" id="ui5-popup-header" part="header">${this.header.length ? block9.call(this, context, tags, suffix) : block10.call(this, context, tags, suffix)}</header>`;
}
function block9(context, tags, suffix) {
  return effectiveHtml`<slot name="header"></slot>`;
}
function block10(context, tags, suffix) {
  return effectiveHtml`<h1 class="ui5-popup-header-text">${ifDefined(this.headerText)}</h1>`;
}
function block11(context, tags, suffix) {
  return effectiveHtml`${this.footer.length ? block122.call(this, context, tags, suffix) : void 0}`;
}
function block122(context, tags, suffix) {
  return effectiveHtml`<footer class="ui5-popup-footer-root" part="footer"><slot name="footer"></slot></footer>`;
}
var ResponsivePopoverTemplate_lit_default = block03;

// node_modules/@ui5/webcomponents-base/dist/types/DataType.js
var DataType = class {
  /**
   * Checks if the value is valid for its data type.
   * @public
   */
  // eslint-disable-next-line
  static isValid(value) {
    return false;
  }
  static attributeToProperty(attributeValue) {
    return attributeValue;
  }
  static propertyToAttribute(propertyValue) {
    return propertyValue === null ? null : String(propertyValue);
  }
  static valuesAreEqual(value1, value2) {
    return value1 === value2;
  }
  static generateTypeAccessors(types) {
    Object.keys(types).forEach((type) => {
      Object.defineProperty(this, type, {
        get() {
          return types[type];
        }
      });
    });
  }
  static get isDataTypeClass() {
    return true;
  }
};
var DataType_default = DataType;

// node_modules/@ui5/webcomponents-base/dist/types/Integer.js
var Integer = class extends DataType_default {
  static isValid(value) {
    return Number.isInteger(value);
  }
  static attributeToProperty(attributeValue) {
    return parseInt(attributeValue);
  }
};
var Integer_default = Integer;

// node_modules/@ui5/webcomponents-base/dist/types/DOMReference.js
var DOMReference = class extends DataType_default {
  static isValid(value) {
    return typeof value === "string" || value instanceof HTMLElement;
  }
  static propertyToAttribute(propertyValue) {
    if (propertyValue instanceof HTMLElement) {
      return null;
    }
    return propertyValue;
  }
};
var DOMReference_default = DOMReference;

// node_modules/@ui5/webcomponents-base/dist/util/clamp.js
var clamp = (val, min, max) => {
  return Math.min(Math.max(val, min), Math.max(min, max));
};
var clamp_default = clamp;

// node_modules/@ui5/webcomponents-base/dist/util/isElementContainingBlock.js
var isElementContainingBlock = (el) => {
  const computedStyle = getComputedStyle(el);
  return ["size", "inline-size"].indexOf(computedStyle.containerType) > -1 || ["transform", "perspective"].indexOf(computedStyle.willChange) > -1 || ["layout", "paint", "strict", "content"].indexOf(computedStyle.contain) > -1 || computedStyle.transform && computedStyle.transform !== "none" || computedStyle.perspective && computedStyle.perspective !== "none" || computedStyle.backdropFilter && computedStyle.backdropFilter !== "none";
};
var isElementContainingBlock_default = isElementContainingBlock;

// node_modules/@ui5/webcomponents-base/dist/util/getParentElement.js
var getParentElement = (el) => {
  return el.parentElement ? el.parentNode : el.parentNode.host;
};
var getParentElement_default = getParentElement;

// node_modules/@ui5/webcomponents-base/dist/util/isElementHidden.js
var isElementHidden = (el) => {
  if (el.nodeName === "SLOT") {
    return false;
  }
  return el.offsetWidth <= 0 && el.offsetHeight <= 0 || el.style && el.style.visibility === "hidden";
};
var isElementHidden_default = isElementHidden;

// node_modules/@ui5/webcomponents-base/dist/util/isElementClickable.js
var rClickable = /^(?:a|area)$/i;
var rFocusable = /^(?:input|select|textarea|button)$/i;
var isElementClickable = (el) => {
  if (el.disabled) {
    return false;
  }
  const tabIndex = el.getAttribute("tabindex");
  if (tabIndex !== null && tabIndex !== void 0) {
    return parseInt(tabIndex) >= 0;
  }
  return rFocusable.test(el.nodeName) || rClickable.test(el.nodeName) && !!el.href;
};
var isElementClickable_default = isElementClickable;

// node_modules/@ui5/webcomponents-base/dist/util/FocusableElements.js
var isFocusTrap = (el) => {
  return el.hasAttribute("data-ui5-focus-trap");
};
var getFirstFocusableElement = async (container, startFromContainer) => {
  if (!container || isElementHidden_default(container)) {
    return null;
  }
  return findFocusableElement(container, true, startFromContainer);
};
var getLastFocusableElement = async (container, startFromContainer) => {
  if (!container || isElementHidden_default(container)) {
    return null;
  }
  return findFocusableElement(container, false, startFromContainer);
};
var isElemFocusable = (el) => {
  return el.hasAttribute("data-ui5-focus-redirect") || !isElementHidden_default(el);
};
var findFocusableElement = async (container, forward, startFromContainer) => {
  let child;
  let assignedElements;
  let currentIndex = -1;
  if (container.shadowRoot) {
    child = forward ? container.shadowRoot.firstChild : container.shadowRoot.lastChild;
  } else if (container instanceof HTMLSlotElement && container.assignedNodes()) {
    assignedElements = container.assignedNodes();
    currentIndex = forward ? 0 : assignedElements.length - 1;
    child = assignedElements[currentIndex];
  } else if (startFromContainer) {
    child = container;
  } else {
    child = forward ? container.firstElementChild : container.lastElementChild;
  }
  let focusableDescendant;
  while (child) {
    const originalChild = child;
    if (instanceOfUI5Element(child)) {
      child = await child.getFocusDomRefAsync();
    }
    if (!child) {
      return null;
    }
    if (child.nodeType === 1 && isElemFocusable(child) && !isFocusTrap(child)) {
      if (isElementClickable_default(child)) {
        return child && typeof child.focus === "function" ? child : null;
      }
      focusableDescendant = await findFocusableElement(child, forward);
      if (focusableDescendant) {
        return focusableDescendant && typeof focusableDescendant.focus === "function" ? focusableDescendant : null;
      }
    }
    child = forward ? originalChild.nextSibling : originalChild.previousSibling;
    if (assignedElements && !assignedElements[currentIndex].contains(child)) {
      currentIndex = forward ? currentIndex + 1 : currentIndex - 1;
      child = assignedElements[currentIndex];
    }
  }
  return null;
};

// node_modules/@ui5/webcomponents-base/dist/util/getEffectiveScrollbarStyle.js
var NO_SCROLLBAR_STYLE_CLASS = "ui5-content-native-scrollbars";
var getEffectiveScrollbarStyle = () => document.body.classList.contains(NO_SCROLLBAR_STYLE_CLASS);
var getEffectiveScrollbarStyle_default = getEffectiveScrollbarStyle;

// node_modules/@ui5/webcomponents-base/dist/delegate/ResizeHandler.js
var resizeObserver;
var observedElements = /* @__PURE__ */ new Map();
var getResizeObserver = () => {
  if (!resizeObserver) {
    resizeObserver = new window.ResizeObserver((entries) => {
      window.requestAnimationFrame(() => {
        entries.forEach((entry) => {
          const callbacks = observedElements.get(entry.target);
          callbacks && Promise.all(callbacks.map((callback) => callback()));
        });
      });
    });
  }
  return resizeObserver;
};
var observe = (element, callback) => {
  const callbacks = observedElements.get(element) || [];
  if (!callbacks.length) {
    getResizeObserver().observe(element);
  }
  observedElements.set(element, [...callbacks, callback]);
};
var unobserve = (element, callback) => {
  const callbacks = observedElements.get(element) || [];
  if (callbacks.length === 0) {
    return;
  }
  const filteredCallbacks = callbacks.filter((fn) => fn !== callback);
  if (filteredCallbacks.length === 0) {
    getResizeObserver().unobserve(element);
    observedElements.delete(element);
  } else {
    observedElements.set(element, filteredCallbacks);
  }
};
var ResizeHandler = class {
  /**
   * @public
   * @param element UI5 Web Component or DOM Element to be observed
   * @param callback Callback to be executed
   */
  static register(element, callback) {
    let effectiveElement = element;
    if (instanceOfUI5Element(effectiveElement)) {
      effectiveElement = effectiveElement.getDomRef();
    }
    if (effectiveElement instanceof HTMLElement) {
      observe(effectiveElement, callback);
    } else {
      console.warn("Cannot register ResizeHandler for element", element);
    }
  }
  /**
   * @public
   * @param element UI5 Web Component or DOM Element to be unobserved
   * @param callback Callback to be removed
   */
  static deregister(element, callback) {
    let effectiveElement = element;
    if (instanceOfUI5Element(effectiveElement)) {
      effectiveElement = effectiveElement.getDomRef();
    }
    if (effectiveElement instanceof HTMLElement) {
      unobserve(effectiveElement, callback);
    } else {
      console.warn("Cannot deregister ResizeHandler for element", element);
    }
  }
};
var ResizeHandler_default = ResizeHandler;

// node_modules/@ui5/webcomponents-base/dist/MediaRange.js
var mediaRanges = /* @__PURE__ */ new Map();
var DEAFULT_RANGE_SET = /* @__PURE__ */ new Map();
DEAFULT_RANGE_SET.set("S", [0, 599]);
DEAFULT_RANGE_SET.set("M", [600, 1023]);
DEAFULT_RANGE_SET.set("L", [1024, 1439]);
DEAFULT_RANGE_SET.set("XL", [1440, Infinity]);
var RANGESETS;
(function(RANGESETS2) {
  RANGESETS2["RANGE_4STEPS"] = "4Step";
})(RANGESETS || (RANGESETS = {}));
var initRangeSet = (name21, range) => {
  mediaRanges.set(name21, range);
};
var getCurrentRange = (name21, width = window.innerWidth) => {
  let rangeSet = mediaRanges.get(name21);
  if (!rangeSet) {
    rangeSet = mediaRanges.get(RANGESETS.RANGE_4STEPS);
  }
  let currentRangeName;
  const effectiveWidth = Math.floor(width);
  rangeSet.forEach((value, key) => {
    if (effectiveWidth >= value[0] && effectiveWidth <= value[1]) {
      currentRangeName = key;
    }
  });
  return currentRangeName || [...rangeSet.keys()][0];
};
var MediaRange = {
  RANGESETS,
  initRangeSet,
  getCurrentRange
};
MediaRange.initRangeSet(MediaRange.RANGESETS.RANGE_4STEPS, DEAFULT_RANGE_SET);
var MediaRange_default = MediaRange;

// node_modules/@ui5/webcomponents/dist/generated/templates/PopupTemplate.lit.js
function block04(context, tags, suffix) {
  return effectiveHtml`<section style="${styleMap(this.styles.root)}" class="${classMap(this.classes.root)}" role="${ifDefined(this._role)}" aria-modal="${ifDefined(this._ariaModal)}" aria-label="${ifDefined(this._ariaLabel)}" aria-labelledby="${ifDefined(this._ariaLabelledBy)}" @keydown=${this._onkeydown} @focusout=${this._onfocusout} @mouseup=${this._onmouseup} @mousedown=${this._onmousedown}><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToLast}></span><div style="${styleMap(this.styles.content)}" class="${classMap(this.classes.content)}"  @scroll="${this._scroll}" part="content"><slot></slot></div><span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToFirst}></span></section> `;
}
var PopupTemplate_lit_default = block04;

// node_modules/@ui5/webcomponents/dist/generated/templates/PopupBlockLayerTemplate.lit.js
function block05(context, tags, suffix) {
  return effectiveHtml`<div class="ui5-block-layer" ?hidden=${this._blockLayerHidden} tabindex="0" style="${styleMap(this.styles.blockLayer)}" @keydown="${this._preventBlockLayerFocus}" @mousedown="${this._preventBlockLayerFocus}"></div>`;
}
var PopupBlockLayerTemplate_lit_default = block05;

// node_modules/@ui5/webcomponents/dist/types/PopupAccessibleRole.js
var PopupAccessibleRole;
(function(PopupAccessibleRole2) {
  PopupAccessibleRole2["None"] = "None";
  PopupAccessibleRole2["Dialog"] = "Dialog";
  PopupAccessibleRole2["AlertDialog"] = "AlertDialog";
})(PopupAccessibleRole || (PopupAccessibleRole = {}));
var PopupAccessibleRole_default = PopupAccessibleRole;

// node_modules/@ui5/webcomponents/dist/popup-utils/OpenedPopupsRegistry.js
var OpenedPopupsRegistry = getSharedResource_default("OpenedPopupsRegistry", { openedRegistry: [] });
var addOpenedPopup = (instance, parentPopovers = []) => {
  if (!OpenedPopupsRegistry.openedRegistry.some((popup) => popup.instance === instance)) {
    OpenedPopupsRegistry.openedRegistry.push({
      instance,
      parentPopovers
    });
  }
  _updateTopModalPopup();
  if (OpenedPopupsRegistry.openedRegistry.length === 1) {
    attachGlobalListener();
  }
};
var removeOpenedPopup = (instance) => {
  OpenedPopupsRegistry.openedRegistry = OpenedPopupsRegistry.openedRegistry.filter((el) => {
    return el.instance !== instance;
  });
  _updateTopModalPopup();
  if (!OpenedPopupsRegistry.openedRegistry.length) {
    detachGlobalListener();
  }
};
var getOpenedPopups = () => {
  return [...OpenedPopupsRegistry.openedRegistry];
};
var _keydownListener = (event2) => {
  if (!OpenedPopupsRegistry.openedRegistry.length) {
    return;
  }
  if (isEscape(event2)) {
    event2.stopPropagation();
    OpenedPopupsRegistry.openedRegistry[OpenedPopupsRegistry.openedRegistry.length - 1].instance.close(true);
  }
};
var attachGlobalListener = () => {
  document.addEventListener("keydown", _keydownListener);
};
var detachGlobalListener = () => {
  document.removeEventListener("keydown", _keydownListener);
};
var _updateTopModalPopup = () => {
  let popup;
  let hasModal = false;
  for (let i = OpenedPopupsRegistry.openedRegistry.length - 1; i >= 0; i--) {
    popup = OpenedPopupsRegistry.openedRegistry[i].instance;
    if (!hasModal && popup.isModal) {
      popup.isTopModalPopup = true;
      hasModal = true;
    } else {
      popup.isTopModalPopup = false;
    }
  }
};

// node_modules/@ui5/webcomponents/dist/generated/themes/Popup.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData5 = { packageName: "@ui5/webcomponents", fileName: "themes/Popup.css.ts", content: `:host{min-width:1px;display:none;position:fixed}
` };
var Popup_css_default = styleData5;

// node_modules/@ui5/webcomponents/dist/generated/themes/PopupStaticAreaStyles.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData6 = { packageName: "@ui5/webcomponents", fileName: "themes/PopupStaticAreaStyles.css.ts", content: `.ui5-block-layer{display:none;position:fixed;background-color:var(--_ui5-v1-24-2_popup_block_layer_background);inset:-500px;outline:none;pointer-events:all;z-index:-1}.ui5-block-layer:not([hidden]){display:inline-block}
` };
var PopupStaticAreaStyles_css_default = styleData6;

// node_modules/@ui5/webcomponents/dist/generated/themes/PopupGlobal.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData7 = { packageName: "@ui5/webcomponents", fileName: "themes/PopupGlobal.css.ts", content: `.ui5-popup-scroll-blocker{overflow:hidden}
` };
var PopupGlobal_css_default = styleData7;

// node_modules/@ui5/webcomponents/dist/Popup.js
var __decorate4 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Popup_1;
var createBlockingStyle = () => {
  if (!hasStyle("data-ui5-popup-scroll-blocker")) {
    createStyle(PopupGlobal_css_default, "data-ui5-popup-scroll-blocker");
  }
};
createBlockingStyle();
var pageScrollingBlockers = /* @__PURE__ */ new Set();
var Popup = Popup_1 = class Popup2 extends UI5Element_default {
  constructor() {
    super();
    this._resizeHandler = this._resize.bind(this);
  }
  onBeforeRendering() {
    this._blockLayerHidden = !this.isOpen() || !this.isTopModalPopup;
  }
  onAfterRendering() {
    this._updateMediaRange();
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._resizeHandler);
  }
  onExitDOM() {
    if (this.isOpen()) {
      Popup_1.unblockPageScrolling(this);
      this._removeOpenedPopup();
    }
    ResizeHandler_default.deregister(this, this._resizeHandler);
  }
  get _displayProp() {
    return "block";
  }
  _resize() {
    this._updateMediaRange();
  }
  /**
   * Prevents the user from interacting with the content under the block layer
   */
  _preventBlockLayerFocus(e) {
    e.preventDefault();
  }
  /**
   * Temporarily removes scrollbars from the html element
   * @protected
   */
  static blockPageScrolling(popup) {
    pageScrollingBlockers.add(popup);
    if (pageScrollingBlockers.size !== 1) {
      return;
    }
    document.documentElement.classList.add("ui5-popup-scroll-blocker");
  }
  /**
   * Restores scrollbars on the html element, if needed
   * @protected
   */
  static unblockPageScrolling(popup) {
    pageScrollingBlockers.delete(popup);
    if (pageScrollingBlockers.size !== 0) {
      return;
    }
    document.documentElement.classList.remove("ui5-popup-scroll-blocker");
  }
  _scroll(e) {
    this.fireEvent("scroll", {
      scrollTop: e.target.scrollTop,
      targetRef: e.target
    });
  }
  _onkeydown(e) {
    const isTabOutAttempt = e.target === this._root && isTabPrevious(e);
    const isEnterOnClosedPopupChild = isEnter(e) && !this.isOpen();
    if (isTabOutAttempt || isEnterOnClosedPopupChild) {
      e.preventDefault();
    }
  }
  _onfocusout(e) {
    if (!e.relatedTarget) {
      this._shouldFocusRoot = true;
    }
  }
  _onmousedown(e) {
    if (!isSafari()) {
      this._root.removeAttribute("tabindex");
    }
    if (this.shadowRoot.contains(e.target)) {
      this._shouldFocusRoot = true;
    } else {
      this._shouldFocusRoot = false;
    }
  }
  _onmouseup() {
    if (!isSafari()) {
      this._root.tabIndex = -1;
    }
    if (this._shouldFocusRoot) {
      if (isChrome()) {
        this._root.focus();
      }
      this._shouldFocusRoot = false;
    }
  }
  /**
   * Focus trapping
   * @private
   */
  async forwardToFirst() {
    const firstFocusable = await getFirstFocusableElement(this);
    if (firstFocusable) {
      firstFocusable.focus();
    } else {
      this._root.focus();
    }
  }
  /**
   * Focus trapping
   * @private
   */
  async forwardToLast() {
    const lastFocusable = await getLastFocusableElement(this);
    if (lastFocusable) {
      lastFocusable.focus();
    } else {
      this._root.focus();
    }
  }
  /**
   * Use this method to focus the element denoted by "initialFocus", if provided, or the first focusable element otherwise.
   * @protected
   */
  async applyInitialFocus() {
    await this.applyFocus();
  }
  /**
   * Focuses the element denoted by `initialFocus`, if provided,
   * or the first focusable element otherwise.
   * @public
   * @returns Promise that resolves when the focus is applied
   */
  async applyFocus() {
    await this._waitForDomRef();
    if (this.getRootNode() === this) {
      return;
    }
    let element;
    if (this.initialFocus) {
      element = this.getRootNode().getElementById(this.initialFocus) || document.getElementById(this.initialFocus);
    }
    element = element || await getFirstFocusableElement(this) || this._root;
    if (element) {
      if (element === this._root) {
        element.tabIndex = -1;
      }
      element.focus();
    }
  }
  /**
   * Tells if the component is opened
   * @public
   */
  isOpen() {
    return this.opened;
  }
  isFocusWithin() {
    return isFocusedElementWithinNode(this._root);
  }
  /**
   * Shows the block layer (for modal popups only) and sets the correct z-index for the purpose of popup stacking
   * @protected
   */
  async _open(preventInitialFocus) {
    var _a3;
    const prevented = !this.fireEvent("before-open", {}, true, false);
    if (prevented) {
      return;
    }
    if (this.isModal && !this.shouldHideBackdrop) {
      this.getStaticAreaItemDomRef();
      this._blockLayerHidden = false;
      Popup_1.blockPageScrolling(this);
    }
    this._zIndex = getNextZIndex();
    this.style.zIndex = ((_a3 = this._zIndex) == null ? void 0 : _a3.toString()) || "";
    this._focusedElementBeforeOpen = getFocusedElement();
    this._show();
    if (this.getDomRef()) {
      this._updateMediaRange();
    }
    this._addOpenedPopup();
    this.opened = true;
    this.open = true;
    await renderFinished();
    if (!this._disableInitialFocus && !preventInitialFocus) {
      await this.applyInitialFocus();
    }
    this.fireEvent("after-open", {}, false, false);
  }
  _updateMediaRange() {
    this.mediaRange = MediaRange_default.getCurrentRange(MediaRange_default.RANGESETS.RANGE_4STEPS, this.getDomRef().offsetWidth);
  }
  /**
   * Adds the popup to the "opened popups registry"
   * @protected
   */
  _addOpenedPopup() {
    addOpenedPopup(this);
  }
  /**
   * Closes the popup.
   * @public
   */
  close(escPressed = false, preventRegistryUpdate = false, preventFocusRestore = false) {
    if (!this.opened) {
      return;
    }
    const prevented = !this.fireEvent("before-close", { escPressed }, true, false);
    if (prevented) {
      return;
    }
    if (this.isModal) {
      this._blockLayerHidden = true;
      Popup_1.unblockPageScrolling(this);
    }
    this.hide();
    this.opened = false;
    this.open = false;
    if (!preventRegistryUpdate) {
      this._removeOpenedPopup();
    }
    if (!this.preventFocusRestore && !preventFocusRestore) {
      this.resetFocus();
    }
    this.fireEvent("after-close", {}, false, false);
  }
  /**
   * Removes the popup from the "opened popups registry"
   * @protected
   */
  _removeOpenedPopup() {
    removeOpenedPopup(this);
  }
  /**
   * Returns the focus to the previously focused element
   * @protected
   */
  resetFocus() {
    if (!this._focusedElementBeforeOpen) {
      return;
    }
    this._focusedElementBeforeOpen.focus();
    this._focusedElementBeforeOpen = null;
  }
  /**
   * Sets "block" display to the popup. The property can be overriden by derivatives of Popup.
   * @protected
   */
  _show() {
    this.style.display = this._displayProp;
  }
  /**
   * Sets "none" display to the popup
   * @protected
   */
  hide() {
    this.style.display = "none";
  }
  /**
   * Ensures ariaLabel is never null or empty string
   * @protected
   */
  get _ariaLabel() {
    return getEffectiveAriaLabelText(this);
  }
  get _root() {
    return this.shadowRoot.querySelector(".ui5-popup-root");
  }
  get _role() {
    return this.accessibleRole === PopupAccessibleRole_default.None ? void 0 : this.accessibleRole.toLowerCase();
  }
  get _ariaModal() {
    return this.accessibleRole === PopupAccessibleRole_default.None ? void 0 : "true";
  }
  get contentDOM() {
    return this.shadowRoot.querySelector(".ui5-popup-content");
  }
  get styles() {
    return {
      root: {},
      content: {},
      blockLayer: {
        "zIndex": this._zIndex ? this._zIndex - 1 : ""
      }
    };
  }
  get classes() {
    return {
      root: {
        "ui5-popup-root": true,
        "ui5-content-native-scrollbars": getEffectiveScrollbarStyle_default()
      },
      content: {
        "ui5-popup-content": true
      }
    };
  }
};
__decorate4([
  property_default()
], Popup.prototype, "initialFocus", void 0);
__decorate4([
  property_default({ type: Boolean })
], Popup.prototype, "preventFocusRestore", void 0);
__decorate4([
  property_default({ type: Boolean })
], Popup.prototype, "open", void 0);
__decorate4([
  property_default({ type: Boolean, noAttribute: true })
], Popup.prototype, "opened", void 0);
__decorate4([
  property_default({ defaultValue: void 0 })
], Popup.prototype, "accessibleName", void 0);
__decorate4([
  property_default({ defaultValue: "" })
], Popup.prototype, "accessibleNameRef", void 0);
__decorate4([
  property_default({ type: PopupAccessibleRole_default, defaultValue: PopupAccessibleRole_default.Dialog })
], Popup.prototype, "accessibleRole", void 0);
__decorate4([
  property_default()
], Popup.prototype, "mediaRange", void 0);
__decorate4([
  property_default({ type: Boolean })
], Popup.prototype, "_disableInitialFocus", void 0);
__decorate4([
  property_default({ type: Boolean })
], Popup.prototype, "_blockLayerHidden", void 0);
__decorate4([
  property_default({ type: Boolean, noAttribute: true })
], Popup.prototype, "isTopModalPopup", void 0);
__decorate4([
  slot_default({ type: HTMLElement, "default": true })
], Popup.prototype, "content", void 0);
Popup = Popup_1 = __decorate4([
  customElement_default({
    renderer: LitRenderer_default,
    styles: Popup_css_default,
    template: PopupTemplate_lit_default,
    staticAreaTemplate: PopupBlockLayerTemplate_lit_default,
    staticAreaStyles: PopupStaticAreaStyles_css_default
  }),
  event_default("before-open"),
  event_default("after-open"),
  event_default("before-close", {
    detail: {
      /**
       * @public
       */
      escPressed: {
        type: Boolean
      }
    }
  }),
  event_default("after-close"),
  event_default("scroll")
], Popup);
var Popup_default = Popup;

// node_modules/@ui5/webcomponents/dist/types/PopoverPlacementType.js
var PopoverPlacementType;
(function(PopoverPlacementType2) {
  PopoverPlacementType2["Left"] = "Left";
  PopoverPlacementType2["Right"] = "Right";
  PopoverPlacementType2["Top"] = "Top";
  PopoverPlacementType2["Bottom"] = "Bottom";
})(PopoverPlacementType || (PopoverPlacementType = {}));
var PopoverPlacementType_default = PopoverPlacementType;

// node_modules/@ui5/webcomponents/dist/types/PopoverVerticalAlign.js
var PopoverVerticalAlign;
(function(PopoverVerticalAlign2) {
  PopoverVerticalAlign2["Center"] = "Center";
  PopoverVerticalAlign2["Top"] = "Top";
  PopoverVerticalAlign2["Bottom"] = "Bottom";
  PopoverVerticalAlign2["Stretch"] = "Stretch";
})(PopoverVerticalAlign || (PopoverVerticalAlign = {}));
var PopoverVerticalAlign_default = PopoverVerticalAlign;

// node_modules/@ui5/webcomponents/dist/types/PopoverHorizontalAlign.js
var PopoverHorizontalAlign;
(function(PopoverHorizontalAlign2) {
  PopoverHorizontalAlign2["Center"] = "Center";
  PopoverHorizontalAlign2["Left"] = "Left";
  PopoverHorizontalAlign2["Right"] = "Right";
  PopoverHorizontalAlign2["Stretch"] = "Stretch";
})(PopoverHorizontalAlign || (PopoverHorizontalAlign = {}));
var PopoverHorizontalAlign_default = PopoverHorizontalAlign;

// node_modules/@ui5/webcomponents/dist/popup-utils/PopoverRegistry.js
var updateInterval;
var intervalTimeout = 300;
var openedRegistry = [];
var repositionPopovers = () => {
  openedRegistry.forEach((popover) => {
    popover.instance.reposition();
  });
};
var closePopoversIfLostFocus = () => {
  if (document.activeElement.tagName === "IFRAME") {
    getRegistry().reverse().forEach((popup) => popup.instance.close(false, false, true));
  }
};
var runUpdateInterval = () => {
  updateInterval = setInterval(() => {
    repositionPopovers();
    closePopoversIfLostFocus();
  }, intervalTimeout);
};
var stopUpdateInterval = () => {
  clearInterval(updateInterval);
};
var attachGlobalScrollHandler = () => {
  document.addEventListener("scroll", repositionPopovers, { capture: true });
};
var detachGlobalScrollHandler = () => {
  document.removeEventListener("scroll", repositionPopovers, { capture: true });
};
var attachScrollHandler = (popover) => {
  popover && popover.shadowRoot.addEventListener("scroll", repositionPopovers, { capture: true });
};
var detachScrollHandler = (popover) => {
  popover && popover.shadowRoot.removeEventListener("scroll", repositionPopovers, { capture: true });
};
var attachGlobalClickHandler = () => {
  document.addEventListener("mousedown", clickHandler);
};
var detachGlobalClickHandler = () => {
  document.removeEventListener("mousedown", clickHandler);
};
var clickHandler = (event2) => {
  const openedPopups = getOpenedPopups();
  if (openedPopups.length === 0) {
    return;
  }
  const isTopPopupPopover = instanceOfPopover(openedPopups[openedPopups.length - 1].instance);
  if (!isTopPopupPopover) {
    return;
  }
  for (let i = openedPopups.length - 1; i !== -1; i--) {
    const popup = openedPopups[i].instance;
    if (popup.isModal || popup.isOpenerClicked(event2)) {
      return;
    }
    if (isClickInRect(event2, popup.getBoundingClientRect())) {
      break;
    }
    popup.close();
  }
};
var addOpenedPopover = (instance) => {
  const parentPopovers = getParentPopoversIfNested(instance);
  addOpenedPopup(instance, parentPopovers);
  openedRegistry.push({
    instance,
    parentPopovers
  });
  attachScrollHandler(instance);
  if (openedRegistry.length === 1) {
    attachGlobalScrollHandler();
    attachGlobalClickHandler();
    runUpdateInterval();
  }
};
var removeOpenedPopover = (instance) => {
  const popoversToClose = [instance];
  for (let i = 0; i < openedRegistry.length; i++) {
    const indexOfCurrentInstance = openedRegistry[i].parentPopovers.indexOf(instance);
    if (openedRegistry[i].parentPopovers.length > 0 && indexOfCurrentInstance > -1) {
      popoversToClose.push(openedRegistry[i].instance);
    }
  }
  for (let i = popoversToClose.length - 1; i >= 0; i--) {
    for (let j = 0; j < openedRegistry.length; j++) {
      let indexOfItemToRemove = -1;
      if (popoversToClose[i] === openedRegistry[j].instance) {
        indexOfItemToRemove = j;
      }
      if (indexOfItemToRemove >= 0) {
        removeOpenedPopup(openedRegistry[indexOfItemToRemove].instance);
        detachScrollHandler(openedRegistry[indexOfItemToRemove].instance);
        const itemToClose = openedRegistry.splice(indexOfItemToRemove, 1);
        itemToClose[0].instance.close(false, true);
      }
    }
  }
  if (!openedRegistry.length) {
    detachGlobalScrollHandler();
    detachGlobalClickHandler();
    stopUpdateInterval();
  }
};
var getRegistry = () => {
  return openedRegistry;
};
var getParentPopoversIfNested = (instance) => {
  let currentElement = instance.parentNode;
  const parentPopovers = [];
  while (currentElement && currentElement.parentNode) {
    for (let i = 0; i < openedRegistry.length; i++) {
      if (currentElement === openedRegistry[i].instance) {
        parentPopovers.push(currentElement);
      }
    }
    currentElement = currentElement.parentNode;
  }
  return parentPopovers;
};

// node_modules/@ui5/webcomponents/dist/generated/templates/PopoverTemplate.lit.js
function block06(context, tags, suffix) {
  return effectiveHtml`<section style="${styleMap(this.styles.root)}" class="${classMap(this.classes.root)}" role="${ifDefined(this._role)}" aria-modal="${ifDefined(this._ariaModal)}" aria-label="${ifDefined(this._ariaLabel)}" aria-labelledby="${ifDefined(this._ariaLabelledBy)}" @keydown=${this._onkeydown} @focusout=${this._onfocusout} @mouseup=${this._onmouseup} @mousedown=${this._onmousedown}><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToLast}></span><span class="ui5-popover-arrow" style="${styleMap(this.styles.arrow)}"></span>${this._displayHeader ? block14.call(this, context, tags, suffix) : void 0}<div style="${styleMap(this.styles.content)}" class="${classMap(this.classes.content)}"  @scroll="${this._scroll}" part="content"><slot></slot></div>${this._displayFooter ? block42.call(this, context, tags, suffix) : void 0}<span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToFirst}></span></section> `;
}
function block14(context, tags, suffix) {
  return effectiveHtml`<header class="ui5-popup-header-root" id="ui5-popup-header" part="header">${this.header.length ? block24.call(this, context, tags, suffix) : block33.call(this, context, tags, suffix)}</header>`;
}
function block24(context, tags, suffix) {
  return effectiveHtml`<slot name="header"></slot>`;
}
function block33(context, tags, suffix) {
  return effectiveHtml`<h1 class="ui5-popup-header-text">${ifDefined(this.headerText)}</h1>`;
}
function block42(context, tags, suffix) {
  return effectiveHtml`${this.footer.length ? block52.call(this, context, tags, suffix) : void 0}`;
}
function block52(context, tags, suffix) {
  return effectiveHtml`<footer class="ui5-popup-footer-root" part="footer"><slot name="footer"></slot></footer>`;
}
var PopoverTemplate_lit_default = block06;

// node_modules/@ui5/webcomponents/dist/generated/themes/BrowserScrollbar.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData8 = { packageName: "@ui5/webcomponents", fileName: "themes/BrowserScrollbar.css.ts", content: `:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar:horizontal{height:var(--sapScrollBar_Dimension)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar:vertical{width:var(--sapScrollBar_Dimension)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar{background-color:var(--sapScrollBar_TrackColor);border-left:var(--browser_scrollbar_border)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar-thumb{border-radius:var(--browser_scrollbar_border_radius);background-color:var(--sapScrollBar_FaceColor)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar-thumb:hover{background-color:var(--sapScrollBar_Hover_FaceColor)}:not(.ui5-content-native-scrollbars) ::-webkit-scrollbar-corner{background-color:var(--sapScrollBar_TrackColor)}
` };
var BrowserScrollbar_css_default = styleData8;

// node_modules/@ui5/webcomponents/dist/generated/themes/PopupsCommon.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData9 = { packageName: "@ui5/webcomponents", fileName: "themes/PopupsCommon.css.ts", content: `:host{display:none;position:fixed;background:var(--sapGroup_ContentBackground);border-radius:var(--_ui5-v1-24-2_popup_border_radius);min-height:2rem;box-sizing:border-box}.ui5-popup-root{background:inherit;border-radius:inherit;width:100%;height:100%;box-sizing:border-box;display:flex;flex-direction:column;overflow:hidden;outline:none;justify-content:space-between}.ui5-popup-root .ui5-popup-header-root{color:var(--sapPageHeader_TextColor);box-shadow:var(--_ui5-v1-24-2_popup_header_shadow);border-bottom:var(--_ui5-v1-24-2_popup_header_border)}.ui5-popup-content{color:var(--sapTextColor);flex:auto}.ui5-popup-footer-root{background:var(--sapPageFooter_Background);border-top:1px solid var(--sapPageFooter_BorderColor);color:var(--sapPageFooter_TextColor)}.ui5-popup-header-root,.ui5-popup-footer-root,:host([header-text]) .ui5-popup-header-text{margin:0;font-size:1rem;font-family:"72override",var(--_ui5-v1-24-2_popup_header_font_family);display:flex;justify-content:center;align-items:center}.ui5-popup-header-root .ui5-popup-header-text{font-weight:var(--_ui5-v1-24-2_popup_header_font_weight)}.ui5-popup-content{overflow:auto;box-sizing:border-box}:host([header-text]) .ui5-popup-header-text{text-align:center;min-height:var(--_ui5-v1-24-2_popup_default_header_height);max-height:var(--_ui5-v1-24-2_popup_default_header_height);line-height:var(--_ui5-v1-24-2_popup_default_header_height);text-overflow:ellipsis;overflow:hidden;white-space:nowrap;max-width:100%;display:inline-block}:host([header-text]) .ui5-popup-header-root{justify-content:var(--_ui5-v1-24-2_popup_header_prop_header_text_alignment)}:host(:not([header-text])) .ui5-popup-header-text{display:none}:host([disable-scrolling]) .ui5-popup-content{overflow:hidden}:host([media-range="S"]) .ui5-popup-content{padding:1rem var(--_ui5-v1-24-2_popup_content_padding_s)}:host([media-range="M"]) .ui5-popup-content,:host([media-range="L"]) .ui5-popup-content{padding:1rem var(--_ui5-v1-24-2_popup_content_padding_m_l)}:host([media-range="XL"]) .ui5-popup-content{padding:1rem var(--_ui5-v1-24-2_popup_content_padding_xl)}.ui5-popup-header-root{background:var(--_ui5-v1-24-2_popup_header_background)}:host([media-range="S"]) .ui5-popup-header-root,:host([media-range="S"]) .ui5-popup-footer-root{padding-left:var(--_ui5-v1-24-2_popup_header_footer_padding_s);padding-right:var(--_ui5-v1-24-2_popup_header_footer_padding_s)}:host([media-range="M"]) .ui5-popup-header-root,:host([media-range="L"]) .ui5-popup-header-root,:host([media-range="M"]) .ui5-popup-footer-root,:host([media-range="L"]) .ui5-popup-footer-root{padding-left:var(--_ui5-v1-24-2_popup_header_footer_padding_m_l);padding-right:var(--_ui5-v1-24-2_popup_header_footer_padding_m_l)}:host([media-range="XL"]) .ui5-popup-header-root,:host([media-range="XL"]) .ui5-popup-footer-root{padding-left:var(--_ui5-v1-24-2_popup_header_footer_padding_xl);padding-right:var(--_ui5-v1-24-2_popup_header_footer_padding_xl)}
` };
var PopupsCommon_css_default = styleData9;

// node_modules/@ui5/webcomponents/dist/generated/themes/Popover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData10 = { packageName: "@ui5/webcomponents", fileName: "themes/Popover.css.ts", content: `:host{box-shadow:var(--_ui5-v1-24-2_popover_box_shadow);background-color:var(--_ui5-v1-24-2_popover_background);max-width:calc(100vw - (100vw - 100%) - 2 * var(--_ui5-v1-24-2_popup_viewport_margin))}:host([hide-arrow]){box-shadow:var(--_ui5-v1-24-2_popover_no_arrow_box_shadow)}:host([opened][actual-placement-type="Top"]){margin-top:var(--_ui5-v1-24-2-popover-margin-bottom)}:host([opened][actual-placement-type="Bottom"]){margin-top:var(--_ui5-v1-24-2-popover-margin-top)}:host([actual-placement-type="Bottom"]) .ui5-popover-arrow{left:calc(50% - .5625rem);top:-.5rem;height:.5625rem}:host([actual-placement-type="Bottom"]) .ui5-popover-arrow:after{margin:var(--_ui5-v1-24-2_popover_upward_arrow_margin)}:host([actual-placement-type="Left"]) .ui5-popover-arrow{top:calc(50% - .5625rem);right:-.5625rem;width:.5625rem}:host([actual-placement-type="Left"]) .ui5-popover-arrow:after{margin:var(--_ui5-v1-24-2_popover_right_arrow_margin)}:host([actual-placement-type="Top"]) .ui5-popover-arrow{left:calc(50% - .5625rem);height:.5625rem;top:100%}:host([actual-placement-type="Top"]) .ui5-popover-arrow:after{margin:var(--_ui5-v1-24-2_popover_downward_arrow_margin)}:host(:not([actual-placement-type])) .ui5-popover-arrow,:host([actual-placement-type="Right"]) .ui5-popover-arrow{left:-.5625rem;top:calc(50% - .5625rem);width:.5625rem;height:1rem}:host(:not([actual-placement-type])) .ui5-popover-arrow:after,:host([actual-placement-type="Right"]) .ui5-popover-arrow:after{margin:var(--_ui5-v1-24-2_popover_left_arrow_margin)}:host([hide-arrow]) .ui5-popover-arrow{display:none}.ui5-popover-root{min-width:6.25rem}.ui5-popover-arrow{pointer-events:none;display:block;width:1rem;height:1rem;position:absolute;overflow:hidden}.ui5-popover-arrow:after{content:"";display:block;width:.7rem;height:.7rem;background-color:var(--_ui5-v1-24-2_popover_background);box-shadow:var(--_ui5-v1-24-2_popover_box_shadow);transform:rotate(-45deg)}
` };
var Popover_css_default = styleData10;

// node_modules/@ui5/webcomponents/dist/Popover.js
var __decorate5 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Popover_1;
var ARROW_SIZE = 8;
var Popover = Popover_1 = class Popover2 extends Popup_default {
  static get VIEWPORT_MARGIN() {
    return 10;
  }
  constructor() {
    super();
  }
  onAfterRendering() {
    super.onAfterRendering();
    if (!this.isOpen() && this.open) {
      let opener;
      if (this.opener instanceof HTMLElement) {
        opener = this.opener;
      } else if (typeof this.opener === "string") {
        opener = this.getRootNode().getElementById(this.opener) || document.getElementById(this.opener);
      }
      if (!opener) {
        console.warn("Valid opener id is required.");
        return;
      }
      this.showAt(opener);
    } else if (this.isOpen() && !this.open) {
      this.close();
    }
  }
  isOpenerClicked(e) {
    const target = e.target;
    if (target === this._opener) {
      return true;
    }
    const ui5ElementTarget = target;
    if (ui5ElementTarget.getFocusDomRef && ui5ElementTarget.getFocusDomRef() === this._opener) {
      return true;
    }
    return e.composedPath().indexOf(this._opener) > -1;
  }
  /**
   * Shows the popover.
   * @param opener the element that the popover is shown at
   * @param [preventInitialFocus=false] prevents applying the focus inside the popover
   * @public
   * @returns Resolved when the popover is open
   */
  async showAt(opener, preventInitialFocus = false) {
    if (!opener || this.opened) {
      return;
    }
    this._opener = opener;
    this._openerRect = opener.getBoundingClientRect();
    await super._open(preventInitialFocus);
  }
  /**
   * Override for the _addOpenedPopup hook, which would otherwise just call addOpenedPopup(this)
   * @private
   */
  _addOpenedPopup() {
    addOpenedPopover(this);
  }
  /**
   * Override for the _removeOpenedPopup hook, which would otherwise just call removeOpenedPopup(this)
   * @private
   */
  _removeOpenedPopup() {
    removeOpenedPopover(this);
  }
  shouldCloseDueToOverflow(placement, openerRect) {
    const threshold = 32;
    const limits = {
      "Right": openerRect.right,
      "Left": openerRect.left,
      "Top": openerRect.top,
      "Bottom": openerRect.bottom
    };
    const closedPopupParent = getClosedPopupParent(this._opener);
    let overflowsBottom = false;
    let overflowsTop = false;
    if (closedPopupParent.showAt) {
      const contentRect = closedPopupParent.contentDOM.getBoundingClientRect();
      overflowsBottom = openerRect.top > contentRect.top + contentRect.height;
      overflowsTop = openerRect.top + openerRect.height < contentRect.top;
    }
    return limits[placement] < 0 || limits[placement] + threshold > closedPopupParent.innerHeight || overflowsBottom || overflowsTop;
  }
  shouldCloseDueToNoOpener(openerRect) {
    return openerRect.top === 0 && openerRect.bottom === 0 && openerRect.left === 0 && openerRect.right === 0;
  }
  isOpenerOutsideViewport(openerRect) {
    return openerRect.bottom < 0 || openerRect.top > window.innerHeight || openerRect.right < 0 || openerRect.left > window.innerWidth;
  }
  /**
   * @override
   */
  _resize() {
    super._resize();
    if (this.opened) {
      this.reposition();
    }
  }
  reposition() {
    this._show();
  }
  _show() {
    if (!this.opened) {
      this._showOutsideViewport();
    }
    const popoverSize = this.getPopoverSize();
    let placement;
    if (popoverSize.width === 0 || popoverSize.height === 0) {
      return;
    }
    if (this.isOpen()) {
      this._openerRect = this._opener.getBoundingClientRect();
    }
    if (this.shouldCloseDueToNoOpener(this._openerRect) && this.isFocusWithin() && this._oldPlacement) {
      placement = this._oldPlacement;
    } else {
      placement = this.calcPlacement(this._openerRect, popoverSize);
    }
    if (this._preventRepositionAndClose || this.isOpenerOutsideViewport(this._openerRect)) {
      return this.close();
    }
    this._oldPlacement = placement;
    this.actualPlacementType = placement.placementType;
    let left = clamp_default(this._left, Popover_1.VIEWPORT_MARGIN, document.documentElement.clientWidth - popoverSize.width - Popover_1.VIEWPORT_MARGIN);
    if (this.actualPlacementType === PopoverPlacementType_default.Right) {
      left = Math.max(left, this._left);
    }
    let top = clamp_default(this._top, Popover_1.VIEWPORT_MARGIN, document.documentElement.clientHeight - popoverSize.height - Popover_1.VIEWPORT_MARGIN);
    if (this.actualPlacementType === PopoverPlacementType_default.Bottom) {
      top = Math.max(top, this._top);
    }
    this.arrowTranslateX = placement.arrow.x;
    this.arrowTranslateY = placement.arrow.y;
    top = this._adjustForIOSKeyboard(top);
    const containingBlockClientLocation = this._getContainingBlockClientLocation();
    left -= containingBlockClientLocation.left;
    top -= containingBlockClientLocation.top;
    Object.assign(this.style, {
      top: `${top}px`,
      left: `${left}px`
    });
    if (this.horizontalAlign === PopoverHorizontalAlign_default.Stretch && this._width) {
      this.style.width = this._width;
    }
  }
  /**
   * Adjust the desired top position to compensate for shift of the screen
   * caused by opened keyboard on iOS which affects all elements with position:fixed.
   * @private
   * @param top The target top in px.
   * @returns The adjusted top in px.
   */
  _adjustForIOSKeyboard(top) {
    if (!isIOS()) {
      return top;
    }
    const actualTop = Math.ceil(this.getBoundingClientRect().top);
    return top + (Number.parseInt(this.style.top || "0") - actualTop);
  }
  _getContainingBlockClientLocation() {
    let parentElement = getParentElement_default(this);
    while (parentElement) {
      if (isElementContainingBlock_default(parentElement)) {
        return parentElement.getBoundingClientRect();
      }
      parentElement = getParentElement_default(parentElement);
    }
    return { left: 0, top: 0 };
  }
  getPopoverSize() {
    const rect = this.getBoundingClientRect(), width = rect.width, height = rect.height;
    return { width, height };
  }
  _showOutsideViewport() {
    Object.assign(this.style, {
      display: this._displayProp,
      top: "-10000px",
      left: "-10000px"
    });
  }
  get arrowDOM() {
    return this.shadowRoot.querySelector(".ui5-popover-arrow");
  }
  /**
   * @private
   */
  calcPlacement(targetRect, popoverSize) {
    let left = Popover_1.VIEWPORT_MARGIN;
    let top = 0;
    const allowTargetOverlap = this.allowTargetOverlap;
    const clientWidth = document.documentElement.clientWidth;
    const clientHeight = document.documentElement.clientHeight;
    let maxHeight = clientHeight;
    let maxWidth = clientWidth;
    const placementType = this.getActualPlacementType(targetRect, popoverSize);
    this._preventRepositionAndClose = this.shouldCloseDueToNoOpener(targetRect) || this.shouldCloseDueToOverflow(placementType, targetRect);
    const isVertical = placementType === PopoverPlacementType_default.Top || placementType === PopoverPlacementType_default.Bottom;
    if (this.horizontalAlign === PopoverHorizontalAlign_default.Stretch && isVertical) {
      popoverSize.width = targetRect.width;
      this._width = `${targetRect.width}px`;
    } else if (this.verticalAlign === PopoverVerticalAlign_default.Stretch && !isVertical) {
      popoverSize.height = targetRect.height;
    }
    const arrowOffset = this.hideArrow ? 0 : ARROW_SIZE;
    switch (placementType) {
      case PopoverPlacementType_default.Top:
        left = this.getVerticalLeft(targetRect, popoverSize);
        top = Math.max(targetRect.top - popoverSize.height - arrowOffset, 0);
        if (!allowTargetOverlap) {
          maxHeight = targetRect.top - arrowOffset;
        }
        break;
      case PopoverPlacementType_default.Bottom:
        left = this.getVerticalLeft(targetRect, popoverSize);
        top = targetRect.bottom + arrowOffset;
        if (allowTargetOverlap) {
          top = Math.max(Math.min(top, clientHeight - popoverSize.height), 0);
        } else {
          maxHeight = clientHeight - targetRect.bottom - arrowOffset;
        }
        break;
      case PopoverPlacementType_default.Left:
        left = Math.max(targetRect.left - popoverSize.width - arrowOffset, 0);
        top = this.getHorizontalTop(targetRect, popoverSize);
        if (!allowTargetOverlap) {
          maxWidth = targetRect.left - arrowOffset;
        }
        break;
      case PopoverPlacementType_default.Right:
        left = targetRect.left + targetRect.width + arrowOffset;
        top = this.getHorizontalTop(targetRect, popoverSize);
        if (allowTargetOverlap) {
          left = Math.max(Math.min(left, clientWidth - popoverSize.width), 0);
        } else {
          maxWidth = clientWidth - targetRect.right - arrowOffset;
        }
        break;
    }
    if (isVertical) {
      if (popoverSize.width > clientWidth || left < Popover_1.VIEWPORT_MARGIN) {
        left = Popover_1.VIEWPORT_MARGIN;
      } else if (left + popoverSize.width > clientWidth - Popover_1.VIEWPORT_MARGIN) {
        left = clientWidth - Popover_1.VIEWPORT_MARGIN - popoverSize.width;
      }
    } else {
      if (popoverSize.height > clientHeight || top < 0) {
        top = 0;
      } else if (top + popoverSize.height > clientHeight) {
        top -= top + popoverSize.height - clientHeight;
      }
    }
    this._maxHeight = Math.round(maxHeight - Popover_1.VIEWPORT_MARGIN);
    this._maxWidth = Math.round(maxWidth - Popover_1.VIEWPORT_MARGIN);
    if (this._left === void 0 || Math.abs(this._left - left) > 1.5) {
      this._left = Math.round(left);
    }
    if (this._top === void 0 || Math.abs(this._top - top) > 1.5) {
      this._top = Math.round(top);
    }
    const borderRadius = Number.parseInt(window.getComputedStyle(this).getPropertyValue("border-radius"));
    const arrowPos = this.getArrowPosition(targetRect, popoverSize, left, top, isVertical, borderRadius);
    return {
      arrow: arrowPos,
      top: this._top,
      left: this._left,
      placementType
    };
  }
  /**
   * Calculates the position for the arrow.
   * @private
   * @param targetRect BoundingClientRect of the target element
   * @param popoverSize Width and height of the popover
   * @param left Left offset of the popover
   * @param top Top offset of the popover
   * @param isVertical If the popover is positioned vertically to the target element
   * @param borderRadius Value of the border-radius property
   * @returns  Arrow's coordinates
   */
  getArrowPosition(targetRect, popoverSize, left, top, isVertical, borderRadius) {
    const horizontalAlign = this._actualHorizontalAlign;
    let arrowXCentered = horizontalAlign === PopoverHorizontalAlign_default.Center || horizontalAlign === PopoverHorizontalAlign_default.Stretch;
    if (horizontalAlign === PopoverHorizontalAlign_default.Right && left <= targetRect.left) {
      arrowXCentered = true;
    }
    if (horizontalAlign === PopoverHorizontalAlign_default.Left && left + popoverSize.width >= targetRect.left + targetRect.width) {
      arrowXCentered = true;
    }
    let arrowTranslateX = 0;
    if (isVertical && arrowXCentered) {
      arrowTranslateX = targetRect.left + targetRect.width / 2 - left - popoverSize.width / 2;
    }
    let arrowTranslateY = 0;
    if (!isVertical) {
      arrowTranslateY = targetRect.top + targetRect.height / 2 - top - popoverSize.height / 2;
    }
    const safeRangeForArrowY = popoverSize.height / 2 - borderRadius - ARROW_SIZE / 2;
    arrowTranslateY = clamp_default(arrowTranslateY, -safeRangeForArrowY, safeRangeForArrowY);
    const safeRangeForArrowX = popoverSize.width / 2 - borderRadius - ARROW_SIZE / 2;
    arrowTranslateX = clamp_default(arrowTranslateX, -safeRangeForArrowX, safeRangeForArrowX);
    return {
      x: Math.round(arrowTranslateX),
      y: Math.round(arrowTranslateY)
    };
  }
  /**
   * Fallbacks to new placement, prioritizing `Left` and `Right` placements.
   * @private
   */
  fallbackPlacement(clientWidth, clientHeight, targetRect, popoverSize) {
    if (targetRect.left > popoverSize.width) {
      return PopoverPlacementType_default.Left;
    }
    if (clientWidth - targetRect.right > targetRect.left) {
      return PopoverPlacementType_default.Right;
    }
    if (clientHeight - targetRect.bottom > popoverSize.height) {
      return PopoverPlacementType_default.Bottom;
    }
    if (clientHeight - targetRect.bottom < targetRect.top) {
      return PopoverPlacementType_default.Top;
    }
  }
  getActualPlacementType(targetRect, popoverSize) {
    const placementType = this.placementType;
    let actualPlacementType = placementType;
    const clientWidth = document.documentElement.clientWidth;
    const clientHeight = document.documentElement.clientHeight;
    switch (placementType) {
      case PopoverPlacementType_default.Top:
        if (targetRect.top < popoverSize.height && targetRect.top < clientHeight - targetRect.bottom) {
          actualPlacementType = PopoverPlacementType_default.Bottom;
        }
        break;
      case PopoverPlacementType_default.Bottom:
        if (clientHeight - targetRect.bottom < popoverSize.height && clientHeight - targetRect.bottom < targetRect.top) {
          actualPlacementType = PopoverPlacementType_default.Top;
        }
        break;
      case PopoverPlacementType_default.Left:
        if (targetRect.left < popoverSize.width) {
          actualPlacementType = this.fallbackPlacement(clientWidth, clientHeight, targetRect, popoverSize) || placementType;
        }
        break;
      case PopoverPlacementType_default.Right:
        if (clientWidth - targetRect.right < popoverSize.width) {
          actualPlacementType = this.fallbackPlacement(clientWidth, clientHeight, targetRect, popoverSize) || placementType;
        }
        break;
    }
    return actualPlacementType;
  }
  getVerticalLeft(targetRect, popoverSize) {
    const horizontalAlign = this._actualHorizontalAlign;
    let left = Popover_1.VIEWPORT_MARGIN;
    switch (horizontalAlign) {
      case PopoverHorizontalAlign_default.Center:
      case PopoverHorizontalAlign_default.Stretch:
        left = targetRect.left - (popoverSize.width - targetRect.width) / 2;
        break;
      case PopoverHorizontalAlign_default.Left:
        left = targetRect.left;
        break;
      case PopoverHorizontalAlign_default.Right:
        left = targetRect.right - popoverSize.width;
        break;
    }
    return left;
  }
  getHorizontalTop(targetRect, popoverSize) {
    let top = 0;
    switch (this.verticalAlign) {
      case PopoverVerticalAlign_default.Center:
      case PopoverVerticalAlign_default.Stretch:
        top = targetRect.top - (popoverSize.height - targetRect.height) / 2;
        break;
      case PopoverVerticalAlign_default.Top:
        top = targetRect.top;
        break;
      case PopoverVerticalAlign_default.Bottom:
        top = targetRect.bottom - popoverSize.height;
        break;
    }
    return top;
  }
  get isModal() {
    return this.modal;
  }
  get shouldHideBackdrop() {
    return this.hideBackdrop;
  }
  get _ariaLabelledBy() {
    if (!this._ariaLabel && this._displayHeader) {
      return "ui5-popup-header";
    }
    return void 0;
  }
  get styles() {
    return {
      ...super.styles,
      root: {
        "max-height": this._maxHeight ? `${this._maxHeight}px` : "",
        "max-width": this._maxWidth ? `${this._maxWidth}px` : ""
      },
      arrow: {
        transform: `translate(${this.arrowTranslateX}px, ${this.arrowTranslateY}px)`
      }
    };
  }
  get classes() {
    const allClasses = super.classes;
    allClasses.root["ui5-popover-root"] = true;
    return allClasses;
  }
  /**
   * Hook for descendants to hide header.
   */
  get _displayHeader() {
    return !!(this.header.length || this.headerText);
  }
  /**
   * Hook for descendants to hide footer.
   */
  get _displayFooter() {
    return true;
  }
  get _actualHorizontalAlign() {
    if (this.effectiveDir === "rtl") {
      if (this.horizontalAlign === PopoverHorizontalAlign_default.Left) {
        return PopoverHorizontalAlign_default.Right;
      }
      if (this.horizontalAlign === PopoverHorizontalAlign_default.Right) {
        return PopoverHorizontalAlign_default.Left;
      }
    }
    return this.horizontalAlign;
  }
};
__decorate5([
  property_default()
], Popover.prototype, "headerText", void 0);
__decorate5([
  property_default({ type: PopoverPlacementType_default, defaultValue: PopoverPlacementType_default.Right })
], Popover.prototype, "placementType", void 0);
__decorate5([
  property_default({ type: PopoverHorizontalAlign_default, defaultValue: PopoverHorizontalAlign_default.Center })
], Popover.prototype, "horizontalAlign", void 0);
__decorate5([
  property_default({ type: PopoverVerticalAlign_default, defaultValue: PopoverVerticalAlign_default.Center })
], Popover.prototype, "verticalAlign", void 0);
__decorate5([
  property_default({ type: Boolean })
], Popover.prototype, "modal", void 0);
__decorate5([
  property_default({ type: Boolean })
], Popover.prototype, "hideBackdrop", void 0);
__decorate5([
  property_default({ type: Boolean })
], Popover.prototype, "hideArrow", void 0);
__decorate5([
  property_default({ type: Boolean })
], Popover.prototype, "allowTargetOverlap", void 0);
__decorate5([
  property_default({ validator: DOMReference_default })
], Popover.prototype, "opener", void 0);
__decorate5([
  property_default({ type: Boolean })
], Popover.prototype, "disableScrolling", void 0);
__decorate5([
  property_default({ validator: Integer_default, defaultValue: 0, noAttribute: true })
], Popover.prototype, "arrowTranslateX", void 0);
__decorate5([
  property_default({ validator: Integer_default, defaultValue: 0, noAttribute: true })
], Popover.prototype, "arrowTranslateY", void 0);
__decorate5([
  property_default({ type: PopoverPlacementType_default, defaultValue: PopoverPlacementType_default.Right })
], Popover.prototype, "actualPlacementType", void 0);
__decorate5([
  property_default({ validator: Integer_default, noAttribute: true })
], Popover.prototype, "_maxHeight", void 0);
__decorate5([
  property_default({ validator: Integer_default, noAttribute: true })
], Popover.prototype, "_maxWidth", void 0);
__decorate5([
  slot_default({ type: HTMLElement })
], Popover.prototype, "header", void 0);
__decorate5([
  slot_default({ type: HTMLElement })
], Popover.prototype, "footer", void 0);
Popover = Popover_1 = __decorate5([
  customElement_default({
    tag: "ui5-popover",
    styles: [
      BrowserScrollbar_css_default,
      PopupsCommon_css_default,
      Popover_css_default
    ],
    template: PopoverTemplate_lit_default
  })
], Popover);
var instanceOfPopover = (object) => {
  return "showAt" in object;
};
Popover.define();
var Popover_default = Popover;

// node_modules/@ui5/webcomponents-icons/dist/v4/resize-corner.js
var name5 = "resize-corner";
var pathData7 = "M384 224v32q0 12-10 22L182 470q-10 10-22 10h-32zM224 480l160-160v32q0 12-10 22l-96 96q-10 10-22 10h-32zm160-64v32q0 12-10 22t-22 10h-32z";
var ltr5 = false;
var collection5 = "SAP-icons-v4";
var packageName5 = "@ui5/webcomponents-icons";
registerIcon(name5, { pathData: pathData7, ltr: ltr5, collection: collection5, packageName: packageName5 });

// node_modules/@ui5/webcomponents-icons/dist/v5/resize-corner.js
var name6 = "resize-corner";
var pathData8 = "M202 512q-11 0-18.5-7.5T176 486q0-10 8-18l204-205q7-7 18-7t18.5 7.5T432 282t-7 18L220 505q-7 7-18 7zm128 0q-11 0-18.5-7.5T304 486q0-10 8-18l76-77q7-7 18-7t18.5 7.5T432 410t-7 18l-77 77q-7 7-18 7z";
var ltr6 = false;
var collection6 = "SAP-icons-v5";
var packageName6 = "@ui5/webcomponents-icons";
registerIcon(name6, { pathData: pathData8, ltr: ltr6, collection: collection6, packageName: packageName6 });

// node_modules/@ui5/webcomponents-icons/dist/resize-corner.js
var pathData9 = isLegacyThemeFamily() ? pathData7 : pathData8;

// node_modules/@ui5/webcomponents-icons/dist/v4/error.js
var name7 = "error";
var pathData10 = "M512 256q0 53-20.5 100t-55 81.5-81 54.5-99.5 20-100-20.5-81.5-55T20 355 0 256q0-54 20-100.5t55-81T156.5 20 256 0t99.5 20T437 75t55 81.5 20 99.5zM399 364q6-6 0-12l-86-86q-6-6 0-12l81-81q6-6 0-12l-37-37q-2-2-6-2t-6 2l-83 82q-1 3-6 3-3 0-6-3l-84-83q-1-2-6-2-4 0-6 2l-37 37q-6 6 0 12l83 82q6 6 0 12l-83 82q-2 2-2.5 6t2.5 6l36 37q4 2 6 2 4 0 6-2l85-84q2-2 6-2t6 2l88 88q4 2 6 2t6-2z";
var ltr7 = false;
var accData5 = ICON_ERROR;
var collection7 = "SAP-icons-v4";
var packageName7 = "@ui5/webcomponents-icons";
registerIcon(name7, { pathData: pathData10, ltr: ltr7, accData: accData5, collection: collection7, packageName: packageName7 });

// node_modules/@ui5/webcomponents-icons/dist/v5/error.js
var name8 = "error";
var pathData11 = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm45 256l74-73q9-11 9-23 0-13-9.5-22.5T352 128q-12 0-23 9l-73 74-73-74q-10-9-23-9t-22.5 9.5T128 160q0 12 9 23l74 73-74 73q-9 10-9 23t9.5 22.5T160 384t23-9l73-74 73 74q11 9 23 9 13 0 22.5-9.5T384 352t-9-23z";
var ltr8 = false;
var accData6 = ICON_ERROR;
var collection8 = "SAP-icons-v5";
var packageName8 = "@ui5/webcomponents-icons";
registerIcon(name8, { pathData: pathData11, ltr: ltr8, accData: accData6, collection: collection8, packageName: packageName8 });

// node_modules/@ui5/webcomponents-icons/dist/error.js
var pathData12 = isLegacyThemeFamily() ? pathData10 : pathData11;

// node_modules/@ui5/webcomponents-icons/dist/v4/alert.js
var name9 = "alert";
var pathData13 = "M501 374q5 10 7.5 19.5T512 412v5q0 31-23 47t-50 16H74q-13 0-26-4t-23.5-12-17-20T0 417q0-13 4-22.5t9-20.5L198 38q21-38 61-38 38 0 59 38zM257 127q-13 0-23.5 8T223 161q1 7 2 12 3 25 4.5 48t3.5 61q0 11 7.5 16t16.5 5q22 0 23-21l2-36 9-85q0-18-10.5-26t-23.5-8zm0 299q20 0 31.5-12t11.5-32q0-19-11.5-31T257 339t-31.5 12-11.5 31q0 20 11.5 32t31.5 12z";
var ltr9 = false;
var collection9 = "SAP-icons-v4";
var packageName9 = "@ui5/webcomponents-icons";
registerIcon(name9, { pathData: pathData13, ltr: ltr9, collection: collection9, packageName: packageName9 });

// node_modules/@ui5/webcomponents-icons/dist/v5/alert.js
var name10 = "alert";
var pathData14 = "M505 399q7 13 7 27 0 21-15.5 37.5T456 480H56q-25 0-40.5-16.5T0 426q0-14 7-27L208 59q17-27 48-27 14 0 27 6.5T304 59zM288 176q0-14-9-23t-23-9-23 9-9 23v96q0 14 9 23t23 9 23-9 9-23v-96zm-32 240q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9z";
var ltr10 = false;
var collection10 = "SAP-icons-v5";
var packageName10 = "@ui5/webcomponents-icons";
registerIcon(name10, { pathData: pathData14, ltr: ltr10, collection: collection10, packageName: packageName10 });

// node_modules/@ui5/webcomponents-icons/dist/alert.js
var pathData15 = isLegacyThemeFamily() ? pathData13 : pathData14;

// node_modules/@ui5/webcomponents-icons/dist/v4/sys-enter-2.js
var name11 = "sys-enter-2";
var pathData16 = "M512 256q0 54-20 100.5t-54.5 81T356 492t-100 20q-54 0-100.5-20t-81-55T20 355.5 0 256t20.5-100 55-81.5T157 20t99-20q53 0 100 20t81.5 54.5T492 156t20 100zm-118-87q4-8-1-13l-36-36q-3-4-8-4t-8 5L237 294q-3 1-4 0l-70-52q-4-3-7-3t-4.5 2-2.5 3l-29 41q-6 8 2 14l113 95q2 2 7 2t8-4z";
var ltr11 = true;
var collection11 = "SAP-icons-v4";
var packageName11 = "@ui5/webcomponents-icons";
registerIcon(name11, { pathData: pathData16, ltr: ltr11, collection: collection11, packageName: packageName11 });

// node_modules/@ui5/webcomponents-icons/dist/v5/sys-enter-2.js
var name12 = "sys-enter-2";
var pathData17 = "M256 0q53 0 100 20t81.5 54.5T492 156t20 100-20 100-54.5 81.5T356 492t-100 20-100-20-81.5-54.5T20 356 0 256t20-100 54.5-81.5T156 20 256 0zm150 183q10-9 10-23 0-13-9.5-22.5T384 128t-22 9L186 308l-68-63q-9-9-22-9t-22.5 9.5T64 268q0 15 10 24l91 83q9 9 21 9 13 0 23-9z";
var ltr12 = true;
var collection12 = "SAP-icons-v5";
var packageName12 = "@ui5/webcomponents-icons";
registerIcon(name12, { pathData: pathData17, ltr: ltr12, collection: collection12, packageName: packageName12 });

// node_modules/@ui5/webcomponents-icons/dist/sys-enter-2.js
var pathData18 = isLegacyThemeFamily() ? pathData16 : pathData17;

// node_modules/@ui5/webcomponents-icons/dist/v4/information.js
var name13 = "information";
var pathData19 = "M0 256q0-53 20.5-100t55-81.5T157 20t99-20q54 0 100.5 20t81 55 54.5 81.5 20 99.5q0 54-20 100.5t-54.5 81T356 492t-100 20q-54 0-100.5-20t-81-55T20 355.5 0 256zm192 112v33h128v-33h-32V215q0-6-7-6h-88v31h32v128h-33zm34-201q14 11 30 11 17 0 29.5-11.5T298 138q0-19-13-31-12-12-29-12-19 0-30.5 12.5T214 138q0 17 12 29z";
var ltr13 = false;
var collection13 = "SAP-icons-v4";
var packageName13 = "@ui5/webcomponents-icons";
registerIcon(name13, { pathData: pathData19, ltr: ltr13, collection: collection13, packageName: packageName13 });

// node_modules/@ui5/webcomponents-icons/dist/v5/information.js
var name14 = "information";
var pathData20 = "M256 0q53 0 99.5 20T437 75t55 81.5 20 99.5-20 99.5-55 81.5-81.5 55-99.5 20-99.5-20T75 437t-55-81.5T0 256t20-99.5T75 75t81.5-55T256 0zm0 160q14 0 23-9t9-23-9-23-23-9-23 9-9 23 9 23 23 9zm32 64q0-14-9-23t-23-9-23 9-9 23v160q0 14 9 23t23 9 23-9 9-23V224z";
var ltr14 = false;
var collection14 = "SAP-icons-v5";
var packageName14 = "@ui5/webcomponents-icons";
registerIcon(name14, { pathData: pathData20, ltr: ltr14, collection: collection14, packageName: packageName14 });

// node_modules/@ui5/webcomponents-icons/dist/information.js
var pathData21 = isLegacyThemeFamily() ? pathData19 : pathData20;

// node_modules/@ui5/webcomponents/dist/generated/templates/DialogTemplate.lit.js
function block07(context, tags, suffix) {
  return effectiveHtml`<section style="${styleMap(this.styles.root)}" class="${classMap(this.classes.root)}" role="${ifDefined(this._role)}" aria-modal="${ifDefined(this._ariaModal)}" aria-label="${ifDefined(this._ariaLabel)}" aria-labelledby="${ifDefined(this._ariaLabelledBy)}" @keydown=${this._onkeydown} @focusout=${this._onfocusout} @mouseup=${this._onmouseup} @mousedown=${this._onmousedown}><span class="first-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToLast}></span>${this._displayHeader ? block15.call(this, context, tags, suffix) : void 0}<div style="${styleMap(this.styles.content)}" class="${classMap(this.classes.content)}"  @scroll="${this._scroll}" part="content"><slot></slot></div>${this.footer.length ? block102.call(this, context, tags, suffix) : void 0}${this._showResizeHandle ? block112.call(this, context, tags, suffix) : void 0}<span class="last-fe" data-ui5-focus-trap tabindex="0" @focusin=${this.forwardToFirst}></span></section> `;
}
function block15(context, tags, suffix) {
  return effectiveHtml`<header><div class="ui5-popup-header-root" id="ui5-popup-header" role="group" aria-describedby=${ifDefined(this.effectiveAriaDescribedBy)} aria-roledescription=${ifDefined(this.ariaRoleDescriptionHeaderText)} tabindex="${ifDefined(this._headerTabIndex)}" @keydown="${this._onDragOrResizeKeyDown}" @mousedown="${this._onDragMouseDown}" part="header" state="${ifDefined(this.state)}">${this.hasValueState ? block25.call(this, context, tags, suffix) : void 0}${this.header.length ? block34.call(this, context, tags, suffix) : block43.call(this, context, tags, suffix)}${this.resizable ? block53.call(this, context, tags, suffix) : block82.call(this, context, tags, suffix)}</div></header>`;
}
function block25(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-icon", tags, suffix)} class="ui5-dialog-value-state-icon" name="${ifDefined(this._dialogStateIcon)}"></${scopeTag("ui5-icon", tags, suffix)}>` : effectiveHtml`<ui5-icon class="ui5-dialog-value-state-icon" name="${ifDefined(this._dialogStateIcon)}"></ui5-icon>`;
}
function block34(context, tags, suffix) {
  return effectiveHtml`<slot name="header"></slot>`;
}
function block43(context, tags, suffix) {
  return effectiveHtml`<h1 id="ui5-popup-header-text" class="ui5-popup-header-text">${ifDefined(this.headerText)}</h1>`;
}
function block53(context, tags, suffix) {
  return effectiveHtml`${this.draggable ? block62.call(this, context, tags, suffix) : block72.call(this, context, tags, suffix)}`;
}
function block62(context, tags, suffix) {
  return effectiveHtml`<span id="${ifDefined(this._id)}-descr" aria-hidden="true" class="ui5-hidden-text">${ifDefined(this.ariaDescribedByHeaderTextDraggableAndResizable)}</span>`;
}
function block72(context, tags, suffix) {
  return effectiveHtml`<span id="${ifDefined(this._id)}-descr" aria-hidden="true" class="ui5-hidden-text">${ifDefined(this.ariaDescribedByHeaderTextResizable)}</span>`;
}
function block82(context, tags, suffix) {
  return effectiveHtml`${this.draggable ? block92.call(this, context, tags, suffix) : void 0}`;
}
function block92(context, tags, suffix) {
  return effectiveHtml`<span id="${ifDefined(this._id)}-descr" aria-hidden="true" class="ui5-hidden-text">${ifDefined(this.ariaDescribedByHeaderTextDraggable)}</span>`;
}
function block102(context, tags, suffix) {
  return effectiveHtml`<footer class="ui5-popup-footer-root" part="footer"><slot name="footer"></slot></footer>`;
}
function block112(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-icon", tags, suffix)} name="resize-corner" class="ui5-popup-resize-handle" @mousedown="${this._onResizeMouseDown}"></${scopeTag("ui5-icon", tags, suffix)}>` : effectiveHtml`<ui5-icon name="resize-corner" class="ui5-popup-resize-handle" @mousedown="${this._onResizeMouseDown}"></ui5-icon>`;
}
var DialogTemplate_lit_default = block07;

// node_modules/@ui5/webcomponents/dist/generated/themes/Dialog.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData11 = { packageName: "@ui5/webcomponents", fileName: "themes/Dialog.css.ts", content: `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}:host{min-width:20rem;min-height:6rem;max-height:94%;max-width:90%;flex-direction:column;box-shadow:var(--sapContent_Shadow3);border-radius:var(--sapElement_BorderCornerRadius)}:host([stretch]){width:90%;height:94%}:host([stretch][on-phone]){width:100%;height:100%;max-height:100%;max-width:100%;border-radius:0}:host([draggable]) .ui5-popup-header-root,:host([draggable]) ::slotted([slot="header"]){cursor:move}:host([draggable]) .ui5-popup-header-root *{cursor:auto}:host([draggable]) .ui5-popup-root{user-select:text}.ui5-popup-root{display:flex;flex-direction:column;max-width:100vw}.ui5-popup-header-root{position:relative}.ui5-popup-header-root:before{content:"";position:absolute;inset-block-start:auto;inset-block-end:0;inset-inline-start:0;inset-inline-end:0;height:var(--_ui5-v1-24-2_dialog_header_state_line_height);background:var(--sapObjectHeader_BorderColor)}:host([state="Error"]) .ui5-popup-header-root:before{background:var(--sapErrorBorderColor)}:host([state="Information"]) .ui5-popup-header-root:before{background:var(--sapInformationBorderColor)}:host([state="Success"]) .ui5-popup-header-root:before{background:var(--sapSuccessBorderColor)}:host([state="Warning"]) .ui5-popup-header-root:before{background:var(--sapWarningBorderColor)}.ui5-dialog-value-state-icon{margin-inline-end:.5rem;flex-shrink:0}:host([state="Error"]) .ui5-dialog-value-state-icon{color:var(--_ui5-v1-24-2_dialog_header_error_state_icon_color)}:host([state="Information"]) .ui5-dialog-value-state-icon{color:var(--_ui5-v1-24-2_dialog_header_information_state_icon_color)}:host([state="Success"]) .ui5-dialog-value-state-icon{color:var(--_ui5-v1-24-2_dialog_header_success_state_icon_color)}:host([state="Warning"]) .ui5-dialog-value-state-icon{color:var(--_ui5-v1-24-2_dialog_header_warning_state_icon_color)}.ui5-popup-header-root{outline:none}.ui5-popup-header-root:focus:after{content:"";position:absolute;left:var(--_ui5-v1-24-2_dialog_header_focus_left_offset);bottom:var(--_ui5-v1-24-2_dialog_header_focus_bottom_offset);right:var(--_ui5-v1-24-2_dialog_header_focus_right_offset);top:var(--_ui5-v1-24-2_dialog_header_focus_top_offset);border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--_ui5-v1-24-2_dialog_header_border_radius) var(--_ui5-v1-24-2_dialog_header_border_radius) 0 0;pointer-events:none}:host([stretch]) .ui5-popup-content{width:100%;height:100%}.ui5-popup-content{min-height:var(--_ui5-v1-24-2_dialog_content_min_height);flex:1 1 auto}.ui5-popup-resize-handle{position:absolute;bottom:var(--_ui5-v1-24-2_dialog_resize_handle_bottom);inset-inline-end:var(--_ui5-v1-24-2_dialog_resize_handle_right);cursor:var(--_ui5-v1-24-2_dialog_resize_cursor);color:var(--_ui5-v1-24-2_dialog_resize_handle_color)}::slotted([slot="footer"]){height:var(--_ui5-v1-24-2_dialog_footer_height)}::slotted([slot="footer"][ui5-bar][design="Footer"]){border-top:none}::slotted([slot="header"][ui5-bar]){box-shadow:none}
` };
var Dialog_css_default = styleData11;

// node_modules/@ui5/webcomponents/dist/Dialog.js
var __decorate6 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Dialog_1;
var STEP_SIZE = 16;
var ICON_PER_STATE = {
  [ValueState_default.Error]: "error",
  [ValueState_default.Warning]: "alert",
  [ValueState_default.Success]: "sys-enter-2",
  [ValueState_default.Information]: "information"
};
var Dialog = Dialog_1 = class Dialog2 extends Popup_default {
  constructor() {
    super();
    this._draggedOrResized = false;
    this._revertSize = () => {
      Object.assign(this.style, {
        top: "",
        left: "",
        width: "",
        height: ""
      });
    };
    this._screenResizeHandler = this._screenResize.bind(this);
    this._dragMouseMoveHandler = this._onDragMouseMove.bind(this);
    this._dragMouseUpHandler = this._onDragMouseUp.bind(this);
    this._resizeMouseMoveHandler = this._onResizeMouseMove.bind(this);
    this._resizeMouseUpHandler = this._onResizeMouseUp.bind(this);
    this._dragStartHandler = this._handleDragStart.bind(this);
  }
  static async onDefine() {
    Dialog_1.i18nBundle = await getI18nBundle("@ui5/webcomponents");
  }
  static _isHeader(element) {
    return element.classList.contains("ui5-popup-header-root") || element.getAttribute("slot") === "header";
  }
  /**
   * Shows the dialog.
   * @param [preventInitialFocus=false] Prevents applying the focus inside the popup
   * @public
   * @returns Resolves when the dialog is open
   */
  async show(preventInitialFocus = false) {
    await super._open(preventInitialFocus);
  }
  get isModal() {
    return true;
  }
  get shouldHideBackdrop() {
    return false;
  }
  get _ariaLabelledBy() {
    let ariaLabelledById;
    if (this.headerText !== "" && !this._ariaLabel) {
      ariaLabelledById = "ui5-popup-header-text";
    }
    return ariaLabelledById;
  }
  get ariaRoleDescriptionHeaderText() {
    return this.resizable || this.draggable ? Dialog_1.i18nBundle.getText(DIALOG_HEADER_ARIA_ROLE_DESCRIPTION) : void 0;
  }
  get effectiveAriaDescribedBy() {
    return this.resizable || this.draggable ? `${this._id}-descr` : void 0;
  }
  get ariaDescribedByHeaderTextResizable() {
    return Dialog_1.i18nBundle.getText(DIALOG_HEADER_ARIA_DESCRIBEDBY_RESIZABLE);
  }
  get ariaDescribedByHeaderTextDraggable() {
    return Dialog_1.i18nBundle.getText(DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE);
  }
  get ariaDescribedByHeaderTextDraggableAndResizable() {
    return Dialog_1.i18nBundle.getText(DIALOG_HEADER_ARIA_DESCRIBEDBY_DRAGGABLE_RESIZABLE);
  }
  get _displayProp() {
    return "flex";
  }
  /**
   * Determines if the header should be shown.
   */
  get _displayHeader() {
    return this.header.length || this.headerText || this.draggable || this.resizable;
  }
  get _movable() {
    return !this.stretch && this.onDesktop && (this.draggable || this.resizable);
  }
  get _headerTabIndex() {
    return this._movable ? "0" : void 0;
  }
  get _showResizeHandle() {
    return this.resizable && this.onDesktop;
  }
  get _minHeight() {
    let minHeight = Number.parseInt(window.getComputedStyle(this.contentDOM).minHeight);
    const header = this._root.querySelector(".ui5-popup-header-root");
    if (header) {
      minHeight += header.offsetHeight;
    }
    const footer = this._root.querySelector(".ui5-popup-footer-root");
    if (footer) {
      minHeight += footer.offsetHeight;
    }
    return minHeight;
  }
  get hasValueState() {
    return this.state !== ValueState_default.None;
  }
  get _dialogStateIcon() {
    return ICON_PER_STATE[this.state];
  }
  get _role() {
    if (this.accessibleRole === PopupAccessibleRole_default.None) {
      return void 0;
    }
    if (this.state === ValueState_default.Error || this.state === ValueState_default.Warning) {
      return PopupAccessibleRole_default.AlertDialog.toLowerCase();
    }
    return this.accessibleRole.toLowerCase();
  }
  _show() {
    super._show();
    this._center();
  }
  onBeforeRendering() {
    super.onBeforeRendering();
    this._isRTL = this.effectiveDir === "rtl";
    this.onPhone = isPhone();
    this.onDesktop = isDesktop();
  }
  onAfterRendering() {
    super.onAfterRendering();
    if (!this.isOpen() && this.open) {
      this.show();
    } else if (this.isOpen() && !this.open) {
      this.close();
    }
  }
  onEnterDOM() {
    super.onEnterDOM();
    this._attachScreenResizeHandler();
    this.addEventListener("dragstart", this._dragStartHandler);
  }
  onExitDOM() {
    super.onExitDOM();
    this._detachScreenResizeHandler();
    this.removeEventListener("dragstart", this._dragStartHandler);
  }
  /**
   * @override
   */
  _resize() {
    super._resize();
    if (!this._draggedOrResized) {
      this._center();
    }
  }
  _screenResize() {
    this._center();
  }
  _attachScreenResizeHandler() {
    if (!this._screenResizeHandlerAttached) {
      window.addEventListener("resize", this._screenResizeHandler);
      this._screenResizeHandlerAttached = true;
    }
  }
  _detachScreenResizeHandler() {
    if (this._screenResizeHandlerAttached) {
      window.removeEventListener("resize", this._screenResizeHandler);
      this._screenResizeHandlerAttached = false;
    }
  }
  _center() {
    const height = window.innerHeight - this.offsetHeight, width = window.innerWidth - this.offsetWidth;
    Object.assign(this.style, {
      top: `${Math.round(height / 2)}px`,
      left: `${Math.round(width / 2)}px`
    });
  }
  /**
   * Event handlers
   */
  _onDragMouseDown(e) {
    if (!this._movable || !this.draggable || !Dialog_1._isHeader(e.target)) {
      return;
    }
    e.preventDefault();
    const { top, left } = this.getBoundingClientRect();
    const { width, height } = window.getComputedStyle(this);
    Object.assign(this.style, {
      top: `${top}px`,
      left: `${left}px`,
      width: `${Math.round(Number.parseFloat(width) * 100) / 100}px`,
      height: `${Math.round(Number.parseFloat(height) * 100) / 100}px`
    });
    this._x = e.clientX;
    this._y = e.clientY;
    this._draggedOrResized = true;
    this._attachMouseDragHandlers();
  }
  _onDragMouseMove(e) {
    e.preventDefault();
    const { clientX, clientY } = e;
    const calcX = this._x - clientX;
    const calcY = this._y - clientY;
    const { left, top } = this.getBoundingClientRect();
    Object.assign(this.style, {
      left: `${Math.floor(left - calcX)}px`,
      top: `${Math.floor(top - calcY)}px`
    });
    this._x = clientX;
    this._y = clientY;
  }
  _onDragMouseUp() {
    delete this._x;
    delete this._y;
    this._detachMouseDragHandlers();
  }
  _onDragOrResizeKeyDown(e) {
    if (!this._movable || !Dialog_1._isHeader(e.target)) {
      return;
    }
    if (this.draggable && [isUp, isDown, isLeft, isRight].some((key) => key(e))) {
      this._dragWithEvent(e);
      return;
    }
    if (this.resizable && [isUpShift, isDownShift, isLeftShift, isRightShift].some((key) => key(e))) {
      this._resizeWithEvent(e);
    }
  }
  _dragWithEvent(e) {
    const { top, left, width, height } = this.getBoundingClientRect();
    let newPos = 0;
    let posDirection = "top";
    switch (true) {
      case isUp(e):
        newPos = top - STEP_SIZE;
        posDirection = "top";
        break;
      case isDown(e):
        newPos = top + STEP_SIZE;
        posDirection = "top";
        break;
      case isLeft(e):
        newPos = left - STEP_SIZE;
        posDirection = "left";
        break;
      case isRight(e):
        newPos = left + STEP_SIZE;
        posDirection = "left";
        break;
    }
    newPos = clamp_default(newPos, 0, posDirection === "left" ? window.innerWidth - width : window.innerHeight - height);
    this.style[posDirection] = `${newPos}px`;
  }
  _resizeWithEvent(e) {
    this._draggedOrResized = true;
    this.addEventListener("ui5-before-close", this._revertSize, { once: true });
    const { top, left } = this.getBoundingClientRect(), style = window.getComputedStyle(this), minWidth = Number.parseFloat(style.minWidth), maxWidth = window.innerWidth - left, maxHeight = window.innerHeight - top;
    let width = Number.parseFloat(style.width), height = Number.parseFloat(style.height);
    switch (true) {
      case isUpShift(e):
        height -= STEP_SIZE;
        break;
      case isDownShift(e):
        height += STEP_SIZE;
        break;
      case isLeftShift(e):
        width -= STEP_SIZE;
        break;
      case isRightShift(e):
        width += STEP_SIZE;
        break;
    }
    width = clamp_default(width, minWidth, maxWidth);
    height = clamp_default(height, this._minHeight, maxHeight);
    Object.assign(this.style, {
      width: `${width}px`,
      height: `${height}px`
    });
  }
  _attachMouseDragHandlers() {
    window.addEventListener("mousemove", this._dragMouseMoveHandler);
    window.addEventListener("mouseup", this._dragMouseUpHandler);
  }
  _detachMouseDragHandlers() {
    window.removeEventListener("mousemove", this._dragMouseMoveHandler);
    window.removeEventListener("mouseup", this._dragMouseUpHandler);
  }
  _onResizeMouseDown(e) {
    if (!this._movable || !this.resizable) {
      return;
    }
    e.preventDefault();
    const { top, left } = this.getBoundingClientRect();
    const { width, height, minWidth } = window.getComputedStyle(this);
    this._initialX = e.clientX;
    this._initialY = e.clientY;
    this._initialWidth = Number.parseFloat(width);
    this._initialHeight = Number.parseFloat(height);
    this._initialTop = top;
    this._initialLeft = left;
    this._minWidth = Number.parseFloat(minWidth);
    this._cachedMinHeight = this._minHeight;
    Object.assign(this.style, {
      top: `${top}px`,
      left: `${left}px`
    });
    this._draggedOrResized = true;
    this._attachMouseResizeHandlers();
  }
  _onResizeMouseMove(e) {
    const { clientX, clientY } = e;
    let newWidth, newLeft;
    if (this._isRTL) {
      newWidth = clamp_default(this._initialWidth - (clientX - this._initialX), this._minWidth, this._initialLeft + this._initialWidth);
      newLeft = clamp_default(this._initialLeft + (clientX - this._initialX), 0, this._initialX + this._initialWidth - this._minWidth);
    } else {
      newWidth = clamp_default(this._initialWidth + (clientX - this._initialX), this._minWidth, window.innerWidth - this._initialLeft);
    }
    const newHeight = clamp_default(this._initialHeight + (clientY - this._initialY), this._cachedMinHeight, window.innerHeight - this._initialTop);
    Object.assign(this.style, {
      height: `${newHeight}px`,
      width: `${newWidth}px`,
      left: newLeft ? `${newLeft}px` : void 0
    });
  }
  _onResizeMouseUp() {
    delete this._initialX;
    delete this._initialY;
    delete this._initialWidth;
    delete this._initialHeight;
    delete this._initialTop;
    delete this._initialLeft;
    delete this._minWidth;
    delete this._cachedMinHeight;
    this._detachMouseResizeHandlers();
  }
  _handleDragStart(e) {
    if (this.draggable) {
      e.preventDefault();
    }
  }
  _attachMouseResizeHandlers() {
    window.addEventListener("mousemove", this._resizeMouseMoveHandler);
    window.addEventListener("mouseup", this._resizeMouseUpHandler);
    this.addEventListener("ui5-before-close", this._revertSize, { once: true });
  }
  _detachMouseResizeHandlers() {
    window.removeEventListener("mousemove", this._resizeMouseMoveHandler);
    window.removeEventListener("mouseup", this._resizeMouseUpHandler);
  }
};
__decorate6([
  property_default()
], Dialog.prototype, "headerText", void 0);
__decorate6([
  property_default({ type: Boolean })
], Dialog.prototype, "stretch", void 0);
__decorate6([
  property_default({ type: Boolean })
], Dialog.prototype, "draggable", void 0);
__decorate6([
  property_default({ type: Boolean })
], Dialog.prototype, "resizable", void 0);
__decorate6([
  property_default({ type: ValueState_default, defaultValue: ValueState_default.None })
], Dialog.prototype, "state", void 0);
__decorate6([
  property_default({ type: Boolean })
], Dialog.prototype, "onPhone", void 0);
__decorate6([
  property_default({ type: Boolean })
], Dialog.prototype, "onDesktop", void 0);
__decorate6([
  slot_default()
], Dialog.prototype, "header", void 0);
__decorate6([
  slot_default()
], Dialog.prototype, "footer", void 0);
Dialog = Dialog_1 = __decorate6([
  customElement_default({
    tag: "ui5-dialog",
    template: DialogTemplate_lit_default,
    styles: [
      BrowserScrollbar_css_default,
      PopupsCommon_css_default,
      Dialog_css_default
    ],
    dependencies: [
      Icon_default
    ]
  })
], Dialog);
Dialog.define();
var Dialog_default = Dialog;

// node_modules/@ui5/webcomponents/dist/types/TitleLevel.js
var TitleLevel;
(function(TitleLevel2) {
  TitleLevel2["H1"] = "H1";
  TitleLevel2["H2"] = "H2";
  TitleLevel2["H3"] = "H3";
  TitleLevel2["H4"] = "H4";
  TitleLevel2["H5"] = "H5";
  TitleLevel2["H6"] = "H6";
})(TitleLevel || (TitleLevel = {}));
var TitleLevel_default = TitleLevel;

// node_modules/@ui5/webcomponents/dist/types/WrappingType.js
var WrappingType;
(function(WrappingType2) {
  WrappingType2["None"] = "None";
  WrappingType2["Normal"] = "Normal";
})(WrappingType || (WrappingType = {}));
var WrappingType_default = WrappingType;

// node_modules/@ui5/webcomponents/dist/generated/templates/TitleTemplate.lit.js
function block08(context, tags, suffix) {
  return effectiveHtml`${this.h1 ? block16.call(this, context, tags, suffix) : void 0}${this.h2 ? block26.call(this, context, tags, suffix) : void 0}${this.h3 ? block35.call(this, context, tags, suffix) : void 0}${this.h4 ? block44.call(this, context, tags, suffix) : void 0}${this.h5 ? block54.call(this, context, tags, suffix) : void 0}${this.h6 ? block63.call(this, context, tags, suffix) : void 0}`;
}
function block16(context, tags, suffix) {
  return effectiveHtml`<h1 class="ui5-title-root"><span id="${ifDefined(this._id)}-inner"><slot></slot></span></h1>`;
}
function block26(context, tags, suffix) {
  return effectiveHtml`<h2 class="ui5-title-root"><span id="${ifDefined(this._id)}-inner"><slot></slot></span></h2>`;
}
function block35(context, tags, suffix) {
  return effectiveHtml`<h3 class="ui5-title-root"><span id="${ifDefined(this._id)}-inner"><slot></slot></span></h3>`;
}
function block44(context, tags, suffix) {
  return effectiveHtml`<h4 class="ui5-title-root"><span id="${ifDefined(this._id)}-inner"><slot></slot></span></h4>`;
}
function block54(context, tags, suffix) {
  return effectiveHtml`<h5 class="ui5-title-root"><span id="${ifDefined(this._id)}-inner"><slot></slot></span></h5>`;
}
function block63(context, tags, suffix) {
  return effectiveHtml`<h6 class="ui5-title-root"><span id="${ifDefined(this._id)}-inner"><slot></slot></span></h6>`;
}
var TitleTemplate_lit_default = block08;

// node_modules/@ui5/webcomponents/dist/generated/themes/Title.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData12 = { packageName: "@ui5/webcomponents", fileName: "themes/Title.css.ts", content: `:host(:not([hidden])){display:block;cursor:text}:host{max-width:100%;color:var(--sapGroup_TitleTextColor);font-size:var(--sapFontHeader2Size);font-family:"72override",var(--sapFontHeaderFamily);text-shadow:var(--sapContent_TextShadow)}.ui5-title-root{display:inline-block;position:relative;font-weight:400;font-size:inherit;box-sizing:border-box;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;max-width:100%;vertical-align:bottom;-webkit-margin-before:0;-webkit-margin-after:0;-webkit-margin-start:0;-webkit-margin-end:0;margin:0;cursor:inherit}:host([wrapping-type="Normal"]) .ui5-title-root,:host([wrapping-type="Normal"]) ::slotted(*){white-space:pre-line}::slotted(*){font-size:inherit;font-family:inherit;text-shadow:inherit}:host([level="H1"]){font-size:var(--sapFontHeader1Size)}:host([level="H2"]){font-size:var(--sapFontHeader2Size)}:host([level="H3"]){font-size:var(--sapFontHeader3Size)}:host([level="H4"]){font-size:var(--sapFontHeader4Size)}:host([level="H5"]){font-size:var(--sapFontHeader5Size)}:host([level="H6"]){font-size:var(--sapFontHeader6Size)}
` };
var Title_css_default = styleData12;

// node_modules/@ui5/webcomponents/dist/Title.js
var __decorate7 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Title = class Title2 extends UI5Element_default {
  get normalizedLevel() {
    return this.level.toLowerCase();
  }
  get h1() {
    return this.normalizedLevel === "h1";
  }
  get h2() {
    return this.normalizedLevel === "h2";
  }
  get h3() {
    return this.normalizedLevel === "h3";
  }
  get h4() {
    return this.normalizedLevel === "h4";
  }
  get h5() {
    return this.normalizedLevel === "h5";
  }
  get h6() {
    return this.normalizedLevel === "h6";
  }
};
__decorate7([
  property_default({ type: WrappingType_default, defaultValue: WrappingType_default.None })
], Title.prototype, "wrappingType", void 0);
__decorate7([
  property_default({ type: TitleLevel_default, defaultValue: TitleLevel_default.H2 })
], Title.prototype, "level", void 0);
Title = __decorate7([
  customElement_default({
    tag: "ui5-title",
    renderer: LitRenderer_default,
    template: TitleTemplate_lit_default,
    styles: Title_css_default
  })
], Title);
Title.define();
var Title_default = Title;

// node_modules/@ui5/webcomponents/dist/generated/themes/ResponsivePopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData13 = { packageName: "@ui5/webcomponents", fileName: "themes/ResponsivePopover.css.ts", content: `:host{--_ui5-v1-24-2_input_width: 100%;min-width:6.25rem;min-height:2rem}:host([opened]){display:inline-block}.ui5-responsive-popover-header{height:var(--_ui5-v1-24-2-responsive_popover_header_height);display:flex;justify-content:space-between;align-items:center;width:100%}.ui5-responsive-popover-header-text{width:calc(100% - var(--_ui5-v1-24-2_button_base_min_width))}.ui5-responsive-popover-header-no-title{justify-content:flex-end}
` };
var ResponsivePopover_css_default = styleData13;

// node_modules/@ui5/webcomponents/dist/ResponsivePopover.js
var __decorate8 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var ResponsivePopover_1;
var ResponsivePopover = ResponsivePopover_1 = class ResponsivePopover2 extends Popover_default {
  constructor() {
    super();
  }
  /**
   * Shows popover on desktop and dialog on mobile.
   * @param opener the element that the popover is shown at
   * @param [preventInitialFocus=false] Prevents applying the focus inside the popup
   * @public
   * @returns Resolves when the responsive popover is open
   */
  async showAt(opener, preventInitialFocus = false) {
    if (!isPhone()) {
      await super.showAt(opener, preventInitialFocus);
    } else {
      this.style.display = "contents";
      const nextZIndex = getNextZIndex();
      if (!nextZIndex) {
        return;
      }
      this.style.zIndex = nextZIndex.toString();
      await this._dialog.show(preventInitialFocus);
    }
  }
  /**
   * Closes the popover/dialog.
   * @public
   */
  close(escPressed = false, preventRegistryUpdate = false, preventFocusRestore = false) {
    if (!isPhone()) {
      super.close(escPressed, preventRegistryUpdate, preventFocusRestore);
    } else {
      this._dialog.close(escPressed, preventRegistryUpdate, preventFocusRestore);
    }
  }
  toggle(opener) {
    if (this.isOpen()) {
      return this.close();
    }
    this.showAt(opener);
  }
  /**
   * Tells if the responsive popover is open.
   * @public
   */
  isOpen() {
    return isPhone() && this._dialog ? this._dialog.isOpen() : super.isOpen();
  }
  get classes() {
    const allClasses = super.classes;
    allClasses.header = {
      "ui5-responsive-popover-header": true,
      "ui5-responsive-popover-header-no-title": !this.headerText
    };
    return allClasses;
  }
  get _dialog() {
    return this.shadowRoot.querySelector("[ui5-dialog]");
  }
  get contentDOM() {
    return isPhone() ? this._dialog.contentDOM : super.contentDOM;
  }
  get _isPhone() {
    return isPhone();
  }
  get _displayHeader() {
    return (isPhone() || !this.contentOnlyOnDesktop) && super._displayHeader;
  }
  get _displayFooter() {
    return isPhone() || !this.contentOnlyOnDesktop;
  }
  get _closeDialogAriaLabel() {
    return ResponsivePopover_1.i18nBundle.getText(RESPONSIVE_POPOVER_CLOSE_DIALOG_BUTTON);
  }
  _beforeDialogOpen(e) {
    this.open = true;
    this.opened = true;
    this._propagateDialogEvent(e);
  }
  _afterDialogClose(e) {
    this.open = false;
    this.opened = false;
    this._propagateDialogEvent(e);
  }
  _propagateDialogEvent(e) {
    const type = e.type.replace("ui5-", "");
    this.fireEvent(type, e.detail);
  }
  get isModal() {
    if (!isPhone()) {
      return super.isModal;
    }
    return this._dialog.isModal;
  }
  static async onDefine() {
    ResponsivePopover_1.i18nBundle = await getI18nBundle("@ui5/webcomponents");
  }
};
__decorate8([
  property_default({ type: Boolean })
], ResponsivePopover.prototype, "contentOnlyOnDesktop", void 0);
__decorate8([
  property_default({ type: Boolean })
], ResponsivePopover.prototype, "_hideHeader", void 0);
__decorate8([
  property_default({ type: Boolean })
], ResponsivePopover.prototype, "_hideCloseButton", void 0);
ResponsivePopover = ResponsivePopover_1 = __decorate8([
  customElement_default({
    tag: "ui5-responsive-popover",
    styles: [Popover_default.styles, ResponsivePopover_css_default],
    template: ResponsivePopoverTemplate_lit_default,
    dependencies: [
      ...Popover_default.dependencies,
      Button_default,
      Dialog_default,
      Title_default
    ]
  })
], ResponsivePopover);
ResponsivePopover.define();
var ResponsivePopover_default = ResponsivePopover;

// node_modules/@ui5/webcomponents-localization/dist/dates/getDaysInMonth.js
var getDaysInMonth = (date) => {
  const tempCalendarDate = new CalendarDate_default(date);
  tempCalendarDate.setDate(1);
  tempCalendarDate.setMonth(tempCalendarDate.getMonth() + 1);
  tempCalendarDate.setDate(0);
  return tempCalendarDate.getDate();
};
var getDaysInMonth_default = getDaysInMonth;

// node_modules/@ui5/webcomponents-localization/dist/dates/transformDateToSecondaryType.js
var transformDateToSecondaryType = (primaryCalendarType, secondaryCalendarType, timeStamp, hasYearPicker) => {
  let firstDate = CalendarDate_default.fromLocalJSDate(UI5Date_default2.getInstance(timeStamp * 1e3), primaryCalendarType);
  let lastDate = CalendarDate_default.fromLocalJSDate(UI5Date_default2.getInstance(timeStamp * 1e3), primaryCalendarType);
  firstDate.setDate(1);
  if (hasYearPicker) {
    firstDate.setMonth(0);
    lastDate.setMonth(11);
  }
  lastDate.setDate(getDaysInMonth_default(lastDate));
  firstDate = new CalendarDate_default(firstDate, secondaryCalendarType);
  lastDate = new CalendarDate_default(lastDate, secondaryCalendarType);
  return { firstDate, lastDate };
};
var transformDateToSecondaryType_default = transformDateToSecondaryType;

// node_modules/@ui5/webcomponents-localization/dist/dates/convertMonthNumbersToMonthNames.js
var convertMonthNumbersToMonthNames = (firstMonth, lastMonth, calendarType) => {
  const localeData = getCachedLocaleDataInstance_default(getLocale_default());
  const pattern = localeData.getIntervalPattern("");
  const secondaryMonthsNames = localeData.getMonthsStandAlone("abbreviated", calendarType);
  const secondaryMonthsNamesWide = localeData.getMonthsStandAlone("wide", calendarType);
  if (firstMonth === lastMonth) {
    return {
      text: localeData.getMonths("abbreviated", calendarType)[firstMonth],
      textInfo: localeData.getMonths("wide", calendarType)[firstMonth]
    };
  }
  return {
    text: pattern.replace(/\{0\}/, secondaryMonthsNames[firstMonth]).replace(/\{1\}/, secondaryMonthsNames[lastMonth]),
    textInfo: pattern.replace(/\{0\}/, secondaryMonthsNamesWide[firstMonth]).replace(/\{1\}/, secondaryMonthsNamesWide[lastMonth])
  };
};
var convertMonthNumbersToMonthNames_default = convertMonthNumbersToMonthNames;

// node_modules/@ui5/webcomponents/dist/CalendarDate.js
var __decorate9 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarDate2 = class CalendarDate3 extends UI5Element_default {
};
__decorate9([
  property_default()
], CalendarDate2.prototype, "value", void 0);
CalendarDate2 = __decorate9([
  customElement_default("ui5-date")
], CalendarDate2);
CalendarDate2.define();
var CalendarDate_default2 = CalendarDate2;

// node_modules/@ui5/webcomponents/dist/CalendarPart.js
var __decorate10 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarPart = class CalendarPart2 extends DateComponentBase_default {
  get _minTimestamp() {
    return this._minDate.valueOf() / 1e3;
  }
  get _maxTimestamp() {
    return this._maxDate.valueOf() / 1e3;
  }
  /**
   * Returns the effective timestamp to be used by the respective calendar part
   * @protected
   */
  get _timestamp() {
    let timestamp = this.timestamp !== void 0 ? this.timestamp : getTodayUTCTimestamp_default(this._primaryCalendarType);
    if (this._maxTimestamp && this._maxTimestamp < timestamp) {
      timestamp = this._maxTimestamp;
    } else if (this._minTimestamp && this._minTimestamp > timestamp) {
      timestamp = this._minTimestamp;
    }
    return timestamp;
  }
  get _localDate() {
    return new Date(this._timestamp * 1e3);
  }
  /**
   * Returns a CalendarDate instance, representing the _timestamp getter - this date is central to all components' rendering logic
   * @protected
   */
  get _calendarDate() {
    return CalendarDate_default.fromTimestamp(this._localDate.getTime(), this._primaryCalendarType);
  }
  /**
   * Change a timestamp and enforce limits
   * @param timestamp
   * @protected
   */
  _safelySetTimestamp(timestamp) {
    const min = this._minDate.valueOf() / 1e3;
    const max = this._maxDate.valueOf() / 1e3;
    if (timestamp < min) {
      timestamp = min;
    }
    if (timestamp > max) {
      timestamp = max;
    }
    this.timestamp = timestamp;
  }
  /**
   * Modify a timestamp by a certain amount of days/months/years and enforce limits
   * @param amount
   * @param unit
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @protected
   */
  _safelyModifyTimestampBy(amount, unit, preserveDate) {
    const newDate = modifyDateBy_default(this._calendarDate, amount, unit, preserveDate);
    this._safelySetTimestamp(newDate.valueOf() / 1e3);
  }
  _getTimestampFromDom(domNode) {
    const oMonthDomRef = domNode.getAttribute("data-sap-timestamp");
    return parseInt(oMonthDomRef);
  }
};
__decorate10([
  property_default({ validator: Integer_default })
], CalendarPart.prototype, "timestamp", void 0);
CalendarPart = __decorate10([
  customElement_default()
], CalendarPart);
var CalendarPart_default = CalendarPart;

// node_modules/@ui5/webcomponents-icons/dist/v4/slim-arrow-left.js
var name15 = "slim-arrow-left";
var pathData22 = "M351.5 421q12 12 0 23-5 5-11 5t-11-5l-166-165q-9-10-9-23t9-23l165-164q5-5 11.5-5t11.5 5 5 11-5 11l-159 159q-6 6 0 12z";
var ltr15 = false;
var collection15 = "SAP-icons-v4";
var packageName15 = "@ui5/webcomponents-icons";
registerIcon(name15, { pathData: pathData22, ltr: ltr15, collection: collection15, packageName: packageName15 });

// node_modules/@ui5/webcomponents-icons/dist/v5/slim-arrow-left.js
var name16 = "slim-arrow-left";
var pathData23 = "M326 96q11 0 18.5 7.5T352 122q0 10-8 18L223 256l121 116q8 8 8 18 0 11-7.5 18.5T326 416q-10 0-17-7L168 274q-8-6-8-18 0-11 8-19l141-134q7-7 17-7z";
var ltr16 = false;
var collection16 = "SAP-icons-v5";
var packageName16 = "@ui5/webcomponents-icons";
registerIcon(name16, { pathData: pathData23, ltr: ltr16, collection: collection16, packageName: packageName16 });

// node_modules/@ui5/webcomponents-icons/dist/slim-arrow-left.js
var pathData24 = isLegacyThemeFamily() ? pathData22 : pathData23;

// node_modules/@ui5/webcomponents-icons/dist/v4/slim-arrow-right.js
var name17 = "slim-arrow-right";
var pathData25 = "M357.5 233q10 10 10 23t-10 23l-165 165q-12 11-23 0t0-23l160-159q6-6 0-12l-159-159q-5-5-5-11t5-11 11-5 11 5z";
var ltr17 = false;
var collection17 = "SAP-icons-v4";
var packageName17 = "@ui5/webcomponents-icons";
registerIcon(name17, { pathData: pathData25, ltr: ltr17, collection: collection17, packageName: packageName17 });

// node_modules/@ui5/webcomponents-icons/dist/v5/slim-arrow-right.js
var name18 = "slim-arrow-right";
var pathData26 = "M186 416q-11 0-18.5-7.5T160 390q0-10 8-18l121-116-121-116q-8-8-8-18 0-11 7.5-18.5T186 96q10 0 17 7l141 134q8 8 8 19 0 12-8 18L203 409q-7 7-17 7z";
var ltr18 = false;
var collection18 = "SAP-icons-v5";
var packageName18 = "@ui5/webcomponents-icons";
registerIcon(name18, { pathData: pathData26, ltr: ltr18, collection: collection18, packageName: packageName18 });

// node_modules/@ui5/webcomponents-icons/dist/slim-arrow-right.js
var pathData27 = isLegacyThemeFamily() ? pathData25 : pathData26;

// node_modules/@ui5/webcomponents/dist/generated/templates/CalendarHeaderTemplate.lit.js
function block09(context, tags, suffix) {
  return suffix ? effectiveHtml`<div class="ui5-calheader-root"><div data-ui5-cal-header-btn-prev class="${classMap(this.classes.prevButton)}" role="button" @mousedown=${this.onPrevButtonClick} title="${ifDefined(this._prevButtonText)}"><${scopeTag("ui5-icon", tags, suffix)} class="ui5-calheader-arrowicon" name="slim-arrow-left"></${scopeTag("ui5-icon", tags, suffix)}></div><div class="ui5-calheader-midcontainer"><div data-ui5-cal-header-btn-month class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" ?hidden="${this.isMonthButtonHidden}" tabindex="0" role="button" aria-label="${ifDefined(this.accInfo.ariaLabelMonthButton)}" @click=${this.onMonthButtonClick} @keydown=${this.onMonthButtonKeyDown} @keyup=${this.onMonthButtonKeyUp}><span>${ifDefined(this._monthButtonText)}</span>${this.hasSecondaryCalendarType ? block17.call(this, context, tags, suffix) : void 0}</div><div data-ui5-cal-header-btn-year class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" ?hidden="${this.isYearButtonHidden}" tabindex="0" role="button" @click=${this.onYearButtonClick} @keydown=${this.onYearButtonKeyDown} @keyup=${this.onYearButtonKeyUp}><span>${ifDefined(this._yearButtonText)}</span>${this.hasSecondaryCalendarType ? block27.call(this, context, tags, suffix) : void 0}</div></div><div data-ui5-cal-header-btn-next class="${classMap(this.classes.nextButton)}" role="button" @mousedown=${this.onNextButtonClick} title=${ifDefined(this._nextButtonText)}><${scopeTag("ui5-icon", tags, suffix)} class="ui5-calheader-arrowicon" name="slim-arrow-right"></${scopeTag("ui5-icon", tags, suffix)}></div></div>` : effectiveHtml`<div class="ui5-calheader-root"><div data-ui5-cal-header-btn-prev class="${classMap(this.classes.prevButton)}" role="button" @mousedown=${this.onPrevButtonClick} title="${ifDefined(this._prevButtonText)}"><ui5-icon class="ui5-calheader-arrowicon" name="slim-arrow-left"></ui5-icon></div><div class="ui5-calheader-midcontainer"><div data-ui5-cal-header-btn-month class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" ?hidden="${this.isMonthButtonHidden}" tabindex="0" role="button" aria-label="${ifDefined(this.accInfo.ariaLabelMonthButton)}" @click=${this.onMonthButtonClick} @keydown=${this.onMonthButtonKeyDown} @keyup=${this.onMonthButtonKeyUp}><span>${ifDefined(this._monthButtonText)}</span>${this.hasSecondaryCalendarType ? block17.call(this, context, tags, suffix) : void 0}</div><div data-ui5-cal-header-btn-year class="ui5-calheader-arrowbtn ui5-calheader-middlebtn" ?hidden="${this.isYearButtonHidden}" tabindex="0" role="button" @click=${this.onYearButtonClick} @keydown=${this.onYearButtonKeyDown} @keyup=${this.onYearButtonKeyUp}><span>${ifDefined(this._yearButtonText)}</span>${this.hasSecondaryCalendarType ? block27.call(this, context, tags, suffix) : void 0}</div></div><div data-ui5-cal-header-btn-next class="${classMap(this.classes.nextButton)}" role="button" @mousedown=${this.onNextButtonClick} title=${ifDefined(this._nextButtonText)}><ui5-icon class="ui5-calheader-arrowicon" name="slim-arrow-right"></ui5-icon></div></div>`;
}
function block17(context, tags, suffix) {
  return effectiveHtml`<span class="ui5-calheader-btn-sectext">${ifDefined(this._secondMonthButtonText)}</span>`;
}
function block27(context, tags, suffix) {
  return effectiveHtml`<span class="ui5-calheader-btn-sectext">${ifDefined(this._yearButtonTextSecType)}</span>`;
}
var CalendarHeaderTemplate_lit_default = block09;

// node_modules/@ui5/webcomponents/dist/generated/themes/CalendarHeader.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData14 = { packageName: "@ui5/webcomponents", fileName: "themes/CalendarHeader.css.ts", content: `:host{display:block;width:100%;height:100%}.ui5-calheader-root{display:flex;height:100%;padding:var(--_ui5-v1-24-2_calendar_header_padding);box-sizing:border-box}.ui5-calheader-arrowbtn{display:flex;justify-content:center;align-items:center;width:var(--_ui5-v1-24-2_calendar_header_arrow_button_width);background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor);cursor:pointer;overflow:hidden;white-space:nowrap;padding:0;font-size:var(--sapFontSize);user-select:none}.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:hover,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:active,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled:focus,.ui5-calheader-arrowbtn.ui5-calheader-arrowbtn-disabled{opacity:.4;cursor:default;outline:none;background-color:var(--sapButton_Lite_Background);color:var(--sapButton_Lite_TextColor)}[hidden].ui5-calheader-arrowbtn.ui5-calheader-middlebtn{display:none}.ui5-calheader-arrowbtn:focus{outline:none}.ui5-calheader-arrowbtn:hover{background-color:var(--sapButton_Hover_Background);color:var(--sapButton_Lite_TextColor);box-shadow:var(--_ui5-v1-24-2_calendar_header_arrow_button_box_shadow)}.ui5-calheader-arrowbtn:active{background-color:var(--sapButton_Active_Background);color:var(--sapButton_Active_TextColor)}.ui5-calheader-arrowbtn,.ui5-calheader-middlebtn{border:var(--_ui5-v1-24-2_calendar_header_arrow_button_border);border-radius:var(--_ui5-v1-24-2_calendar_header_arrow_button_border_radius);display:flex;background-color:var(--sapButton_Lite_Background);border-color:var(--sapButton_Lite_BorderColor)}.ui5-calheader-middlebtn{flex-direction:column;align-items:center;justify-content:center}.ui5-calheader-arrowbtn:not(:active) .ui5-calheader-btn-sectext{color:var(--sapNeutralElementColor);font-size:var(--sapFontSmallSize)}.ui5-calheader-arrowicon{color:currentColor;pointer-events:none}.ui5-calheader-midcontainer{display:flex;justify-content:space-around;flex:1 1 auto;padding:0 .5rem}.ui5-calheader-midcontainer .ui5-calheader-middlebtn:first-child{margin-inline-end:.5rem}.ui5-calheader-middlebtn{font-family:var(--_ui5-v1-24-2_button_fontFamily);width:var(--_ui5-v1-24-2_calendar_header_middle_button_width);flex:var(--_ui5-v1-24-2_calendar_header_middle_button_flex);position:relative;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ui5-calheader-middlebtn:focus{border:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_border);border-radius:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_border_radius);outline:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_outline);outline-offset:-.125rem;background:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_background)}.ui5-calheader-middlebtn:focus:active{outline:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_active_outline);outline-offset:-.0625rem;background:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_active_background)}.ui5-calheader-middlebtn:focus:after{content:"";display:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_after_display);width:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_after_width);height:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_after_height);border:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_after_border);position:absolute;top:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_after_top_offset);left:var(--_ui5-v1-24-2_calendar_header_middle_button_focus_after_left_offset)}.ui5-calheader-middlebtn:focus:active:after{border-color:var(--sapContent_ContrastFocusColor)}
` };
var CalendarHeader_css_default = styleData14;

// node_modules/@ui5/webcomponents/dist/CalendarHeader.js
var __decorate11 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarHeader_1;
var CalendarHeader = CalendarHeader_1 = class CalendarHeader2 extends UI5Element_default {
  static async onDefine() {
    CalendarHeader_1.i18nBundle = await getI18nBundle("@ui5/webcomponents");
  }
  constructor() {
    super();
  }
  onBeforeRendering() {
    this._prevButtonText = CalendarHeader_1.i18nBundle.getText(CALENDAR_HEADER_PREVIOUS_BUTTON);
    this._nextButtonText = CalendarHeader_1.i18nBundle.getText(CALENDAR_HEADER_NEXT_BUTTON);
    if (this.hasSecondaryCalendarType) {
      this._secondMonthButtonText = this.buttonTextForSecondaryCalendarType.monthButtonText;
      this._secondYearButtonText = this.buttonTextForSecondaryCalendarType.yearButtonText;
    }
  }
  onPrevButtonClick(e) {
    if (this.isPrevButtonDisabled) {
      e.preventDefault();
      return;
    }
    this.fireEvent("previous-press", e);
    e.preventDefault();
  }
  onNextButtonClick(e) {
    if (this.isNextButtonDisabled) {
      e.preventDefault();
      return;
    }
    this.fireEvent("next-press", e);
    e.preventDefault();
  }
  onMonthButtonClick(e) {
    this.fireEvent("show-month-press", e);
  }
  onMonthButtonKeyDown(e) {
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isEnter(e)) {
      this.fireEvent("show-month-press", e);
    }
  }
  onMonthButtonKeyUp(e) {
    if (isSpace(e)) {
      e.preventDefault();
      this.fireEvent("show-month-press", e);
    }
  }
  onYearButtonClick(e) {
    this.fireEvent("show-year-press", e);
  }
  onYearButtonKeyDown(e) {
    if (isSpace(e)) {
      e.preventDefault();
    }
    if (isEnter(e)) {
      this.fireEvent("show-year-press", e);
    }
  }
  onYearButtonKeyUp(e) {
    if (isSpace(e)) {
      e.preventDefault();
      this.fireEvent("show-year-press", e);
    }
  }
  get hasSecondaryCalendarType() {
    return !!this.secondaryCalendarType && this.secondaryCalendarType !== this.primaryCalendarType;
  }
  get classes() {
    return {
      prevButton: {
        "ui5-calheader-arrowbtn": true,
        "ui5-calheader-arrowbtn-disabled": this.isPrevButtonDisabled
      },
      nextButton: {
        "ui5-calheader-arrowbtn": true,
        "ui5-calheader-arrowbtn-disabled": this.isNextButtonDisabled
      }
    };
  }
  get accInfo() {
    return {
      ariaLabelMonthButton: this.hasSecondaryCalendarType ? `${this._monthButtonText}, ${this.buttonTextForSecondaryCalendarType.monthButtonInfo}` : `${this._monthButtonText}`
    };
  }
};
__decorate11([
  property_default({ validator: Integer_default })
], CalendarHeader.prototype, "timestamp", void 0);
__decorate11([
  property_default({ type: CalendarType_default })
], CalendarHeader.prototype, "primaryCalendarType", void 0);
__decorate11([
  property_default({ type: CalendarType_default })
], CalendarHeader.prototype, "secondaryCalendarType", void 0);
__decorate11([
  property_default({ type: Object })
], CalendarHeader.prototype, "buttonTextForSecondaryCalendarType", void 0);
__decorate11([
  property_default({ type: Boolean })
], CalendarHeader.prototype, "isNextButtonDisabled", void 0);
__decorate11([
  property_default({ type: Boolean })
], CalendarHeader.prototype, "isPrevButtonDisabled", void 0);
__decorate11([
  property_default({ type: Boolean })
], CalendarHeader.prototype, "isMonthButtonHidden", void 0);
__decorate11([
  property_default()
], CalendarHeader.prototype, "_monthButtonText", void 0);
__decorate11([
  property_default()
], CalendarHeader.prototype, "_yearButtonText", void 0);
__decorate11([
  property_default()
], CalendarHeader.prototype, "_yearButtonTextSecType", void 0);
__decorate11([
  property_default({ type: Boolean })
], CalendarHeader.prototype, "isYearButtonHidden", void 0);
CalendarHeader = CalendarHeader_1 = __decorate11([
  customElement_default({
    tag: "ui5-calendar-header",
    languageAware: true,
    renderer: LitRenderer_default,
    template: CalendarHeaderTemplate_lit_default,
    styles: CalendarHeader_css_default,
    dependencies: [Icon_default]
  }),
  event_default("next-press"),
  event_default("previous-press"),
  event_default("show-month-press"),
  event_default("show-year-press")
], CalendarHeader);
CalendarHeader.define();
var CalendarHeader_default = CalendarHeader;

// node_modules/@ui5/webcomponents-localization/dist/dates/calculateWeekNumber.js
var calculateWeekNumber = (confFirstDayOfWeek, oDate, iYear, oLocale, oLocaleData) => {
  let iWeekNum = 0;
  let iWeekDay = 0;
  const iFirstDayOfWeek = Number.isInteger(confFirstDayOfWeek) ? confFirstDayOfWeek : oLocaleData.getFirstDayOfWeek();
  if (oLocale && (oLocale.getLanguage() === "en" && oLocale.getRegion() === "US")) {
    const oJanFirst = new UniversalDate_default2(oDate.getTime());
    oJanFirst.setUTCFullYear(iYear, 0, 1);
    iWeekDay = oJanFirst.getUTCDay();
    const oCheckDate = new UniversalDate_default2(oDate.getTime());
    oCheckDate.setUTCDate(oCheckDate.getUTCDate() - oCheckDate.getUTCDay() + iWeekDay);
    iWeekNum = Math.round((oCheckDate.getTime() - oJanFirst.getTime()) / 864e5 / 7) + 1;
  } else {
    const oThursday = new UniversalDate_default2(oDate.getTime());
    oThursday.setUTCDate(oThursday.getUTCDate() - iFirstDayOfWeek);
    iWeekDay = oThursday.getUTCDay();
    oThursday.setUTCDate(oThursday.getUTCDate() - iWeekDay + 4);
    const oFirstDayOfYear = new UniversalDate_default2(oThursday.getTime());
    oFirstDayOfYear.setUTCMonth(0, 1);
    iWeekDay = oFirstDayOfYear.getUTCDay();
    let iAddDays = 0;
    if (iWeekDay > 4) {
      iAddDays = 7;
    }
    const oFirstThursday = new UniversalDate_default2(oFirstDayOfYear.getTime());
    oFirstThursday.setUTCDate(1 - iWeekDay + 4 + iAddDays);
    iWeekNum = Math.round((oThursday.getTime() - oFirstThursday.getTime()) / 864e5 / 7) + 1;
  }
  return iWeekNum;
};
var calculateWeekNumber_default = calculateWeekNumber;

// node_modules/@ui5/webcomponents/dist/types/CalendarSelectionMode.js
var CalendarSelectionMode;
(function(CalendarSelectionMode2) {
  CalendarSelectionMode2["Single"] = "Single";
  CalendarSelectionMode2["Multiple"] = "Multiple";
  CalendarSelectionMode2["Range"] = "Range";
})(CalendarSelectionMode || (CalendarSelectionMode = {}));
var CalendarSelectionMode_default = CalendarSelectionMode;

// node_modules/@ui5/webcomponents/dist/generated/templates/DayPickerTemplate.lit.js
function block010(context, tags, suffix) {
  return effectiveHtml`<div class="${classMap(this.classes.root)}" style="${styleMap(this.styles.wrapper)}" @keydown=${this._onkeydown} @keyup=${this._onkeyup} @click=${this._onclick} @mouseover=${this._onmouseover} @focusin=${this._onfocusin} @focusout=${this._onfocusout}><div id="${ifDefined(this._id)}-content" class="ui5-dp-content" role="grid" aria-roledescription="${ifDefined(this.ariaRoledescription)}"><div role="row" class="ui5-dp-days-names-container">${repeat(this._dayNames, (item, index) => item._id || index, (item, index) => block18.call(this, context, tags, suffix, item, index))}</div>${repeat(this._weeks, (item, index) => item._id || index, (item, index) => block28.call(this, context, tags, suffix, item, index))}</div></div>`;
}
function block18(context, tags, suffix, item, index) {
  return effectiveHtml`<div role="columnheader" aria-label="${ifDefined(item.name)}" class="${ifDefined(item.classes)}">${ifDefined(item.ultraShortName)}</div>`;
}
function block28(context, tags, suffix, item, index) {
  return effectiveHtml`${item.length ? block36.call(this, context, tags, suffix, item, index) : block103.call(this, context, tags, suffix, item, index)}`;
}
function block36(context, tags, suffix, item, index) {
  return effectiveHtml`<div class="ui5-dp-weeks-row" role="row">${repeat(item, (item2, index2) => item2._id || index2, (item2, index2) => block45.call(this, context, tags, suffix, item2, index2))}</div>`;
}
function block45(context, tags, suffix, item, index) {
  return effectiveHtml`${item.timestamp ? block55.call(this, context, tags, suffix, item, index) : block83.call(this, context, tags, suffix, item, index)}`;
}
function block55(context, tags, suffix, item, index) {
  return effectiveHtml`<div ?special-day="${item.type}" tabindex="${ifDefined(item._tabIndex)}" ?data-sap-focus-ref="${item.focusRef}" data-sap-timestamp="${ifDefined(item.timestamp)}" role="gridcell" aria-selected="${ifDefined(item.ariaSelected)}" aria-label="${ifDefined(item.ariaLabel)}" aria-disabled="${ifDefined(item.ariaDisabled)}" class="${ifDefined(item.classes)}"><span class="ui5-dp-daytext" data-sap-timestamp="${ifDefined(item.timestamp)}">${ifDefined(item.day)}</span>${item._isSecondaryCalendarType ? block64.call(this, context, tags, suffix, item, index) : void 0}${item.type ? block73.call(this, context, tags, suffix, item, index) : void 0}</div>`;
}
function block64(context, tags, suffix, item, index) {
  return effectiveHtml`<span class="ui5-dp-daytext ui5-dp-daysectext">${ifDefined(item.secondDay)}</span>`;
}
function block73(context, tags, suffix, item, index) {
  return effectiveHtml`<div class="ui5-dp-specialday ${ifDefined(item.type)}"></div>`;
}
function block83(context, tags, suffix, item, index) {
  return effectiveHtml`${!item.isHidden ? block93.call(this, context, tags, suffix, item, index) : void 0}`;
}
function block93(context, tags, suffix, item, index) {
  return effectiveHtml`<div class="ui5-dp-weekname-container" role="rowheader" aria-label="Calendar Week ${ifDefined(item.weekNum)}"><span class="ui5-dp-weekname">${ifDefined(item.weekNum)}</span></div>`;
}
function block103(context, tags, suffix, item, index) {
  return effectiveHtml`<div class="sapWCEmptyWeek"></div>`;
}
var DayPickerTemplate_lit_default = block010;

// node_modules/@ui5/webcomponents/dist/generated/themes/DayPicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData15 = { packageName: "@ui5/webcomponents", fileName: "themes/DayPicker.css.ts", content: `:host(:not([hidden])){display:block}:host{height:100%;width:100%}:host([hide-week-numbers]) .ui5-dp-content{flex-basis:100%}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item{flex-direction:column;justify-content:var(--_ui5-v1-24-2_day_picker_item_justify_content)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-daytext{height:1.5625rem;padding-inline-end:var(--_ui5-v1-24-2_dp_two_calendar_item_text_padding_top)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-daysectext{font-size:.75rem;height:var(--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_height);padding-block:var(--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_padding_block);padding-inline:50% .4375rem}.ui5-dp-weekname,.ui5-dp-dayname,.ui5-dp-item{width:var(--_ui5-v1-24-2_day_picker_item_width);height:var(--_ui5-v1-24-2_day_picker_item_height);margin-block-start:var(--_ui5-v1-24-2_daypicker_item_margin);margin-inline-end:var(--_ui5-v1-24-2_daypicker_item_margin);font-family:"72override",var(--sapFontFamily);border-radius:var(--_ui5-v1-24-2_daypicker_item_border_radius)}.ui5-dp-weekname{color:var(--_ui5-v1-24-2_daypicker_weekname_color)}.ui5-dp-weeks-row{display:flex}.ui5-dp-content{display:flex;flex-basis:87.5%;flex-direction:column;font-family:"72override",var(--sapFontFamily)}.ui5-dp-days-names-container{display:flex;height:var(--_ui5-v1-24-2_daypicker_daynames_container_height)}.ui5-dp-weeknumber-container{padding-block-start:var(--_ui5-v1-24-2_daypicker_weeknumbers_container_padding_top);flex-basis:12.5%}.ui5-dp-weekname,.ui5-dp-dayname,.ui5-dp-weekname-container,.ui5-dp-item{display:flex;flex-grow:1;justify-content:center;align-items:center;font-size:var(--sapFontSmallSize);outline:none;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none}.ui5-dp-item{position:relative;color:var(--sapTextColor);background:var(--sapLegend_WorkingBackground);font-size:var(--sapFontSize);border:var(--_ui5-v1-24-2_daypicker_item_border);border-radius:var(--_ui5-v1-24-2_daypicker_item_border_radius)}.ui5-dp-item:hover{background:var(--sapList_Hover_Background)}.ui5-dp-daytext{display:flex;width:100%;height:100%;justify-content:center;align-items:center;box-sizing:border-box}.ui5-dp-dayname{color:var(--_ui5-v1-24-2_daypicker_dayname_color);height:100%}.ui5-dp-item.ui5-dp-item--weeekend{background:var(--sapLegend_NonWorkingBackground)}.ui5-dp-item.ui5-dp-item--disabled{pointer-events:none;opacity:.5}.ui5-dp-item.ui5-dp-item--weeekend:hover{background:var(--sapList_Hover_Background);filter:var(--_ui5-v1-24-2_daypicker_item_weeekend_filter)}.ui5-dp-item.ui5-dp-item--othermonth{color:var(--_ui5-v1-24-2_daypicker_item_othermonth_color);background:var(--_ui5-v1-24-2_daypicker_item_othermonth_background_color);border-color:transparent}.ui5-dp-item.ui5-dp-item--othermonth:hover,.ui5-dp-item.ui5-dp-item--weeekend.ui5-dp-item--othermonth:hover{color:var(--_ui5-v1-24-2_daypicker_item_othermonth_hover_color);background:var(--sapList_Hover_Background)}.ui5-dp-item:focus:after{content:"";border:var(--_ui5-v1-24-2_daypicker_item_not_selected_focus_border);position:absolute;inset:var(--_ui5-v1-24-2_daypicker_item_no_selected_inset);outline:none;border-radius:var(--_ui5-v1-24-2_daypicker_item_border_radius_focus_after)}.ui5-dp-item.ui5-dp-item--now:before{position:absolute;inset:var(--_ui5-v1-24-2_daypicker_item_now_not_selected_inset);border:.125rem solid var(--_ui5-v1-24-2_daypicker_item_now_border_color);content:"";border-radius:var(--_ui5-v1-24-2_daypicker_item_border_radius);z-index:1}.ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected{box-shadow:var(--_ui5-v1-24-2_daypicker_item_now_box_shadow)}.ui5-dp-item.ui5-dp-item--selected{background:var(--sapContent_Selected_Background)}.ui5-dp-item.ui5-dp-item--selected:not(.ui5-dp-item.ui5-dp-item--now) .ui5-dp-daytext:after{position:absolute;inset:0;border:var(--_ui5-v1-24-2_daypicker_item_selected_border);content:"";border-radius:var(--_ui5-v1-24-2_daypicker_item_border_radius_item);z-index:1}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item.ui5-dp-item--now .ui5-dp-daytext{border:var(--_ui5-v1-24-2_day_picker_item_selected_now_border);outline:var(--_ui5-v1-24-2_daypicker_item_selected_text_outline);outline-offset:var(--_ui5-v1-24-2_daypicker_item_now_selected_outline_offset);border-radius:var(--_ui5-v1-24-2_daypicker_item_border_radius_item);font-family:var(--_ui5-v1-24-2_daypicker_item_selected_text_font)}.ui5-dp-item.ui5-dp-item--selected .ui5-dp-daytext{background:var(--_ui5-v1-24-2_daypicker_item_selected_background);color:var(--sapContent_Selected_TextColor);border-radius:var(--_ui5-v1-24-2_daypicker_item_border_radius);border:var(--_ui5-v1-24-2_daypicker_item_selected_text_border);font-family:var(--_ui5-v1-24-2_daypicker_item_selected_text_font)}.ui5-dp-item.ui5-dp-item--selected .ui5-dp-daytext{background:var(--_ui5-v1-24-2_daypicker_item_selected_daytext_hover_background);color:var(--sapContent_Selected_TextColor)}.ui5-dp-item.ui5-dp-item--now:focus:after{inset:var(--_ui5-v1-24-2_daypicker_item_now_inset);border-radius:var(--_ui5-v1-24-2_daypicker_item_now_border_radius_focus_after);border:var(--_ui5-v1-24-2_daypicker_item_now_border_focus_after);position:absolute;content:"";width:auto;height:auto}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now:focus:after{inset:var(--_ui5-v1-24-2_daypicker_item_now_inset);border-radius:var(--_ui5-v1-24-2_day_picker_item_selected_now_border_radius_focus);border:var(--_ui5-v1-24-2_day_picker_item_selected_now_border_focus);position:absolute;content:"";width:auto;height:auto}.ui5-dp-item.ui5-dp-item--selected:hover{background:var( --_ui5-v1-24-2_daypicker_item_selected_hover);color:var(--sapContent_ContrastTextColor)}.ui5-dp-item.ui5-dp-item--selected:focus:after{border-color:var(--_ui5-v1-24-2_daypicker_item_selected_focus_color);border-width:var(--_ui5-v1-24-2_daypicker_item_selected_focus_width)}.ui5-dp-items-container{outline:none}.ui5-dp-item.ui5-dp-item--selected-between .ui5-dp-daytext{border-radius:var(--_ui5-v1-24-2_daypicker_item_border_radius);color:var(--sapTextColor);font-weight:var(--_ui5-v1-24-2_daypicker_item_selected_between_text_font)}.ui5-dp-item.ui5-dp-item--selected-between.ui5-dp-item--now:not(.ui5-dp-item--selected) .ui5-dp-daytext:after{content:"";position:absolute;inset:var(--_ui5-v1-24-2_daypicker_item_now_selected_between_inset);border:var(--_ui5-v1-24-2_daypicker_item_now_selected_between_border);border-radius:var(--_ui5-v1-24-2_daypicker_item_now_selected_between_border_radius)}.ui5-dp-item.ui5-dp-item--selected-between{border:var(--_ui5-v1-24-2_daypicker_item_select_between_border);border-radius:var(--_ui5-v1-24-2_daypicker_item_selected_between_border);background:var(--_ui5-v1-24-2_daypicker_item_selected_between_background)}.ui5-dp-item.ui5-dp-item--selected-between:hover{background:var(--_ui5-v1-24-2_daypicker_item_selected_between_hover_background)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--selected-between:focus:after{border-color:var(--sapContent_FocusColor)}.ui5-dp-items-container>:first-child{justify-content:flex-end}.ui5-dp-emptyweek{height:var(--_ui5-v1-24-2_day_picker_empty_height)}.ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected.ui5-dp-item--withsecondtype:focus:after{outline-offset:-.1875rem;border-radius:var(--_ui5-v1-24-2-dp-item_withsecondtype_border)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now.ui5-dp-item--withsecondtype .ui5-dp-daysectext,.ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected.ui5-dp-item--withsecondtype .ui5-dp-daytext{border:none;outline:none}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected:not(.ui5-dp-item.ui5-dp-item--now) .ui5-dp-daytext:after{border-width:.0625rem}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--now .ui5-dp-daysectext{height:var(--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_height);padding-block-start:0;border-radius:var(--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_border_radios)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected.ui5-dp-item.ui5-dp-item--now .ui5-dp-daytext{border-radius:var(--_ui5-v1-24-2_daypicker_two_calendar_item_border_radius);margin-block-end:var(--_ui5-v1-24-2_daypicker_two_calendar_item_margin_bottom)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item:focus:after{inset:var(--_ui5-v1-24-2_daypicker_two_calendar_item_no_selected_inset);border-radius:var(--_ui5-v1-24-2_daypicker_two_calendar_item_border_focus_border_radius)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--now:after{inset:var(--_ui5-v1-24-2_daypicker_two_calendar_item_no_selected_focus_inset);border-radius:var(--_ui5-v1-24-2_daypicker_two_calendar_item_no_select_focus_border_radius)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected:focus:after{border-width:var(--_ui5-v1-24-2_daypicker_two_calendar_item_now_selected_border_width);inset:var(--_ui5-v1-24-2_daypicker_two_calendar_item_now_selected_border_inset);border-radius:var(--_ui5-v1-24-2_daypicker_two_calendar_item_border_focus_border_radius)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now:after{inset:var(--_ui5-v1-24-2_daypicker_two_calendar_item_now_inset);border-radius:var(--_ui5-v1-24-2_daypicker_two_calendar_item_selected_now_border_radius_focus)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--now.ui5-dp-item--selected.ui5-dp-item--withsecondtype .ui5-dp-daytext:not(.ui5-dp-daysectext):before{content:var(--_ui5-v1-24-2_daypicker_two_calendar_item_now_day_text_content);position:absolute;inset:.25rem;border-radius:var(--_ui5-v1-24-2_daypicker_two_calendar_item_selected_now_border_radius_focus);outline:var(--_ui5-v1-24-2_daypicker_item_selected__secondary_type_text_outline);z-index:1}.ui5-dp-specialday{width:100%;height:.375rem;position:absolute;box-sizing:border-box;inset-block-start:var(--_ui5-v1-24-2_daypicker_special_day_top);border-end-end-radius:var(--_ui5-v1-24-2_daypicker_special_day_border_bottom_radius);border-end-start-radius:var(--_ui5-v1-24-2_daypicker_special_day_border_bottom_radius);border-block-start:var(--_ui5-v1-24-2_daypicker_special_day_border_top)}.ui5-dp-item--selected .ui5-dp-specialday{width:var(--_ui5-v1-24-2_daypicker_selected_item_special_day_width)}.ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{inset-block-start:var(--_ui5-v1-24-2_daypicker_selected_item_now_special_day_top);width:var(--_ui5-v1-24-2_daypicker_selected_item_now_special_day_width);border-end-end-radius:var(--_ui5-v1-24-2_daypicker_selected_item_now_special_day_border_bottom_radius);border-end-start-radius:var(--_ui5-v1-24-2_daypicker_selected_item_now_special_day_border_bottom_radius)}.ui5-dp-item--now .ui5-dp-specialday,.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{height:.3125rem;border-end-end-radius:var(--_ui5-v1-24-2_daypicker_selected_item_now_special_day_border_bottom_radius_alternate);border-end-start-radius:var(--_ui5-v1-24-2_daypicker_selected_item_now_special_day_border_bottom_radius_alternate);inset-block-start:var(--_ui5-v1-24-2_daypicker_item_now_specialday_top);width:var(--_ui5-v1-24-2_daypicker_item_now_specialday_width)}.ui5-dp-item:not(:focus).ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{border-end-end-radius:var(--_ui5-v1-24-2_daypicker_special_day_selected_border_radius_bottom);border-end-start-radius:var(--_ui5-v1-24-2_daypicker_special_day_selected_border_radius_bottom)}.ui5-dp-item--now .ui5-dp-specialday{width:var(--_ui5-v1-24-2_daypicker_selected_item_now_special_day_width);inset-block-start:var(--_ui5-v1-24-2_daypicker_selected_item_now_special_day_top)}.ui5-dp-item[special-day].ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-daytext{border-radius:var(--_ui5-v1-24-2-daypicker_item_selected_now_border_radius)}.ui5-dp-item[special-day].ui5-dp-item--selected.ui5-dp-item--now:focus:after,.ui5-dp-item[special-day].ui5-dp-item--now:focus:after{margin:var(--_ui5-v1-24-2_daypicker_item_now_focus_margin)}.ui5-dp-item.ui5-dp-item--now:focus .ui5-dp-specialday{inset-block-start:var(--_ui5-v1-24-2_daypicker_specialday_focused_top);width:var(--_ui5-v1-24-2_daypicker_specialday_focused_width);border-end-end-radius:var(--_ui5-v1-24-2_daypicker_specialday_focused_border_bottom);border-end-start-radius:var(--_ui5-v1-24-2_daypicker_specialday_focused_border_bottom);height:.3125rem}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item[special-day].ui5-dp-item--selected.ui5-dp-item--now:after,.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item[special-day].ui5-dp-item--now:after{inset:var(--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_now_inset);border-radius:var(--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_now_border_radius);border-width:var(--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_after_border_width);border-color:var(--_ui5-v1-24-2_daypicker_item_selected_focus_color)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item[special-day].ui5-dp-item--now:not(.ui5-dp-item--selected):after{inset:.1875rem}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item .ui5-dp-specialday{inset-block-start:var(--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_top);inset-inline-end:var(--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_right)}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item:not(.ui5-dp-item--now) .ui5-dp-daysectext{padding-block:var(--_ui5-v1-24-2_dp_two_calendar_item_secondary_text_padding)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now.ui5-dp-item--withsecondtype:focus .ui5-dp-specialday{inset-block-start:var(--_ui5-v1-24-2_daypicker_item_now_selected_two_calendar_focus_special_day_top);inset-inline-end:var(--_ui5-v1-24-2_daypicker_item_now_selected_two_calendar_focus_special_day_right)}.ui5-dp-item.ui5-dp-item--selected.ui5-dp-item--now.ui5-dp-item--withsecondtype:focus .ui5-dp-daysectext{padding-block:var(--_ui5-v1-24-2_daypicker_item_now_selected_two_calendar_focus_secondary_text_padding_block)}.ui5-dp-item--withsecondtype .ui5-dp-daytext{font-size:.75rem}.ui5-dp-item.ui5-dp-item--withsecondtype .ui5-dp-specialday,.ui5-dp-item.ui5-dp-item--withsecondtype.ui5-dp-item--now:focus .ui5-dp-specialday,.ui5-dp-item.ui5-dp-item--withsecondtype:not(:focus).ui5-dp-item--selected.ui5-dp-item--now .ui5-dp-specialday{border-radius:100%;width:var(--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_dot);inset-block-start:var(--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_top);inset-inline-end:var(--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_right);height:var(--_ui5-v1-24-2_daypicker_twocalendar_item_special_day_dot);border-block-start:none}.ui5-dp-root.ui5-dp-twocalendartypes .ui5-dp-item.ui5-dp-item--selected.ui5-dp-item.ui5-dp-item--now:focus .ui5-dp-daytext{margin-block-end:var(--_ui5-v1-24-2_daypicker_two_calendar_item_selected_focus_margin_bottom);padding-inline-end:var(--_ui5-v1-24-2_daypicker_two_calendar_item_selected_focus_padding_right)}.Type01{background:var(--sapLegendColor1)}.Type02{background:var(--sapLegendColor2)}.Type03{background:var(--sapLegendColor3)}.Type04{background:var(--sapLegendColor4)}.Type05{background:var(--sapLegendColor5)}.Type06{background:var(--sapLegendColor6)}.Type07{background:var(--sapLegendColor7)}.Type08{background:var(--sapLegendColor8)}.Type09{background:var(--sapLegendColor9)}.Type10{background:var(--sapLegendColor10)}.Type11{background:var(--sapLegendColor11)}.Type12{background:var(--sapLegendColor12)}.Type13{background:var(--sapLegendColor13)}.Type14{background:var(--sapLegendColor14)}.Type15{background:var(--sapLegendColor15)}.Type16{background:var(--sapLegendColor16)}.Type17{background:var(--sapLegendColor17)}.Type18{background:var(--sapLegendColor18)}.Type19{background:var(--sapLegendColor19)}.Type20{background:var(--sapLegendColor20)}
` };
var DayPicker_css_default = styleData15;

// node_modules/@ui5/webcomponents/dist/DayPicker.js
var __decorate12 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DayPicker_1;
var isBetween = (x, num1, num2) => x > Math.min(num1, num2) && x < Math.max(num1, num2);
var DAYS_IN_WEEK = 7;
var DayPicker = DayPicker_1 = class DayPicker2 extends CalendarPart_default {
  onBeforeRendering() {
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    this._buildWeeks(localeData);
    this._buildDayNames(localeData);
  }
  /**
   * Builds the "_weeks" object that represents the month.
   * @param localeData
   * @private
   */
  _buildWeeks(localeData) {
    if (this._hidden) {
      return;
    }
    this._weeks = [];
    const firstDayOfWeek = this._getFirstDayOfWeek();
    const specialCalendarDates = this._specialCalendarDates;
    const monthsNames = localeData.getMonths("wide", this._primaryCalendarType);
    const secondaryMonthsNames = this.hasSecondaryCalendarType ? localeData.getMonths("wide", this.secondaryCalendarType) : [];
    const nonWorkingDayLabel = DayPicker_1.i18nBundle.getText(DAY_PICKER_NON_WORKING_DAY);
    const todayLabel = DayPicker_1.i18nBundle.getText(DAY_PICKER_TODAY);
    const tempDate = this._getFirstDay();
    const todayDate = CalendarDate_default.fromLocalJSDate(/* @__PURE__ */ new Date(), this._primaryCalendarType);
    const calendarDate = this._calendarDate;
    const minDate = this._minDate;
    const maxDate = this._maxDate;
    const tempSecondDate = this.hasSecondaryCalendarType ? this._getSecondaryDay(tempDate) : void 0;
    let week = [];
    for (let i = 0; i < DAYS_IN_WEEK * 6; i++) {
      const timestamp = tempDate.valueOf() / 1e3;
      let dayOfTheWeek = tempDate.getDay() - firstDayOfWeek;
      if (dayOfTheWeek < 0) {
        dayOfTheWeek += DAYS_IN_WEEK;
      }
      const specialCalendarDate = specialCalendarDates.find((specialDate) => specialDate.specialDateTimestamp === timestamp);
      const specialDayType = specialCalendarDate ? specialCalendarDate.type : "";
      const isFocused = tempDate.getMonth() === calendarDate.getMonth() && tempDate.getDate() === calendarDate.getDate();
      const isSelected = this._isDaySelected(timestamp);
      const isSelectedBetween = this._isDayInsideSelectionRange(timestamp);
      const isOtherMonth = tempDate.getMonth() !== calendarDate.getMonth();
      const isWeekend = this._isWeekend(tempDate);
      const isDisabled = tempDate.valueOf() < minDate.valueOf() || tempDate.valueOf() > maxDate.valueOf();
      const isToday = tempDate.isSame(todayDate);
      const isFirstDayOfWeek = tempDate.getDay() === firstDayOfWeek;
      const nonWorkingAriaLabel = isWeekend ? `${nonWorkingDayLabel} ` : "";
      const todayAriaLabel = isToday ? `${todayLabel} ` : "";
      const tempSecondDateNumber = tempSecondDate ? tempSecondDate.getDate() : "";
      const tempSecondYearNumber = tempSecondDate ? tempSecondDate.getYear() : "";
      const secondaryMonthsNamesString = secondaryMonthsNames.length > 0 ? secondaryMonthsNames[tempSecondDate.getMonth()] : "";
      const ariaLabel = this.hasSecondaryCalendarType ? `${todayAriaLabel}${nonWorkingAriaLabel}${monthsNames[tempDate.getMonth()]} ${tempDate.getDate()}, ${tempDate.getYear()}; ${secondaryMonthsNamesString} ${tempSecondDateNumber}, ${tempSecondYearNumber}` : `${todayAriaLabel}${nonWorkingAriaLabel}${monthsNames[tempDate.getMonth()]} ${tempDate.getDate()}, ${tempDate.getYear()}`;
      const day = {
        timestamp: timestamp.toString(),
        focusRef: isFocused,
        _tabIndex: isFocused ? "0" : "-1",
        selected: isSelected,
        day: tempDate.getDate(),
        secondDay: this.hasSecondaryCalendarType ? tempSecondDate.getDate() : void 0,
        _isSecondaryCalendarType: this.hasSecondaryCalendarType,
        classes: `ui5-dp-item ui5-dp-wday${dayOfTheWeek}`,
        ariaLabel,
        ariaSelected: isSelected ? "true" : "false",
        ariaDisabled: isOtherMonth ? "true" : void 0,
        disabled: isDisabled,
        type: specialDayType
      };
      if (isFirstDayOfWeek) {
        day.classes += " ui5-dp-firstday";
      }
      if (isSelected) {
        day.classes += " ui5-dp-item--selected";
      }
      if (isSelectedBetween) {
        day.classes += " ui5-dp-item--selected-between";
      }
      if (isToday) {
        day.classes += " ui5-dp-item--now";
      }
      if (isOtherMonth) {
        day.classes += " ui5-dp-item--othermonth";
      }
      if (isWeekend) {
        day.classes += " ui5-dp-item--weeekend";
      }
      if (isDisabled) {
        day.classes += " ui5-dp-item--disabled";
      }
      if (this.hasSecondaryCalendarType) {
        day.classes += " ui5-dp-item--withsecondtype";
      }
      week.push(day);
      if (dayOfTheWeek === DAYS_IN_WEEK - 1) {
        week.unshift({
          weekNum: calculateWeekNumber_default(getFirstDayOfWeek(), tempDate.toUTCJSDate(), tempDate.getYear(), getLocale_default(), localeData),
          isHidden: this.shouldHideWeekNumbers
        });
      }
      if (week.length === DAYS_IN_WEEK + 1) {
        this._weeks.push(week);
        week = [];
      }
      tempDate.setDate(tempDate.getDate() + 1);
      if (this.hasSecondaryCalendarType && tempSecondDate) {
        tempSecondDate.setDate(tempSecondDate.getDate() + 1);
      }
    }
  }
  /**
   * Builds the dayNames object (header of the month).
   * @param localeData
   * @private
   */
  _buildDayNames(localeData) {
    if (this._hidden) {
      return;
    }
    let dayOfTheWeek;
    const aDayNamesWide = localeData.getDays("wide", this._primaryCalendarType);
    let aDayNamesAbbreviated = localeData.getDays("abbreviated", this._primaryCalendarType);
    let dayName;
    if (this.namesTooLong(aDayNamesAbbreviated)) {
      aDayNamesAbbreviated = localeData.getDays("narrow", this._primaryCalendarType);
    }
    this._dayNames = [];
    this._dayNames.push({
      classes: "ui5-dp-dayname",
      name: DayPicker_1.i18nBundle.getText(DAY_PICKER_WEEK_NUMBER_TEXT)
    });
    for (let i = 0; i < DAYS_IN_WEEK; i++) {
      dayOfTheWeek = i + this._getFirstDayOfWeek();
      if (dayOfTheWeek > DAYS_IN_WEEK - 1) {
        dayOfTheWeek -= DAYS_IN_WEEK;
      }
      dayName = {
        name: aDayNamesWide[dayOfTheWeek],
        ultraShortName: aDayNamesAbbreviated[dayOfTheWeek],
        classes: "ui5-dp-dayname"
      };
      this._dayNames.push(dayName);
    }
    this._dayNames[1].classes += " ui5-dp-firstday";
    if (this.shouldHideWeekNumbers) {
      this._dayNames.shift();
    }
  }
  /**
   * Tells if any of the days is more than 4 characters(too long to render).
   * @param dayNames
   * @private
   */
  namesTooLong(dayNames) {
    return dayNames.some((dayName) => dayName.length > 4);
  }
  onAfterRendering() {
    if (this._autoFocus && !this._hidden) {
      this.focus();
    }
    const focusedDay = this.shadowRoot.querySelector("[data-sap-focus-ref]");
    if (focusedDay && document.activeElement !== focusedDay && this._specialCalendarDates.length === 0) {
      focusedDay.focus();
    }
  }
  _onfocusin() {
    this._autoFocus = true;
  }
  _onfocusout() {
    this._autoFocus = false;
  }
  /**
   * Tells if the day is selected (dark blue).
   * @param timestamp
   * @private
   */
  _isDaySelected(timestamp) {
    if (this.selectionMode === CalendarSelectionMode_default.Single) {
      return timestamp === this.selectedDates[0];
    }
    return this.selectedDates.includes(timestamp);
  }
  /**
   * Tells if the day is inside a selection range (light blue).
   * @param timestamp
   * @private
   */
  _isDayInsideSelectionRange(timestamp) {
    if (this.selectionMode !== CalendarSelectionMode_default.Range || !this.selectedDates.length) {
      return false;
    }
    if (this.selectedDates.length === 1 && this._secondTimestamp) {
      return isBetween(timestamp, this.selectedDates[0], this._secondTimestamp);
    }
    return isBetween(timestamp, this.selectedDates[0], this.selectedDates[1]);
  }
  /**
   * Selects/deselects a day.
   * @param e
   * @param isShift true if the user did Click+Shift or Enter+Shift (but not Space+Shift)
   * @private
   */
  _selectDate(e, isShift) {
    let target = e.target;
    if (!target.hasAttribute("data-sap-timestamp")) {
      target = target.parentNode;
    }
    if (!this._isDayPressed(target)) {
      return;
    }
    const timestamp = this._getTimestampFromDom(target);
    this._safelySetTimestamp(timestamp);
    this._updateSecondTimestamp();
    if (this.selectionMode === CalendarSelectionMode_default.Single) {
      this.selectedDates = [timestamp];
    } else if (this.selectionMode === CalendarSelectionMode_default.Multiple) {
      if (this.selectedDates.length > 0 && isShift) {
        this._multipleSelection(timestamp);
      } else {
        this._toggleTimestampInSelection(timestamp);
      }
    } else {
      this.selectedDates = this.selectedDates.length === 1 ? [...this.selectedDates, timestamp] : [timestamp];
    }
    this.fireEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  /**
   * Selects/deselects the whole row (week).
   * @private
   */
  _selectWeek() {
    this._weeks.forEach((week) => {
      const _week = week;
      const dayInThisWeek = _week.findIndex((item) => {
        const date = CalendarDate_default.fromTimestamp(parseInt(item.timestamp) * 1e3);
        return date.getMonth() === this._calendarDate.getMonth() && date.getDate() === this._calendarDate.getDate();
      }) !== -1;
      if (dayInThisWeek) {
        const notAllDaysOfThisWeekSelected = _week.some((item) => item.timestamp && !this.selectedDates.includes(parseInt(item.timestamp)));
        if (notAllDaysOfThisWeekSelected) {
          _week.filter((item) => item.timestamp).forEach((item) => {
            this._addTimestampToSelection(parseInt(item.timestamp));
          });
        } else {
          _week.filter((item) => item.timestamp).forEach((item) => {
            this._removeTimestampFromSelection(parseInt(item.timestamp));
          });
        }
      }
    });
    this.fireEvent("change", {
      timestamp: this.timestamp,
      dates: this.selectedDates
    });
  }
  _toggleTimestampInSelection(timestamp) {
    if (this.selectedDates.includes(timestamp)) {
      this._removeTimestampFromSelection(timestamp);
    } else {
      this._addTimestampToSelection(timestamp);
    }
  }
  _addTimestampToSelection(timestamp) {
    if (!this.selectedDates.includes(timestamp)) {
      this.selectedDates = [...this.selectedDates, timestamp];
    }
  }
  _removeTimestampFromSelection(timestamp) {
    this.selectedDates = this.selectedDates.filter((value) => value !== timestamp);
  }
  /**
   * Called when at least one day is selected and the user presses "Shift".
   * @param timestamp
   * @private
   */
  _multipleSelection(timestamp) {
    const min = Math.min(...this.selectedDates);
    const max = Math.max(...this.selectedDates);
    let start;
    let end;
    let toggle = false;
    if (timestamp < min) {
      start = timestamp;
      end = min;
    } else if (timestamp >= min && timestamp <= max) {
      const distanceToMin = Math.abs(timestamp - min);
      const distanceToMax = Math.abs(timestamp - max);
      if (distanceToMin < distanceToMax) {
        start = timestamp;
        end = max;
      } else {
        start = min;
        end = timestamp;
      }
      toggle = true;
    } else {
      start = max;
      end = timestamp;
    }
    const startDate = CalendarDate_default.fromTimestamp(start * 1e3);
    const endDate = CalendarDate_default.fromTimestamp(end * 1e3);
    while (startDate.valueOf() <= endDate.valueOf()) {
      this[toggle ? "_toggleTimestampInSelection" : "_addTimestampToSelection"](startDate.valueOf() / 1e3);
      startDate.setDate(startDate.getDate() + 1);
    }
  }
  /**
   * Set the hovered day as the "_secondTimestamp".
   * @param e
   * @private
   */
  _onmouseover(e) {
    const target = e.target;
    const hoveredItem = target.closest(".ui5-dp-item");
    if (hoveredItem && this.selectionMode === CalendarSelectionMode_default.Range && this.selectedDates.length === 1) {
      this._secondTimestamp = this._getTimestampFromDom(hoveredItem);
    }
  }
  _onkeydown(e) {
    let preventDefault = true;
    if (isEnter(e) || isEnterShift(e)) {
      this._selectDate(e, isEnterShift(e));
    } else if (isSpace(e) || isSpaceShift(e)) {
      e.preventDefault();
    } else if (isLeft(e)) {
      this._modifyTimestampBy(-1, "day", false);
    } else if (isRight(e)) {
      this._modifyTimestampBy(1, "day", false);
    } else if (isUp(e)) {
      this._modifyTimestampBy(-7, "day", false);
    } else if (isDown(e)) {
      this._modifyTimestampBy(7, "day", false);
    } else if (isPageUp(e)) {
      this._modifyTimestampBy(-1, "month");
    } else if (isPageDown(e)) {
      this._modifyTimestampBy(1, "month");
    } else if (isPageUpShift(e) || isPageUpAlt(e)) {
      this._modifyTimestampBy(-1, "year");
    } else if (isPageDownShift(e) || isPageDownAlt(e)) {
      this._modifyTimestampBy(1, "year");
    } else if (isPageUpShiftCtrl(e)) {
      this._modifyTimestampBy(-10, "year");
    } else if (isPageDownShiftCtrl(e)) {
      this._modifyTimestampBy(10, "year");
    } else if (isHome(e) || isEnd(e)) {
      this._onHomeOrEnd(isHome(e));
    } else if (isHomeCtrl(e)) {
      const tempDate = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      tempDate.setDate(1);
      this._setTimestamp(tempDate.valueOf() / 1e3);
    } else if (isEndCtrl(e)) {
      const tempDate = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      tempDate.setMonth(tempDate.getMonth() + 1);
      tempDate.setDate(0);
      this._setTimestamp(tempDate.valueOf() / 1e3);
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e.preventDefault();
    }
  }
  _onkeyup(e) {
    if (isSpace(e) || isSpaceShift(e) && this.selectionMode !== CalendarSelectionMode_default.Multiple) {
      this._selectDate(e, false);
    } else if (isSpaceShift(e)) {
      this._selectWeek();
    }
  }
  /**
   * Click is the same as "Enter".
   * **Note:** "Click+Shift" has the same effect as "Enter+Shift".
   * @param e
   * @private
   */
  _onclick(e) {
    this._selectDate(e, e.shiftKey);
  }
  /**
   * Called upon "Home" or "End" - moves the focus to the first or last item in the row.
   * @param homePressed
   * @private
   */
  _onHomeOrEnd(homePressed) {
    this._weeks.forEach((week) => {
      const _week = week;
      const dayInThisWeek = _week.findIndex((item) => {
        const date = CalendarDate_default.fromTimestamp(parseInt(item.timestamp) * 1e3);
        return date.getMonth() === this._calendarDate.getMonth() && date.getDate() === this._calendarDate.getDate();
      }) !== -1;
      if (dayInThisWeek) {
        const index = homePressed ? 1 : 7;
        this._setTimestamp(parseInt(_week[index].timestamp));
      }
    });
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return !(this._calendarDate.getMonth() === this._minDate.getMonth() && this._calendarDate.getYear() === this._minDate.getYear());
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    return !(this._calendarDate.getMonth() === this._maxDate.getMonth() && this._calendarDate.getYear() === this._maxDate.getYear());
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _showPreviousPage() {
    this._modifyTimestampBy(-1, "month", false);
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _showNextPage() {
    this._modifyTimestampBy(1, "month", false);
  }
  /**
   * Modifies the timestamp by a certain amount of days/months/years.
   * @param amount
   * @param unit
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @private
   */
  _modifyTimestampBy(amount, unit, preserveDate) {
    this._safelyModifyTimestampBy(amount, unit, preserveDate);
    this._updateSecondTimestamp();
    this.fireEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this._updateSecondTimestamp();
    this.fireEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * During range selection, when the user is navigating with the keyboard,
   * the currently focused day is considered the "second day".
   * @private
   */
  _updateSecondTimestamp() {
    if (this.selectionMode === CalendarSelectionMode_default.Range && (this.selectedDates.length === 1 || this.selectedDates.length === 2)) {
      this._secondTimestamp = this.timestamp;
    }
  }
  get _specialCalendarDates() {
    return this.specialCalendarDates;
  }
  get shouldHideWeekNumbers() {
    if (this._primaryCalendarType !== CalendarType_default.Gregorian) {
      return true;
    }
    return this.hideWeekNumbers;
  }
  get classes() {
    return {
      root: {
        "ui5-dp-root": true,
        "ui5-dp-twocalendartypes": this.hasSecondaryCalendarType
      }
    };
  }
  _isWeekend(oDate) {
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    const iWeekDay = oDate.getDay(), iWeekendStart = localeData.getWeekendStart(), iWeekendEnd = localeData.getWeekendEnd();
    return iWeekDay >= iWeekendStart && iWeekDay <= iWeekendEnd || iWeekendEnd < iWeekendStart && (iWeekDay >= iWeekendStart || iWeekDay <= iWeekendEnd);
  }
  _isDayPressed(target) {
    const targetParent = target.parentNode;
    return target.className.indexOf("ui5-dp-item") > -1 || targetParent && targetParent.classList && targetParent.classList.contains("ui5-dp-item");
  }
  _getSecondaryDay(tempDate) {
    return new CalendarDate_default(tempDate, this.secondaryCalendarType);
  }
  _getFirstDay() {
    let daysFromPreviousMonth;
    const firstDayOfWeek = this._getFirstDayOfWeek();
    const firstDay = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
    firstDay.setDate(1);
    daysFromPreviousMonth = firstDay.getDay() - firstDayOfWeek;
    if (daysFromPreviousMonth < 0) {
      daysFromPreviousMonth = 7 + daysFromPreviousMonth;
    }
    if (daysFromPreviousMonth > 0) {
      firstDay.setDate(1 - daysFromPreviousMonth);
    }
    return firstDay;
  }
  _getFirstDayOfWeek() {
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    const confFirstDayOfWeek = getFirstDayOfWeek();
    return Number.isInteger(confFirstDayOfWeek) ? confFirstDayOfWeek : localeData.getFirstDayOfWeek();
  }
  get styles() {
    return {
      wrapper: {
        display: this._hidden ? "none" : "flex",
        "justify-content": "center"
      },
      main: {
        width: "100%"
      }
    };
  }
  get ariaRoledescription() {
    return this.hasSecondaryCalendarType ? `${this._primaryCalendarType} calendar with secondary ${this.secondaryCalendarType} calendar` : `${this._primaryCalendarType} calendar`;
  }
};
__decorate12([
  property_default({
    validator: Integer_default,
    multiple: true,
    compareValues: true
  })
], DayPicker.prototype, "selectedDates", void 0);
__decorate12([
  property_default({ type: CalendarSelectionMode_default, defaultValue: CalendarSelectionMode_default.Single })
], DayPicker.prototype, "selectionMode", void 0);
__decorate12([
  property_default({ type: Boolean })
], DayPicker.prototype, "hideWeekNumbers", void 0);
__decorate12([
  property_default({
    type: Object,
    multiple: true
  })
], DayPicker.prototype, "_weeks", void 0);
__decorate12([
  property_default({
    type: Object,
    multiple: true
  })
], DayPicker.prototype, "_dayNames", void 0);
__decorate12([
  property_default({ type: Boolean, noAttribute: true })
], DayPicker.prototype, "_hidden", void 0);
__decorate12([
  property_default()
], DayPicker.prototype, "_secondTimestamp", void 0);
__decorate12([
  property_default({ type: Object, multiple: true })
], DayPicker.prototype, "specialCalendarDates", void 0);
DayPicker = DayPicker_1 = __decorate12([
  customElement_default({
    tag: "ui5-daypicker",
    styles: DayPicker_css_default,
    template: DayPickerTemplate_lit_default
  }),
  event_default("change"),
  event_default("navigate")
], DayPicker);
DayPicker.define();
var DayPicker_default = DayPicker;

// node_modules/@ui5/webcomponents/dist/generated/templates/MonthPickerTemplate.lit.js
function block011(context, tags, suffix) {
  return effectiveHtml`<div class="ui5-mp-root" role="grid" aria-roledescription="${ifDefined(this.roleDescription)}" aria-readonly="false" aria-multiselectable="false" @keydown=${this._onkeydown} @keyup=${this._onkeyup} @click=${this._selectMonth}>${repeat(this._months, (item, index) => item._id || index, (item, index) => block19.call(this, context, tags, suffix, item, index))}</div>`;
}
function block19(context, tags, suffix, item, index) {
  return effectiveHtml`<div class="ui5-mp-quarter">${repeat(item, (item2, index2) => item2._id || index2, (item2, index2) => block29.call(this, context, tags, suffix, item2, index2))}</div>`;
}
function block29(context, tags, suffix, item, index) {
  return effectiveHtml`<div data-sap-timestamp=${ifDefined(item.timestamp)} tabindex=${ifDefined(item._tabIndex)} ?data-sap-focus-ref="${item.focusRef}" class="${ifDefined(item.classes)}" role="gridcell" aria-selected="${ifDefined(item.ariaSelected)}"><span class="ui5-dp-monthtext">${ifDefined(item.name)}</span>${item.nameInSecType ? block37.call(this, context, tags, suffix, item, index) : void 0}</div>`;
}
function block37(context, tags, suffix, item, index) {
  return effectiveHtml`<span class="ui5-dp-monthtext ui5-dp-monthsectext">${ifDefined(item.nameInSecType)}</span>`;
}
var MonthPickerTemplate_lit_default = block011;

// node_modules/@ui5/webcomponents/dist/generated/themes/MonthPicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData16 = { packageName: "@ui5/webcomponents", fileName: "themes/MonthPicker.css.ts", content: `:host(:not([hidden])){display:block}:host{width:100%;height:100%}.ui5-mp-root{box-sizing:border-box;padding:2rem 0 1rem;display:flex;flex-direction:column;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);justify-content:center;align-items:center}.ui5-mp-item{display:flex;flex-direction:column;width:calc(33.333% - .125rem);height:var(--_ui5-v1-24-2_month_picker_item_height);color:var(--sapButton_Lite_TextColor);background-color:var(--sapLegend_WorkingBackground);align-items:center;justify-content:center;margin:var(--_ui5-v1-24-2_monthpicker_item_margin);box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default;outline:none;position:relative;border:var(--_ui5-v1-24-2_monthpicker_item_border);border-radius:var(--_ui5-v1-24-2_monthpicker_item_border_radius)}.ui5-dp-monthsectext{font-size:.75rem;color:var(--sapNeutralElementColor)}.ui5-mp-item:hover{background-color:var(--sapList_Hover_Background)}.ui5-mp-item.ui5-mp-item--selected,.ui5-mp-item.ui5-mp-item--selected .ui5-dp-monthsectext{box-shadow:var(--_ui5-v1-24-2_monthpicker_item_selected_box_shadow);font-weight:var(--_ui5-v1-24-2_monthpicker_item_selected_font_wieght);background-color:var(--_ui5-v1-24-2_monthpicker_item_selected_background_color);color:var(--_ui5-v1-24-2_monthpicker_item_selected_text_color)}.ui5-mp-item.ui5-mp-item--disabled{pointer-events:none;opacity:.5}.ui5-mp-item.ui5-mp-item--selected:focus{background-color:var(--sapContent_Selected_Background)}.ui5-mp-item.ui5-mp-item--selected:focus:after{border-color:var(--_ui5-v1-24-2_monthpicker_item_focus_after_border)}.ui5-mp-item.ui5-mp-item--selected:hover{background-color:var(--_ui5-v1-24-2_monthpicker_item_selected_hover_color)}.ui5-mp-item:focus:after{content:"";position:absolute;border:var(--_ui5-v1-24-2_button_focused_border);inset:0;border-radius:var(--_ui5-v1-24-2_monthpicker_item_focus_after_border_radius)}.ui5-mp-quarter{display:flex;justify-content:center;align-items:center;width:100%}:host([secondary-calendar-type="Persian"]:not([primary-calendar-type="Persian"])) .ui5-mp-root,:host([secondary-calendar-type="Islamic"]:not([primary-calendar-type="Islamic"])) .ui5-mp-root{display:grid;padding:.5625rem 0;grid-template-columns:repeat(2,1fr);gap:var(--_ui5-v1-24-2_monthpicker_item_margin)}:host([secondary-calendar-type="Persian"]:not([primary-calendar-type="Persian"])) .ui5-mp-item,:host([secondary-calendar-type="Islamic"]:not([primary-calendar-type="Islamic"])) .ui5-mp-item{margin:0;width:auto}:host([secondary-calendar-type="Persian"]:not([primary-calendar-type="Persian"])) .ui5-mp-quarter,:host([secondary-calendar-type="Islamic"]:not([primary-calendar-type="Islamic"])) .ui5-mp-quarter{width:100%;display:contents}
` };
var MonthPicker_css_default = styleData16;

// node_modules/@ui5/webcomponents/dist/MonthPicker.js
var __decorate13 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MonthPicker_1;
var PAGE_SIZE = 12;
var MonthPicker = MonthPicker_1 = class MonthPicker2 extends CalendarPart_default {
  static async onDefine() {
    MonthPicker_1.i18nBundle = await getI18nBundle("@ui5/webcomponents");
  }
  get roleDescription() {
    return MonthPicker_1.i18nBundle.getText(MONTH_PICKER_DESCRIPTION);
  }
  onBeforeRendering() {
    this._buildMonths();
  }
  onAfterRendering() {
    if (!this._hidden) {
      this.focus();
    }
  }
  get rowSize() {
    return this.secondaryCalendarType === CalendarType_default.Islamic && this.primaryCalendarType !== CalendarType_default.Islamic || this.secondaryCalendarType === CalendarType_default.Persian && this.primaryCalendarType !== CalendarType_default.Persian ? 2 : 3;
  }
  _buildMonths() {
    if (this._hidden) {
      return;
    }
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    const monthsNames = localeData.getMonthsStandAlone("wide", this._primaryCalendarType);
    const months = [];
    const calendarDate = this._calendarDate;
    const minDate = this._minDate;
    const maxDate = this._maxDate;
    const tempDate = new CalendarDate_default(calendarDate, this._primaryCalendarType);
    let timestamp;
    for (let i = 0; i < 12; i++) {
      tempDate.setMonth(i);
      timestamp = tempDate.valueOf() / 1e3;
      const isSelected = this.selectedDates.some((itemTimestamp) => {
        const date = CalendarDate_default.fromTimestamp(itemTimestamp * 1e3, this._primaryCalendarType);
        return date.getYear() === tempDate.getYear() && date.getMonth() === tempDate.getMonth();
      });
      const isFocused = tempDate.getMonth() === calendarDate.getMonth();
      const isDisabled = this._isOutOfSelectableRange(tempDate, minDate, maxDate);
      const month = {
        timestamp: timestamp.toString(),
        focusRef: isFocused,
        _tabIndex: isFocused ? "0" : "-1",
        selected: isSelected,
        ariaSelected: isSelected ? "true" : "false",
        name: monthsNames[i],
        nameInSecType: this.hasSecondaryCalendarType && this._getDisplayedSecondaryMonthText(timestamp).text,
        disabled: isDisabled,
        classes: "ui5-mp-item"
      };
      if (isSelected) {
        month.classes += " ui5-mp-item--selected";
      }
      if (isDisabled) {
        month.classes += " ui5-mp-item--disabled";
      }
      const quarterIndex = Math.floor(i / this.rowSize);
      if (months[quarterIndex]) {
        months[quarterIndex].push(month);
      } else {
        months[quarterIndex] = [month];
      }
    }
    this._months = months;
  }
  _getDisplayedSecondaryMonthText(timestamp) {
    const monthsName = transformDateToSecondaryType_default(this._primaryCalendarType, this.secondaryCalendarType, timestamp);
    return convertMonthNumbersToMonthNames_default(monthsName.firstDate.getMonth(), monthsName.lastDate.getMonth(), this.secondaryCalendarType);
  }
  _onkeydown(e) {
    let preventDefault = true;
    if (isEnter(e)) {
      this._selectMonth(e);
    } else if (isSpace(e)) {
      e.preventDefault();
    } else if (isLeft(e)) {
      this._modifyTimestampBy(-1);
    } else if (isRight(e)) {
      this._modifyTimestampBy(1);
    } else if (isUp(e)) {
      this._modifyTimestampBy(-this.rowSize);
    } else if (isDown(e)) {
      this._modifyTimestampBy(this.rowSize);
    } else if (isPageUp(e)) {
      this._modifyTimestampBy(-PAGE_SIZE);
    } else if (isPageDown(e)) {
      this._modifyTimestampBy(PAGE_SIZE);
    } else if (isHome(e) || isEnd(e)) {
      this._onHomeOrEnd(isHome(e));
    } else if (isHomeCtrl(e)) {
      this._setTimestamp(parseInt(this._months[0][0].timestamp));
    } else if (isEndCtrl(e)) {
      this._setTimestamp(parseInt(this._months[PAGE_SIZE / this.rowSize - 1][this.rowSize - 1].timestamp));
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e.preventDefault();
    }
  }
  _onHomeOrEnd(homePressed) {
    this._months.forEach((row) => {
      const indexInRow = row.findIndex((item) => CalendarDate_default.fromTimestamp(parseInt(item.timestamp) * 1e3).getMonth() === this._calendarDate.getMonth());
      if (indexInRow !== -1) {
        const index = homePressed ? 0 : this.rowSize - 1;
        this._setTimestamp(parseInt(row[index].timestamp));
      }
    });
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this.fireEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * Modifies timestamp by a given amount of months and,
   * if necessary, loads the prev/next page.
   * @param amount
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @private
   */
  _modifyTimestampBy(amount, preserveDate) {
    this._safelyModifyTimestampBy(amount, "month", preserveDate);
    this.fireEvent("navigate", { timestamp: this.timestamp });
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this._selectMonth(e);
    }
  }
  /**
   * Selects a month, when the user clicks or presses "Enter" or "Space".
   * @param e
   * @private
   */
  _selectMonth(e) {
    e.preventDefault();
    const target = e.target;
    if (target.className.indexOf("ui5-mp-item") > -1) {
      const timestamp = this._getTimestampFromDom(target);
      this._safelySetTimestamp(timestamp);
      this.fireEvent("change", { timestamp: this.timestamp });
    }
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return this._calendarDate.getYear() !== this._minDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    return this._calendarDate.getYear() !== this._maxDate.getYear();
  }
  /**
   * Called by Calendar.js.
   *
   * **Note:** when the user presses the "<" button in the calendar header (same as "PageUp")
   * @protected
   */
  _showPreviousPage() {
    this._modifyTimestampBy(-PAGE_SIZE, true);
  }
  /**
   * Called by Calendar.js
   * **Note:** when the user presses the ">" button in the calendar header (same as "PageDown")
   * @protected
   */
  _showNextPage() {
    this._modifyTimestampBy(PAGE_SIZE, true);
  }
  _isOutOfSelectableRange(date, minDate, maxDate) {
    const month = date.getMonth();
    const year = date.getYear();
    const minYear = minDate.getYear();
    const minMonth = minDate.getMonth();
    const maxYear = maxDate.getYear();
    const maxMonth = maxDate.getMonth();
    return year < minYear || year === minYear && month < minMonth || year > maxYear || year === maxYear && month > maxMonth;
  }
};
__decorate13([
  property_default({
    validator: Integer_default,
    multiple: true,
    compareValues: true
  })
], MonthPicker.prototype, "selectedDates", void 0);
__decorate13([
  property_default({ type: Object, multiple: true })
], MonthPicker.prototype, "_months", void 0);
__decorate13([
  property_default({ type: Boolean, noAttribute: true })
], MonthPicker.prototype, "_hidden", void 0);
MonthPicker = MonthPicker_1 = __decorate13([
  customElement_default({
    tag: "ui5-monthpicker",
    template: MonthPickerTemplate_lit_default,
    styles: MonthPicker_css_default
  }),
  event_default("change"),
  event_default("navigate")
], MonthPicker);
MonthPicker.define();
var MonthPicker_default = MonthPicker;

// node_modules/@ui5/webcomponents/dist/generated/templates/YearPickerTemplate.lit.js
function block012(context, tags, suffix) {
  return effectiveHtml`<div class="ui5-yp-root" role="grid" aria-roledescription="${ifDefined(this.roleDescription)}" aria-readonly="false" aria-multiselectable="false" @keydown=${this._onkeydown} @keyup=${this._onkeyup} @click=${this._selectYear}>${repeat(this._years, (item, index) => item._id || index, (item, index) => block110.call(this, context, tags, suffix, item, index))}</div>`;
}
function block110(context, tags, suffix, item, index) {
  return effectiveHtml`<div class="ui5-yp-interval-container">${repeat(item, (item2, index2) => item2._id || index2, (item2, index2) => block210.call(this, context, tags, suffix, item2, index2))}</div>`;
}
function block210(context, tags, suffix, item, index) {
  return effectiveHtml`<div data-sap-timestamp="${ifDefined(item.timestamp)}" tabindex="${ifDefined(item._tabIndex)}" ?data-sap-focus-ref="${item.focusRef}" class="${ifDefined(item.classes)}" role="gridcell" aria-selected="${ifDefined(item.ariaSelected)}"><span>${ifDefined(item.year)}</span>${item.yearInSecType ? block38.call(this, context, tags, suffix, item, index) : void 0}</div>`;
}
function block38(context, tags, suffix, item, index) {
  return effectiveHtml`<span class="ui5-yp-item-sec-type">${ifDefined(item.yearInSecType)}</span>`;
}
var YearPickerTemplate_lit_default = block012;

// node_modules/@ui5/webcomponents/dist/generated/themes/YearPicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData17 = { packageName: "@ui5/webcomponents", fileName: "themes/YearPicker.css.ts", content: `:host(:not([hidden])){display:block}:host{width:100%;height:100%}.ui5-yp-root{padding:2rem 0 1rem;display:flex;flex-direction:column;font-family:"72override",var(--sapFontFamily);font-size:var(--sapFontSize);justify-content:center;align-items:center}.ui5-yp-interval-container{display:flex;justify-content:center;align-items:center;width:100%}.ui5-yp-item{display:flex;margin:var(--_ui5-v1-24-2_yearpicker_item_margin);width:calc(25% - .125rem);height:var(--_ui5-v1-24-2_year_picker_item_height);color:var(--sapButton_Lite_TextColor);background-color:var(--sapLegend_WorkingBackground);align-items:center;justify-content:center;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;user-select:none;cursor:default;outline:none;position:relative;border:var(--_ui5-v1-24-2_yearpicker_item_border);border-radius:var(--_ui5-v1-24-2_yearpicker_item_border_radius)}.ui5-yp-item-secondary-type{flex-direction:column;width:calc(50% - .125rem)}.ui5-yp-item-sec-type{font-size:.75rem;color:var(--sapNeutralElementColor)}.ui5-yp-item:hover{background-color:var(--sapList_Hover_Background)}.ui5-yp-item.ui5-yp-item--selected,.ui5-yp-item.ui5-yp-item--selected .ui5-yp-item-sec-type{background-color:var(--_ui5-v1-24-2_yearpicker_item_selected_background_color);color:var(--_ui5-v1-24-2_yearpicker_item_selected_text_color);box-shadow:var(--_ui5-v1-24-2_yearpicker_item_selected_box_shadow);font-weight:700}.ui5-yp-item.ui5-yp-item--disabled{pointer-events:none;opacity:.5}.ui5-yp-item.ui5-yp-item--selected:focus{background-color:var(--_ui5-v1-24-2_yearpicker_item_selected_focus)}.ui5-yp-item.ui5-yp-item--selected:focus:after{border-color:var(--_ui5-v1-24-2_yearpicker_item_focus_after_border)}.ui5-yp-item.ui5-yp-item--selected:hover{background-color:var(--_ui5-v1-24-2_yearpicker_item_selected_hover_color)}.ui5-yp-item:focus:after{content:"";position:absolute;border:var(--_ui5-v1-24-2_yearpicker_item_focus_after_border);inset:0;border-radius:var(--_ui5-v1-24-2_yearpicker_item_focus_after_border_radius);outline:var(--_ui5-v1-24-2_yearpicker_item_focus_after_outline)}
` };
var YearPicker_css_default = styleData17;

// node_modules/@ui5/webcomponents/dist/YearPicker.js
var __decorate14 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var YearPicker_1;
var YearPicker = YearPicker_1 = class YearPicker2 extends CalendarPart_default {
  static async onDefine() {
    YearPicker_1.i18nBundle = await getI18nBundle("@ui5/webcomponents");
  }
  get roleDescription() {
    return YearPicker_1.i18nBundle.getText(YEAR_PICKER_DESCRIPTION);
  }
  onBeforeRendering() {
    this._buildYears();
  }
  _getPageSize() {
    return this.hasSecondaryCalendarType ? 8 : 20;
  }
  _getRowSize() {
    return this.hasSecondaryCalendarType ? 2 : 4;
  }
  _buildYears() {
    if (this._hidden) {
      return;
    }
    const pageSize = this._getPageSize();
    const locale = getLocale_default();
    const oYearFormat = DateFormat_default2.getDateInstance({ format: "y", calendarType: this._primaryCalendarType }, locale);
    const oYearFormatInSecType = DateFormat_default2.getDateInstance({ format: "y", calendarType: this.secondaryCalendarType }, locale);
    this._calculateFirstYear();
    this._lastYear = this._firstYear + pageSize - 1;
    const calendarDate = this._calendarDate;
    const minDate = this._minDate;
    const maxDate = this._maxDate;
    const tempDate = new CalendarDate_default(calendarDate, this._primaryCalendarType);
    let tempDateInSecType;
    let textInSecType;
    tempDate.setYear(this._firstYear);
    const intervals = [];
    let timestamp;
    for (let i = 0; i < pageSize; i++) {
      timestamp = tempDate.valueOf() / 1e3;
      const isSelected = this.selectedDates.some((itemTimestamp) => {
        const date = CalendarDate_default.fromTimestamp(itemTimestamp * 1e3, this._primaryCalendarType);
        return date.getYear() === tempDate.getYear();
      });
      const isFocused = tempDate.getYear() === calendarDate.getYear();
      const isDisabled = tempDate.getYear() < minDate.getYear() || tempDate.getYear() > maxDate.getYear();
      if (this.hasSecondaryCalendarType) {
        tempDateInSecType = transformDateToSecondaryType_default(this._primaryCalendarType, this.secondaryCalendarType, timestamp, true);
        textInSecType = tempDateInSecType.firstDate.getYear() === tempDateInSecType.lastDate.getYear() ? `${oYearFormatInSecType.format(tempDateInSecType.firstDate.toLocalJSDate(), true)}` : `${oYearFormatInSecType.format(tempDateInSecType.firstDate.toLocalJSDate(), true)} - ${oYearFormatInSecType.format(tempDateInSecType.lastDate.toLocalJSDate(), true)}`;
      }
      const year = {
        timestamp: timestamp.toString(),
        _tabIndex: isFocused ? "0" : "-1",
        focusRef: isFocused,
        selected: isSelected,
        ariaSelected: isSelected ? "true" : "false",
        year: oYearFormat.format(tempDate.toLocalJSDate()),
        yearInSecType: textInSecType,
        disabled: isDisabled,
        classes: "ui5-yp-item"
      };
      if (isSelected) {
        year.classes += " ui5-yp-item--selected";
      }
      if (isDisabled) {
        year.classes += " ui5-yp-item--disabled";
      }
      if (this.hasSecondaryCalendarType) {
        year.classes += " ui5-yp-item-secondary-type";
      }
      const intervalIndex = Math.floor(i / this._getRowSize());
      if (intervals[intervalIndex]) {
        intervals[intervalIndex].push(year);
      } else {
        intervals[intervalIndex] = [year];
      }
      tempDate.setYear(tempDate.getYear() + 1);
    }
    this._years = intervals;
  }
  _calculateFirstYear() {
    const pageSize = this._getPageSize();
    const absoluteMaxYear = getMaxCalendarDate(this._primaryCalendarType).getYear();
    const currentYear = this._calendarDate.getYear();
    if (!this._firstYear) {
      this._firstYear = currentYear - pageSize / 2;
    }
    if (currentYear < this._firstYear) {
      this._firstYear -= pageSize;
    } else if (currentYear >= this._firstYear + pageSize) {
      this._firstYear += pageSize;
    }
    if (Math.abs(this._firstYear - currentYear) >= pageSize) {
      this._firstYear = currentYear - pageSize / 2;
    }
    this._firstYear = Math.max(this._firstYear, this._minDate.getYear());
    this._firstYear = Math.min(this._firstYear, this._maxDate.getYear());
    if (this._firstYear > absoluteMaxYear - pageSize + 1) {
      this._firstYear = absoluteMaxYear - pageSize + 1;
    }
  }
  onAfterRendering() {
    if (!this._hidden) {
      this.focus();
    }
  }
  _onkeydown(e) {
    let preventDefault = true;
    const pageSize = this._getPageSize();
    const rowSize = this._getRowSize();
    if (isEnter(e)) {
      this._selectYear(e);
    } else if (isSpace(e)) {
      e.preventDefault();
    } else if (isLeft(e)) {
      this._modifyTimestampBy(-1);
    } else if (isRight(e)) {
      this._modifyTimestampBy(1);
    } else if (isUp(e)) {
      this._modifyTimestampBy(-rowSize);
    } else if (isDown(e)) {
      this._modifyTimestampBy(rowSize);
    } else if (isPageUp(e)) {
      this._modifyTimestampBy(-pageSize);
    } else if (isPageDown(e)) {
      this._modifyTimestampBy(pageSize);
    } else if (isHome(e) || isEnd(e)) {
      this._onHomeOrEnd(isHome(e));
    } else if (isHomeCtrl(e)) {
      this._setTimestamp(parseInt(this._years[0][0].timestamp));
    } else if (isEndCtrl(e)) {
      this._setTimestamp(parseInt(this._years[pageSize / rowSize - 1][rowSize - 1].timestamp));
    } else {
      preventDefault = false;
    }
    if (preventDefault) {
      e.preventDefault();
    }
  }
  _onHomeOrEnd(homePressed) {
    this._years.forEach((row) => {
      const indexInRow = row.findIndex((item) => CalendarDate_default.fromTimestamp(parseInt(item.timestamp) * 1e3).getYear() === this._calendarDate.getYear());
      if (indexInRow !== -1) {
        const index = homePressed ? 0 : this._getRowSize() - 1;
        this._setTimestamp(parseInt(row[index].timestamp));
      }
    });
  }
  /**
   * Sets the timestamp to an absolute value.
   * @param value
   * @private
   */
  _setTimestamp(value) {
    this._safelySetTimestamp(value);
    this.fireEvent("navigate", { timestamp: this.timestamp });
  }
  /**
   * Modifies timestamp by a given amount of years and, if necessary, loads the prev/next page.
   * @param amount
   * @private
   */
  _modifyTimestampBy(amount) {
    this._safelyModifyTimestampBy(amount, "year");
    this.fireEvent("navigate", { timestamp: this.timestamp });
  }
  _onkeyup(e) {
    if (isSpace(e)) {
      this._selectYear(e);
    }
  }
  /**
   * User clicked with the mouser or pressed Enter/Space
   * @param e
   * @private
   */
  _selectYear(e) {
    e.preventDefault();
    const target = e.target;
    if (target.className.indexOf("ui5-yp-item") > -1) {
      const timestamp = this._getTimestampFromDom(target);
      this._safelySetTimestamp(timestamp);
      this.fireEvent("change", { timestamp: this.timestamp });
    }
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasPreviousPage() {
    return this._firstYear > this._minDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * @protected
   */
  _hasNextPage() {
    return this._firstYear + this._getPageSize() - 1 < this._maxDate.getYear();
  }
  /**
   * Called by the Calendar component.
   * **Note:** when the user presses the "<" button in the calendar header (same as "PageUp")
   * @protected
   */
  _showPreviousPage() {
    const pageSize = this._getPageSize();
    this._modifyTimestampBy(-pageSize);
  }
  /**
   * Called by the Calendar component.
   * **Note:** when the user presses the ">" button in the calendar header (same as "PageDown")
   * @protected
   */
  _showNextPage() {
    this._modifyTimestampBy(this._getPageSize());
  }
};
__decorate14([
  property_default({
    validator: Integer_default,
    multiple: true,
    compareValues: true
  })
], YearPicker.prototype, "selectedDates", void 0);
__decorate14([
  property_default({ type: Object, multiple: true })
], YearPicker.prototype, "_years", void 0);
__decorate14([
  property_default({ type: Boolean, noAttribute: true })
], YearPicker.prototype, "_hidden", void 0);
YearPicker = YearPicker_1 = __decorate14([
  customElement_default({
    tag: "ui5-yearpicker",
    styles: YearPicker_css_default,
    template: YearPickerTemplate_lit_default
  }),
  event_default("change"),
  event_default("navigate")
], YearPicker);
YearPicker.define();
var YearPicker_default = YearPicker;

// node_modules/@ui5/webcomponents-base/dist/types/NavigationMode.js
var NavigationMode;
(function(NavigationMode2) {
  NavigationMode2["Auto"] = "Auto";
  NavigationMode2["Vertical"] = "Vertical";
  NavigationMode2["Horizontal"] = "Horizontal";
  NavigationMode2["Paging"] = "Paging";
})(NavigationMode || (NavigationMode = {}));
var NavigationMode_default = NavigationMode;

// node_modules/@ui5/webcomponents-base/dist/types/ItemNavigationBehavior.js
var ItemNavigationBehavior;
(function(ItemNavigationBehavior2) {
  ItemNavigationBehavior2["Static"] = "Static";
  ItemNavigationBehavior2["Cyclic"] = "Cyclic";
})(ItemNavigationBehavior || (ItemNavigationBehavior = {}));
var ItemNavigationBehavior_default = ItemNavigationBehavior;

// node_modules/@ui5/webcomponents-base/dist/delegate/ItemNavigation.js
var ItemNavigation = class {
  /**
   *
   * @param rootWebComponent the component to operate on (component that slots or contains within its shadow root the items the user navigates among)
   * @param {ItemNavigationOptions} options Object with configuration options:
   *  - currentIndex: the index of the item that will be initially selected (from which navigation will begin)
   *  - navigationMode (Auto|Horizontal|Vertical): whether the items are displayed horizontally (Horizontal), vertically (Vertical) or as a matrix (Auto) meaning the user can navigate in both directions (up/down and left/right)
   *  - rowSize: tells how many items per row there are when the items are not rendered as a flat list but rather as a matrix. Relevant for navigationMode=Auto
   * 	- skipItemsSize: tells how many items upon PAGE_UP and PAGE_DOWN should be skipped to applying the focus on the next item
   *  - behavior (Static|Cycling): tells what to do when trying to navigate beyond the first and last items
   *    Static means that nothing happens if the user tries to navigate beyond the first/last item.
   *    Cycling means that when the user navigates beyond the last item they go to the first and vice versa.
   *  - getItemsCallback: function that, when called, returns an array with all items the user can navigate among
   *  - affectedPropertiesNames: a list of metadata properties on the root component which, upon user navigation, will be reassigned by address thus causing the root component to invalidate
   */
  constructor(rootWebComponent, options) {
    if (!rootWebComponent.isUI5Element) {
      throw new Error("The root web component must be a UI5 Element instance");
    }
    this.rootWebComponent = rootWebComponent;
    this.rootWebComponent.addEventListener("keydown", this._onkeydown.bind(this));
    this._initBound = this._init.bind(this);
    this.rootWebComponent.attachComponentStateFinalized(this._initBound);
    if (typeof options.getItemsCallback !== "function") {
      throw new Error("getItemsCallback is required");
    }
    this._getItems = options.getItemsCallback;
    this._currentIndex = options.currentIndex || 0;
    this._rowSize = options.rowSize || 1;
    this._behavior = options.behavior || ItemNavigationBehavior_default.Static;
    this._navigationMode = options.navigationMode || NavigationMode_default.Auto;
    this._affectedPropertiesNames = options.affectedPropertiesNames || [];
    this._skipItemsSize = options.skipItemsSize || null;
  }
  /**
   * Call this method to set a new "current" (selected) item in the item navigation
   * Note: the item passed to this function must be one of the items, returned by the getItemsCallback function
   *
   * @public
   * @param current the new selected item
   */
  setCurrentItem(current) {
    const currentItemIndex = this._getItems().indexOf(current);
    if (currentItemIndex === -1) {
      console.warn(`The provided item is not managed by ItemNavigation`, current);
      return;
    }
    this._currentIndex = currentItemIndex;
    this._applyTabIndex();
  }
  /**
   * Call this method to dynamically change the row size
   *
   * @public
   * @param newRowSize
   */
  setRowSize(newRowSize) {
    this._rowSize = newRowSize;
  }
  _init() {
    this._getItems().forEach((item, idx) => {
      item.forcedTabIndex = idx === this._currentIndex ? "0" : "-1";
    });
  }
  _onkeydown(event2) {
    if (!this._canNavigate()) {
      return;
    }
    const horizontalNavigationOn = this._navigationMode === NavigationMode_default.Horizontal || this._navigationMode === NavigationMode_default.Auto;
    const verticalNavigationOn = this._navigationMode === NavigationMode_default.Vertical || this._navigationMode === NavigationMode_default.Auto;
    const isRTL = this.rootWebComponent.effectiveDir === "rtl";
    if (isRTL && isLeft(event2) && horizontalNavigationOn) {
      this._handleRight();
    } else if (isRTL && isRight(event2) && horizontalNavigationOn) {
      this._handleLeft();
    } else if (isLeft(event2) && horizontalNavigationOn) {
      this._handleLeft();
    } else if (isRight(event2) && horizontalNavigationOn) {
      this._handleRight();
    } else if (isUp(event2) && verticalNavigationOn) {
      this._handleUp();
    } else if (isDown(event2) && verticalNavigationOn) {
      this._handleDown();
    } else if (isHome(event2)) {
      this._handleHome();
    } else if (isEnd(event2)) {
      this._handleEnd();
    } else if (isPageUp(event2)) {
      this._handlePageUp();
    } else if (isPageDown(event2)) {
      this._handlePageDown();
    } else {
      return;
    }
    event2.preventDefault();
    this._applyTabIndex();
    this._focusCurrentItem();
  }
  _handleUp() {
    const itemsLength = this._getItems().length;
    if (this._currentIndex - this._rowSize >= 0) {
      this._currentIndex -= this._rowSize;
      return;
    }
    if (this._behavior === ItemNavigationBehavior_default.Cyclic) {
      const firstItemInThisColumnIndex = this._currentIndex % this._rowSize;
      const firstItemInPreviousColumnIndex = firstItemInThisColumnIndex === 0 ? this._rowSize - 1 : firstItemInThisColumnIndex - 1;
      const rows = Math.ceil(itemsLength / this._rowSize);
      let lastItemInPreviousColumnIndex = firstItemInPreviousColumnIndex + (rows - 1) * this._rowSize;
      if (lastItemInPreviousColumnIndex > itemsLength - 1) {
        lastItemInPreviousColumnIndex -= this._rowSize;
      }
      this._currentIndex = lastItemInPreviousColumnIndex;
    } else {
      this._currentIndex = 0;
    }
  }
  _handleDown() {
    const itemsLength = this._getItems().length;
    if (this._currentIndex + this._rowSize < itemsLength) {
      this._currentIndex += this._rowSize;
      return;
    }
    if (this._behavior === ItemNavigationBehavior_default.Cyclic) {
      const firstItemInThisColumnIndex = this._currentIndex % this._rowSize;
      const firstItemInNextColumnIndex = (firstItemInThisColumnIndex + 1) % this._rowSize;
      this._currentIndex = firstItemInNextColumnIndex;
    } else {
      this._currentIndex = itemsLength - 1;
    }
  }
  _handleLeft() {
    const itemsLength = this._getItems().length;
    if (this._currentIndex > 0) {
      this._currentIndex -= 1;
      return;
    }
    if (this._behavior === ItemNavigationBehavior_default.Cyclic) {
      this._currentIndex = itemsLength - 1;
    }
  }
  _handleRight() {
    const itemsLength = this._getItems().length;
    if (this._currentIndex < itemsLength - 1) {
      this._currentIndex += 1;
      return;
    }
    if (this._behavior === ItemNavigationBehavior_default.Cyclic) {
      this._currentIndex = 0;
    }
  }
  _handleHome() {
    const homeEndRange = this._rowSize > 1 ? this._rowSize : this._getItems().length;
    this._currentIndex -= this._currentIndex % homeEndRange;
  }
  _handleEnd() {
    const homeEndRange = this._rowSize > 1 ? this._rowSize : this._getItems().length;
    this._currentIndex += homeEndRange - 1 - this._currentIndex % homeEndRange;
  }
  _handlePageUp() {
    if (this._rowSize > 1) {
      return;
    }
    this._handlePageUpFlat();
  }
  _handlePageDown() {
    if (this._rowSize > 1) {
      return;
    }
    this._handlePageDownFlat();
  }
  /**
   * Handles PAGE_UP in a flat list-like structure, both vertically and horizontally.
   */
  _handlePageUpFlat() {
    if (this._skipItemsSize === null) {
      this._currentIndex -= this._currentIndex;
      return;
    }
    if (this._currentIndex + 1 > this._skipItemsSize) {
      this._currentIndex -= this._skipItemsSize;
    } else {
      this._currentIndex -= this._currentIndex;
    }
  }
  /**
   * Handles PAGE_DOWN in a flat list-like structure, both vertically and horizontally.
   */
  _handlePageDownFlat() {
    if (this._skipItemsSize === null) {
      this._currentIndex = this._getItems().length - 1;
      return;
    }
    const currentToEndRange = this._getItems().length - this._currentIndex - 1;
    if (currentToEndRange > this._skipItemsSize) {
      this._currentIndex += this._skipItemsSize;
    } else {
      this._currentIndex = this._getItems().length - 1;
    }
  }
  _applyTabIndex() {
    const items = this._getItems();
    for (let i = 0; i < items.length; i++) {
      items[i].forcedTabIndex = i === this._currentIndex ? "0" : "-1";
    }
    this._affectedPropertiesNames.forEach((propName) => {
      const prop = this.rootWebComponent[propName];
      this.rootWebComponent[propName] = Array.isArray(prop) ? [...prop] : { ...prop };
    });
  }
  _focusCurrentItem() {
    const currentItem = this._getCurrentItem();
    if (currentItem) {
      currentItem.focus();
    }
  }
  _canNavigate() {
    const currentItem = this._getCurrentItem();
    const activeElement = getActiveElement_default();
    return currentItem && currentItem === activeElement;
  }
  _getCurrentItem() {
    const items = this._getItems();
    if (!items.length) {
      return;
    }
    while (this._currentIndex >= items.length) {
      this._currentIndex -= this._rowSize;
    }
    if (this._currentIndex < 0) {
      this._currentIndex = 0;
    }
    const currentItem = items[this._currentIndex];
    if (!currentItem) {
      return;
    }
    if (instanceOfUI5Element(currentItem)) {
      return currentItem.getFocusDomRef();
    }
    const currentItemDOMRef = this.rootWebComponent.getDomRef();
    if (!currentItemDOMRef) {
      return;
    }
    if (currentItem.id) {
      return currentItemDOMRef.querySelector(`[id="${currentItem.id}"]`);
    }
  }
};
var ItemNavigation_default = ItemNavigation;

// node_modules/@ui5/webcomponents/dist/types/CalendarLegendItemType.js
var CalendarLegendItemType;
(function(CalendarLegendItemType2) {
  CalendarLegendItemType2["Today"] = "Today";
  CalendarLegendItemType2["Selected"] = "Selected";
  CalendarLegendItemType2["None"] = "None";
  CalendarLegendItemType2["Working"] = "Working";
  CalendarLegendItemType2["NonWorking"] = "NonWorking";
  CalendarLegendItemType2["Type01"] = "Type01";
  CalendarLegendItemType2["Type02"] = "Type02";
  CalendarLegendItemType2["Type03"] = "Type03";
  CalendarLegendItemType2["Type04"] = "Type04";
  CalendarLegendItemType2["Type05"] = "Type05";
  CalendarLegendItemType2["Type06"] = "Type06";
  CalendarLegendItemType2["Type07"] = "Type07";
  CalendarLegendItemType2["Type08"] = "Type08";
  CalendarLegendItemType2["Type09"] = "Type09";
  CalendarLegendItemType2["Type10"] = "Type10";
  CalendarLegendItemType2["Type11"] = "Type11";
  CalendarLegendItemType2["Type12"] = "Type12";
  CalendarLegendItemType2["Type13"] = "Type13";
  CalendarLegendItemType2["Type14"] = "Type14";
  CalendarLegendItemType2["Type15"] = "Type15";
  CalendarLegendItemType2["Type16"] = "Type16";
  CalendarLegendItemType2["Type17"] = "Type17";
  CalendarLegendItemType2["Type18"] = "Type18";
  CalendarLegendItemType2["Type19"] = "Type19";
  CalendarLegendItemType2["Type20"] = "Type20";
})(CalendarLegendItemType || (CalendarLegendItemType = {}));
var CalendarLegendItemType_default = CalendarLegendItemType;

// node_modules/@ui5/webcomponents/dist/generated/templates/CalendarLegendTemplate.lit.js
function block013(context, tags, suffix) {
  return effectiveHtml`<div class="ui5-calendar-legend-root" @focusout="${this._onFocusOut}" @focusin="${this._onFocusIn}" @keydown="${this._onItemKeyDown}" @mousedown="${this._onMouseDown}">${repeat(this.defaultItemsMapping, (item, index) => item._id || index, (item, index) => block111.call(this, context, tags, suffix, item, index))}${repeat(this.legendItems, (item, index) => item._id || index, (item, index) => block39.call(this, context, tags, suffix, item, index))}</div>`;
}
function block111(context, tags, suffix, item, index) {
  return effectiveHtml`${!item.hide ? block211.call(this, context, tags, suffix, item, index) : void 0}`;
}
function block211(context, tags, suffix, item, index) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-calendar-legend-item", tags, suffix)} type=${ifDefined(item.type)}></${scopeTag("ui5-calendar-legend-item", tags, suffix)}>` : effectiveHtml`<ui5-calendar-legend-item type=${ifDefined(item.type)}></ui5-calendar-legend-item>`;
}
function block39(context, tags, suffix, item, index) {
  return effectiveHtml`<slot name="${ifDefined(item._individualSlot)}"></slot>`;
}
var CalendarLegendTemplate_lit_default = block013;

// node_modules/@ui5/webcomponents/dist/generated/templates/CalendarLegendItemTemplate.lit.js
function block014(context, tags, suffix) {
  return effectiveHtml`<div class="ui5-calendar-legend-item-root" tabindex="${ifDefined(this.forcedTabIndex)}"><div class="ui5-calendar-legend-item-box"></div><div class="ui5-calendar-legend-item-text">${ifDefined(this.effectiveText)}</div></div>`;
}
var CalendarLegendItemTemplate_lit_default = block014;

// node_modules/@ui5/webcomponents/dist/generated/themes/CalendarLegendItem.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData18 = { packageName: "@ui5/webcomponents", fileName: "themes/CalendarLegendItem.css.ts", content: `.ui5-calendar-legend-item-root{display:flex;flex-direction:row;flex-wrap:wrap;width:var(--_ui5-v1-24-2-calendar-legend-item-root-width);white-space:pre-line;text-overflow:ellipsis;overflow:hidden;cursor:default}.ui5-calendar-legend-item-box{display:inline-block;box-sizing:border-box;height:1rem;width:1rem;margin:var(--_ui5-v1-24-2-calendar-legend-item-box-margin);background:var(--sapLegend_WorkingBackground);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}.ui5-calendar-legend-item-text{display:flex;align-items:center;font-size:.875rem;line-height:1.25rem;color:var(--sapContent_LabelColor);font-weight:400;font-family:var(--sapFontFamily);font-size:var(--sapFontSmallSize);white-space:pre-line;text-overflow:ellipsis;overflow:hidden;cursor:default}:host([type="Today"]) .ui5-calendar-legend-item-box{border-color:var(--sapLegend_CurrentDateTime);border:.125rem solid var(--sapLegend_CurrentDateTime)}:host([type="Selected"]) .ui5-calendar-legend-item-box{background:var(--sapContent_Selected_Background);border:.0625rem solid var(--sapContent_FocusColor)}:host([type="NonWorking"]) .ui5-calendar-legend-item-box{background:var(--sapLegend_NonWorkingBackground);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type01"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor1);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type02"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor2);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type03"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor3);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type04"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor4);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type05"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor5);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type06"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor6);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type07"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor7);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type08"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor8);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type09"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor9);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type10"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor10);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type11"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor11);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type12"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor12);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type13"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor13);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type14"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor14);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type15"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor15);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type16"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor16);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type17"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor17);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type18"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor18);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type19"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor19);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}:host([type="Type20"]) .ui5-calendar-legend-item-box{background:var(--sapLegendColor20);border:.0625rem solid var(--sapContent_ForegroundBorderColor)}.ui5-calendar-legend-item-root:focus{outline:var(--_ui5-v1-24-2-calendar-legend-item-root-focus-border);outline-offset:-.0625rem;border-radius:var(--_ui5-v1-24-2-calendar-legend-item-root-focus-border-radius)}
` };
var CalendarLegendItem_css_default = styleData18;

// node_modules/@ui5/webcomponents/dist/CalendarLegendItem.js
var __decorate15 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarLegendItem_1;
var CalendarLegendItem = CalendarLegendItem_1 = class CalendarLegendItem2 extends UI5Element_default {
  static async onDefine() {
    CalendarLegendItem_1.i18nBundle = await getI18nBundle("@ui5/webcomponents");
  }
  get effectiveText() {
    const TodayI18n = CalendarLegendItem_1.i18nBundle.getText(CAL_LEGEND_TODAY_TEXT);
    const SelectedI18n = CalendarLegendItem_1.i18nBundle.getText(CAL_LEGEND_SELECTED_TEXT);
    const WorkingI18n = CalendarLegendItem_1.i18nBundle.getText(CAL_LEGEND_WORKING_DAY_TEXT);
    const NonWorkingI18n = CalendarLegendItem_1.i18nBundle.getText(CAL_LEGEND_NON_WORKING_DAY_TEXT);
    const typeMapping = {
      [CalendarLegendItemType_default.Today]: TodayI18n,
      [CalendarLegendItemType_default.Selected]: SelectedI18n,
      [CalendarLegendItemType_default.NonWorking]: NonWorkingI18n,
      [CalendarLegendItemType_default.Working]: WorkingI18n
    };
    return typeMapping[this.type] || this.text || this.type;
  }
};
__decorate15([
  property_default()
], CalendarLegendItem.prototype, "text", void 0);
__decorate15([
  property_default({ type: CalendarLegendItemType_default, defaultValue: CalendarLegendItemType_default.None })
], CalendarLegendItem.prototype, "type", void 0);
__decorate15([
  property_default({ defaultValue: "-1", noAttribute: true })
], CalendarLegendItem.prototype, "forcedTabIndex", void 0);
CalendarLegendItem = CalendarLegendItem_1 = __decorate15([
  customElement_default({
    tag: "ui5-calendar-legend-item",
    renderer: LitRenderer_default,
    styles: CalendarLegendItem_css_default,
    template: CalendarLegendItemTemplate_lit_default
  })
], CalendarLegendItem);
CalendarLegendItem.define();
var CalendarLegendItem_default = CalendarLegendItem;

// node_modules/@ui5/webcomponents/dist/generated/themes/CalendarLegend.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData19 = { packageName: "@ui5/webcomponents", fileName: "themes/CalendarLegend.css.ts", content: `.ui5-calendar-legend-root{column-width:7.5rem;gap:.5rem;padding:var(--_ui5-v1-24-2-calendar-legend-root-padding);margin:1rem 0;width:var(--_ui5-v1-24-2-calendar-legend-root-width);background-color:var(--sapList_Background)}
` };
var CalendarLegend_css_default = styleData19;

// node_modules/@ui5/webcomponents/dist/CalendarLegend.js
var __decorate16 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var CalendarLegend = class CalendarLegend2 extends UI5Element_default {
  constructor() {
    super();
    this._lastFocusedItemIndex = null;
  }
  onAfterRendering() {
    if (!this._itemNavigation) {
      this._itemNavigation = new ItemNavigation_default(this, {
        navigationMode: NavigationMode_default.Horizontal,
        behavior: ItemNavigationBehavior_default.Static,
        getItemsCallback: () => this.focusableElements
      });
      const focusableItemIndex = this._lastFocusedItemIndex !== null ? this._lastFocusedItemIndex : 0;
      this._itemNavigation.setCurrentItem(this.focusableElements[focusableItemIndex]);
    }
  }
  _onMouseDown(e) {
    e.stopPropagation();
    const target = e.target;
    this._itemNavigation.setCurrentItem(target);
    this._itemNavigation._focusCurrentItem();
    this._lastFocusedItemIndex = this.focusableElements.indexOf(target);
  }
  _onFocusIn(e) {
    const target = e.target;
    this.fireEvent("_calendar-legend-selection-change", {
      item: target
    });
    this._lastFocusedItemIndex = this.focusableElements.indexOf(target);
  }
  _onFocusOut() {
    this.fireEvent("_calendar-legend-focus-out");
  }
  _onItemKeyDown(e) {
    const items = this.focusableElements;
    const itemsCount = items.length;
    const currentItem = e.target;
    const currentIndex = items.indexOf(currentItem);
    if (isDown(e)) {
      e.preventDefault();
      const nextIndex = currentIndex + 1;
      if (nextIndex < itemsCount) {
        this._itemNavigation.setCurrentItem(items[nextIndex]);
        this._itemNavigation._focusCurrentItem();
        this._lastFocusedItemIndex = nextIndex;
      }
    }
    if (isUp(e)) {
      e.preventDefault();
      const nextIndex = currentIndex - 1;
      if (nextIndex >= 0) {
        this._itemNavigation.setCurrentItem(items[nextIndex]);
        this._itemNavigation._focusCurrentItem();
        this._lastFocusedItemIndex = nextIndex;
      }
    }
  }
  get focusableElements() {
    const allFocusableItems = [...this.shadowRoot.querySelectorAll("[ui5-calendar-legend-item]"), ...this.legendItems];
    return allFocusableItems;
  }
  get legendItems() {
    const items = this.getSlottedNodes("items");
    return items.filter((item) => item instanceof CalendarLegendItem_default);
  }
  get defaultItemsMapping() {
    const typeMapping = [
      { type: [CalendarLegendItemType_default.Today], hide: this.hideToday },
      { type: [CalendarLegendItemType_default.Selected], hide: this.hideSelectedDay },
      { type: [CalendarLegendItemType_default.Working], hide: this.hideWorkingDay },
      { type: [CalendarLegendItemType_default.NonWorking], hide: this.hideNonWorkingDay }
    ];
    return typeMapping;
  }
};
__decorate16([
  property_default({ type: Boolean })
], CalendarLegend.prototype, "hideToday", void 0);
__decorate16([
  property_default({ type: Boolean })
], CalendarLegend.prototype, "hideSelectedDay", void 0);
__decorate16([
  property_default({ type: Boolean })
], CalendarLegend.prototype, "hideNonWorkingDay", void 0);
__decorate16([
  property_default({ type: Boolean })
], CalendarLegend.prototype, "hideWorkingDay", void 0);
__decorate16([
  slot_default({
    type: HTMLElement,
    invalidateOnChildChange: true,
    individualSlots: true,
    "default": true
  })
], CalendarLegend.prototype, "items", void 0);
CalendarLegend = __decorate16([
  customElement_default({
    tag: "ui5-calendar-legend",
    renderer: LitRenderer_default,
    styles: CalendarLegend_css_default,
    template: CalendarLegendTemplate_lit_default,
    dependencies: [CalendarLegendItem_default]
  }),
  event_default("_calendar-legend-selection-change", {
    detail: {
      item: { type: CalendarLegendItem_default }
    }
  }),
  event_default("_calendar-legend-focus-out")
], CalendarLegend);
CalendarLegend.define();
var CalendarLegend_default = CalendarLegend;

// node_modules/@ui5/webcomponents/dist/SpecialCalendarDate.js
var __decorate17 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var SpecialCalendarDate = class SpecialCalendarDate2 extends CalendarDate_default2 {
};
__decorate17([
  property_default({ type: CalendarLegendItemType_default, defaultValue: CalendarLegendItemType_default.None })
], SpecialCalendarDate.prototype, "type", void 0);
SpecialCalendarDate = __decorate17([
  customElement_default("ui5-special-date")
], SpecialCalendarDate);
SpecialCalendarDate.define();

// node_modules/@ui5/webcomponents/dist/generated/templates/CalendarTemplate.lit.js
function block015(context, tags, suffix) {
  return suffix ? effectiveHtml`<div class="ui5-cal-root" @keydown=${this._onkeydown}><div id="${ifDefined(this._id)}-content" class="ui5-cal-content"><${scopeTag("ui5-daypicker", tags, suffix)} id="${ifDefined(this._id)}-daypicker" ?hidden="${this._isDayPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" .specialCalendarDates="${ifDefined(this._specialCalendarDates)}" ._hidden="${ifDefined(this._isDayPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .selectionMode="${ifDefined(this.selectionMode)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" ?hide-week-numbers="${this.hideWeekNumbers}" @ui5-change="${ifDefined(this.onSelectedDatesChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></${scopeTag("ui5-daypicker", tags, suffix)}><${scopeTag("ui5-monthpicker", tags, suffix)} id="${ifDefined(this._id)}-MP" ?hidden="${this._isMonthPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" ._hidden="${ifDefined(this._isMonthPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" @ui5-change="${ifDefined(this.onSelectedMonthChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></${scopeTag("ui5-monthpicker", tags, suffix)}><${scopeTag("ui5-yearpicker", tags, suffix)} id="${ifDefined(this._id)}-YP" ?hidden="${this._isYearPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" ._hidden="${ifDefined(this._isYearPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" @ui5-change="${ifDefined(this.onSelectedYearChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></${scopeTag("ui5-yearpicker", tags, suffix)}></div><${scopeTag("ui5-calendar-header", tags, suffix)} id="${ifDefined(this._id)}-head" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .buttonTextForSecondaryCalendarType="${ifDefined(this.secondaryCalendarTypeButtonText)}" timestamp="${ifDefined(this._timestamp)}" .isPrevButtonDisabled="${ifDefined(this._previousButtonDisabled)}" .isNextButtonDisabled="${ifDefined(this._nextButtonDisabled)}" .isMonthButtonHidden="${ifDefined(this._isHeaderMonthButtonHidden)}" ._monthButtonText="${ifDefined(this._headerMonthButtonText)}" ._yearButtonText="${ifDefined(this._headerYearButtonText)}" ._yearButtonTextSecType="${ifDefined(this._headerYearButtonTextSecType)}" @ui5-previous-press="${ifDefined(this.onHeaderPreviousPress)}" @ui5-next-press="${ifDefined(this.onHeaderNextPress)}" @ui5-show-month-press="${ifDefined(this.onHeaderShowMonthPress)}" @ui5-show-year-press="${ifDefined(this.onHeaderShowYearPress)}"></${scopeTag("ui5-calendar-header", tags, suffix)}></div><div @ui5-_calendar-legend-selection-change=${ifDefined(this._onCalendarLegendSelectionChange)} @ui5-_calendar-legend-focus-out=${ifDefined(this._onLegendFocusOut)}><slot name="calendarLegend"></slot></div>` : effectiveHtml`<div class="ui5-cal-root" @keydown=${this._onkeydown}><div id="${ifDefined(this._id)}-content" class="ui5-cal-content"><ui5-daypicker id="${ifDefined(this._id)}-daypicker" ?hidden="${this._isDayPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" .specialCalendarDates="${ifDefined(this._specialCalendarDates)}" ._hidden="${ifDefined(this._isDayPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .selectionMode="${ifDefined(this.selectionMode)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" ?hide-week-numbers="${this.hideWeekNumbers}" @ui5-change="${ifDefined(this.onSelectedDatesChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></ui5-daypicker><ui5-monthpicker id="${ifDefined(this._id)}-MP" ?hidden="${this._isMonthPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" ._hidden="${ifDefined(this._isMonthPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" @ui5-change="${ifDefined(this.onSelectedMonthChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></ui5-monthpicker><ui5-yearpicker id="${ifDefined(this._id)}-YP" ?hidden="${this._isYearPickerHidden}" format-pattern="${ifDefined(this._formatPattern)}" .selectedDates="${ifDefined(this._selectedDatesTimestamps)}" ._hidden="${ifDefined(this._isYearPickerHidden)}" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" timestamp="${ifDefined(this._timestamp)}" @ui5-change="${ifDefined(this.onSelectedYearChange)}" @ui5-navigate="${ifDefined(this.onNavigate)}"></ui5-yearpicker></div><ui5-calendar-header id="${ifDefined(this._id)}-head" .primaryCalendarType="${ifDefined(this._primaryCalendarType)}" .secondaryCalendarType="${ifDefined(this._secondaryCalendarType)}" .buttonTextForSecondaryCalendarType="${ifDefined(this.secondaryCalendarTypeButtonText)}" timestamp="${ifDefined(this._timestamp)}" .isPrevButtonDisabled="${ifDefined(this._previousButtonDisabled)}" .isNextButtonDisabled="${ifDefined(this._nextButtonDisabled)}" .isMonthButtonHidden="${ifDefined(this._isHeaderMonthButtonHidden)}" ._monthButtonText="${ifDefined(this._headerMonthButtonText)}" ._yearButtonText="${ifDefined(this._headerYearButtonText)}" ._yearButtonTextSecType="${ifDefined(this._headerYearButtonTextSecType)}" @ui5-previous-press="${ifDefined(this.onHeaderPreviousPress)}" @ui5-next-press="${ifDefined(this.onHeaderNextPress)}" @ui5-show-month-press="${ifDefined(this.onHeaderShowMonthPress)}" @ui5-show-year-press="${ifDefined(this.onHeaderShowYearPress)}"></ui5-calendar-header></div><div @ui5-_calendar-legend-selection-change=${ifDefined(this._onCalendarLegendSelectionChange)} @ui5-_calendar-legend-focus-out=${ifDefined(this._onLegendFocusOut)}><slot name="calendarLegend"></slot></div>`;
}
var CalendarTemplate_lit_default = block015;

// node_modules/@ui5/webcomponents/dist/generated/themes/Calendar.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData20 = { packageName: "@ui5/webcomponents", fileName: "themes/Calendar.css.ts", content: `:host(:not([hidden])){display:inline-block}.ui5-cal-root{background:var(--sapList_Background);box-sizing:border-box;height:var(--_ui5-v1-24-2_calendar_height);width:var(--_ui5-v1-24-2_calendar_width);padding:var(--_ui5-v1-24-2_calendar_top_bottom_padding) var(--_ui5-v1-24-2_calendar_left_right_padding) 0;display:flex;flex-direction:column-reverse;justify-content:flex-end;overflow:hidden}.ui5-cal-root [ui5-calendar-header]{height:var(--_ui5-v1-24-2_calendar_header_height);font-family:var(--_ui5-v1-24-2_button_fontFamily)}.ui5-cal-root .ui5-cal-content{padding:0 var(--_ui5-v1-24-2_calendar_left_right_padding) var(--_ui5-v1-24-2_calendar_top_bottom_padding)}
` };
var Calendar_css_default = styleData20;

// node_modules/@ui5/webcomponents/dist/Calendar.js
var __decorate18 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Calendar = class Calendar2 extends CalendarPart_default {
  /**
   * @private
   */
  get _selectedDatesTimestamps() {
    return this.dates.map((date) => {
      const value = date.value;
      const validValue = value && !!this.getFormat().parse(value);
      return validValue ? this._getTimeStampFromString(value) / 1e3 : void 0;
    }).filter((date) => !!date);
  }
  constructor() {
    super();
    this._valueIsProcessed = false;
  }
  /**
   * @private
   */
  _setSelectedDates(selectedDates) {
    const selectedValues = selectedDates.map((timestamp) => this.getFormat().format(new Date(timestamp * 1e3), true));
    const valuesInDOM = [...this.dates].map((dateElement) => dateElement.value);
    this.dates.filter((dateElement) => !selectedValues.includes(dateElement.value)).forEach((dateElement) => {
      this.removeChild(dateElement);
    });
    selectedValues.filter((value) => !valuesInDOM.includes(value)).forEach((value) => {
      const dateElement = document.createElement(CalendarDate_default2.getMetadata().getTag());
      dateElement.value = value;
      this.appendChild(dateElement);
    });
  }
  _isValidCalendarDate(dateString) {
    const date = this.getFormat().parse(dateString);
    return !!date;
  }
  get _specialCalendarDates() {
    const validSpecialDates = this._specialDates.filter((date) => {
      const dateType = date.type;
      const dateValue = date.value;
      const isTypeMatch = this._selectedItemType !== "None" ? dateType === this._selectedItemType : true;
      return isTypeMatch && dateValue && this._isValidCalendarDate(dateValue);
    });
    if (validSpecialDates.length === 0) {
      this._selectedItemType = "None";
    }
    const uniqueDates = /* @__PURE__ */ new Set();
    const uniqueSpecialDates = [];
    validSpecialDates.forEach((date) => {
      const dateFromValue = new Date(date.value);
      const timestamp = dateFromValue.getTime();
      if (!uniqueDates.has(timestamp)) {
        uniqueDates.add(timestamp);
        const specialDateTimestamp = CalendarDate_default.fromLocalJSDate(dateFromValue).valueOf() / 1e3;
        const type = date.type;
        uniqueSpecialDates.push({ specialDateTimestamp, type });
      }
    });
    return uniqueSpecialDates;
  }
  _onCalendarLegendSelectionChange(e) {
    this._selectedItemType = e.detail.item.type;
    this._currentPickerDOM._autoFocus = false;
  }
  /**
   * Makes sure that _currentPicker is always set to a value, allowed by _pickersMode
   */
  _normalizeCurrentPicker() {
    if (this._currentPicker === "day" && this._pickersMode !== CalendarPickersMode_default.DAY_MONTH_YEAR) {
      this._currentPicker = "month";
    }
    if (this._currentPicker === "month" && this._pickersMode === CalendarPickersMode_default.YEAR) {
      this._currentPicker = "year";
    }
  }
  onBeforeRendering() {
    this._normalizeCurrentPicker();
    if (!this._valueIsProcessed) {
      if (this._selectedDatesTimestamps) {
        this.timestamp = this._selectedDatesTimestamps[0];
      }
      this._valueIsProcessed = true;
    }
  }
  async onAfterRendering() {
    await renderFinished();
    this._previousButtonDisabled = !this._currentPickerDOM._hasPreviousPage();
    this._nextButtonDisabled = !this._currentPickerDOM._hasNextPage();
    const yearFormat = DateFormat_default2.getDateInstance({ format: "y", calendarType: this.primaryCalendarType });
    const localeData = getCachedLocaleDataInstance_default(getLocale_default());
    this._headerMonthButtonText = localeData.getMonthsStandAlone("wide", this.primaryCalendarType)[this._calendarDate.getMonth()];
    if (this._currentPicker === "year") {
      const rangeStart = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      const rangeEnd = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      rangeStart.setYear(this._currentPickerDOM._firstYear);
      rangeEnd.setYear(this._currentPickerDOM._lastYear);
      this._headerYearButtonText = `${yearFormat.format(rangeStart.toLocalJSDate(), true)} - ${yearFormat.format(rangeEnd.toLocalJSDate(), true)}`;
    } else {
      this._headerYearButtonText = String(yearFormat.format(this._localDate, true));
    }
    this._secondaryCalendarType && this._setSecondaryCalendarTypeButtonText();
  }
  onInvalidation(changeInfo) {
    if (changeInfo.reason === "childchange") {
      this._valueIsProcessed = false;
    }
  }
  /**
   * The user clicked the "month" button in the header
   */
  onHeaderShowMonthPress(e) {
    this._currentPickerDOM._autoFocus = false;
    this._currentPicker = "month";
    this.fireEvent("show-month-press", e);
  }
  /**
   * The user clicked the "year" button in the header
   */
  onHeaderShowYearPress(e) {
    this._currentPickerDOM._autoFocus = false;
    this._currentPicker = "year";
    this.fireEvent("show-year-press", e);
  }
  get _currentPickerDOM() {
    return this.shadowRoot.querySelector(`[ui5-${this._currentPicker}picker]`);
  }
  /**
   * The year clicked the "Previous" button in the header
   */
  onHeaderPreviousPress() {
    this._currentPickerDOM._showPreviousPage();
    if (this.calendarLegend) {
      this._currentPickerDOM._autoFocus = true;
    }
  }
  /**
   * The year clicked the "Next" button in the header
   */
  onHeaderNextPress() {
    this._currentPickerDOM._showNextPage();
    if (this.calendarLegend) {
      this._currentPickerDOM._autoFocus = true;
    }
  }
  _setSecondaryCalendarTypeButtonText() {
    const yearFormatSecType = DateFormat_default2.getDateInstance({ format: "y", calendarType: this._secondaryCalendarType });
    if (this._currentPicker === "year") {
      const rangeStart = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      const rangeEnd = new CalendarDate_default(this._calendarDate, this._primaryCalendarType);
      rangeStart.setYear(this._currentPickerDOM._firstYear);
      rangeEnd.setYear(this._currentPickerDOM._lastYear);
      const rangeStartSecType = transformDateToSecondaryType_default(this.primaryCalendarType, this._secondaryCalendarType, rangeStart.valueOf() / 1e3, true).firstDate;
      const rangeEndSecType = transformDateToSecondaryType_default(this.primaryCalendarType, this._secondaryCalendarType, rangeEnd.valueOf() / 1e3, true).lastDate;
      this._headerYearButtonTextSecType = `${yearFormatSecType.format(rangeStartSecType.toLocalJSDate(), true)} - ${yearFormatSecType.format(rangeEndSecType.toLocalJSDate(), true)}`;
    } else {
      this._headerYearButtonTextSecType = String(yearFormatSecType.format(this._localDate, true));
    }
  }
  get secondaryCalendarTypeButtonText() {
    if (!this.hasSecondaryCalendarType) {
      return;
    }
    const localDate = new Date(this._timestamp * 1e3);
    const secondYearFormat = DateFormat_default2.getDateInstance({ format: "y", calendarType: this._secondaryCalendarType });
    const dateInSecType = transformDateToSecondaryType_default(this._primaryCalendarType, this._secondaryCalendarType, this._timestamp);
    const secondMonthInfo = convertMonthNumbersToMonthNames_default(dateInSecType.firstDate.getMonth(), dateInSecType.lastDate.getMonth(), this._secondaryCalendarType);
    const secondYearText = secondYearFormat.format(localDate, true);
    return {
      yearButtonText: secondYearText,
      monthButtonText: secondMonthInfo.text,
      monthButtonInfo: secondMonthInfo.textInfo
    };
  }
  /**
   * The month button is hidden when the month picker or year picker is shown
   * @private
   */
  get _isHeaderMonthButtonHidden() {
    return this._currentPicker === "month" || this._currentPicker === "year";
  }
  get _isDayPickerHidden() {
    return this._currentPicker !== "day";
  }
  get _isMonthPickerHidden() {
    return this._currentPicker !== "month";
  }
  get _isYearPickerHidden() {
    return this._currentPicker !== "year";
  }
  _fireEventAndUpdateSelectedDates(selectedDates) {
    const datesValues = selectedDates.map((timestamp) => {
      const calendarDate = CalendarDate_default.fromTimestamp(timestamp * 1e3, this._primaryCalendarType);
      return this.getFormat().format(calendarDate.toUTCJSDate(), true);
    });
    const defaultPrevented = !this.fireEvent("selected-dates-change", { timestamp: this.timestamp, dates: [...selectedDates], values: datesValues }, true);
    if (!defaultPrevented) {
      this._setSelectedDates(selectedDates);
    }
  }
  onSelectedDatesChange(e) {
    this.timestamp = e.detail.timestamp;
    this._fireEventAndUpdateSelectedDates(e.detail.dates);
  }
  onSelectedMonthChange(e) {
    this.timestamp = e.detail.timestamp;
    if (this._pickersMode === CalendarPickersMode_default.DAY_MONTH_YEAR) {
      this._currentPicker = "day";
    } else {
      this._fireEventAndUpdateSelectedDates([this.timestamp]);
    }
    this._currentPickerDOM._autoFocus = true;
  }
  onSelectedYearChange(e) {
    this.timestamp = e.detail.timestamp;
    if (this._pickersMode === CalendarPickersMode_default.DAY_MONTH_YEAR) {
      this._currentPicker = "day";
    } else if (this._pickersMode === CalendarPickersMode_default.MONTH_YEAR) {
      this._currentPicker = "month";
    } else {
      this._fireEventAndUpdateSelectedDates([this.timestamp]);
    }
    this._currentPickerDOM._autoFocus = true;
  }
  onNavigate(e) {
    this.timestamp = e.detail.timestamp;
  }
  _onkeydown(e) {
    if (isF4(e) && this._currentPicker !== "month") {
      this._currentPicker = "month";
    }
    if (isF4Shift(e) && this._currentPicker !== "year") {
      this._currentPicker = "year";
    }
  }
  _onLegendFocusOut() {
    this._selectedItemType = "None";
  }
  get _specialDates() {
    return this.getSlottedNodes("specialDates");
  }
  /**
   * Returns an array of UTC timestamps, representing the selected dates.
   * @protected
   * @deprecated
   */
  get selectedDates() {
    return this._selectedDatesTimestamps;
  }
  /**
   * Creates instances of `ui5-date` inside this `ui5-calendar` with values, equal to the provided UTC timestamps
   * @protected
   * @deprecated
   * @param selectedDates Array of UTC timestamps
   */
  set selectedDates(selectedDates) {
    this._setSelectedDates(selectedDates);
  }
};
__decorate18([
  property_default({
    type: CalendarSelectionMode_default,
    defaultValue: CalendarSelectionMode_default.Single
  })
], Calendar.prototype, "selectionMode", void 0);
__decorate18([
  property_default({ type: Boolean })
], Calendar.prototype, "hideWeekNumbers", void 0);
__decorate18([
  property_default({ defaultValue: "day" })
], Calendar.prototype, "_currentPicker", void 0);
__decorate18([
  property_default({ type: Boolean })
], Calendar.prototype, "_previousButtonDisabled", void 0);
__decorate18([
  property_default({ type: Boolean })
], Calendar.prototype, "_nextButtonDisabled", void 0);
__decorate18([
  property_default()
], Calendar.prototype, "_headerMonthButtonText", void 0);
__decorate18([
  property_default()
], Calendar.prototype, "_headerYearButtonText", void 0);
__decorate18([
  property_default()
], Calendar.prototype, "_headerYearButtonTextSecType", void 0);
__decorate18([
  property_default({ type: CalendarPickersMode_default, defaultValue: CalendarPickersMode_default.DAY_MONTH_YEAR, noAttribute: true })
], Calendar.prototype, "_pickersMode", void 0);
__decorate18([
  slot_default({ type: HTMLElement })
], Calendar.prototype, "calendarLegend", void 0);
__decorate18([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true, "default": true })
], Calendar.prototype, "dates", void 0);
__decorate18([
  slot_default({ type: HTMLElement, invalidateOnChildChange: true })
], Calendar.prototype, "specialDates", void 0);
__decorate18([
  property_default({ type: CalendarLegendItemType_default, defaultValue: CalendarLegendItemType_default.None })
], Calendar.prototype, "_selectedItemType", void 0);
Calendar = __decorate18([
  customElement_default({
    tag: "ui5-calendar",
    fastNavigation: true,
    template: CalendarTemplate_lit_default,
    styles: Calendar_css_default,
    dependencies: [
      CalendarDate_default2,
      CalendarHeader_default,
      DayPicker_default,
      MonthPicker_default,
      YearPicker_default,
      CalendarLegend_default
    ]
  }),
  event_default("selected-dates-change", {
    detail: {
      /**
       * @public
       */
      dates: { type: Array },
      /**
       * @public
       */
      values: { type: Array },
      timestamp: { type: Number }
    }
  }),
  event_default("show-month-press"),
  event_default("show-year-press")
], Calendar);
Calendar.define();
var Calendar_default = Calendar;

// node_modules/lit-html/development/static.js
var brand = Symbol.for("");
var unwrapStaticValue = (value) => {
  if ((value === null || value === void 0 ? void 0 : value.r) !== brand) {
    return void 0;
  }
  return value === null || value === void 0 ? void 0 : value["_$litStatic$"];
};
var unsafeStatic = (value) => ({
  ["_$litStatic$"]: value,
  r: brand
});
var stringsCache = /* @__PURE__ */ new Map();
var withStatic = (coreTag) => (strings, ...values) => {
  const l = values.length;
  let staticValue;
  let dynamicValue;
  const staticStrings = [];
  const dynamicValues = [];
  let i = 0;
  let hasStatics = false;
  let s;
  while (i < l) {
    s = strings[i];
    while (i < l && (dynamicValue = values[i], staticValue = unwrapStaticValue(dynamicValue)) !== void 0) {
      s += staticValue + strings[++i];
      hasStatics = true;
    }
    if (i !== l) {
      dynamicValues.push(dynamicValue);
    }
    staticStrings.push(s);
    i++;
  }
  if (i === l) {
    staticStrings.push(strings[l]);
  }
  if (hasStatics) {
    const key = staticStrings.join("$$lit$$");
    strings = stringsCache.get(key);
    if (strings === void 0) {
      staticStrings.raw = staticStrings;
      stringsCache.set(key, strings = staticStrings);
    }
    values = dynamicValues;
  }
  return coreTag(strings, ...values);
};
var html2 = withStatic(html);
var svg2 = withStatic(svg);

// node_modules/@ui5/webcomponents-base/dist/CustomElementsScope.js
var LitStatic = class {
};
LitStatic.html = html2;
LitStatic.svg = svg2;
LitStatic.unsafeStatic = unsafeStatic;
registerFeature("LitStatic", LitStatic);

// node_modules/@ui5/webcomponents-base/dist/util/Caret.js
var getCaretPosition = (field) => {
  let caretPos = 0;
  if (field.selectionStart || field.selectionStart === 0) {
    caretPos = field.selectionDirection === "backward" ? field.selectionStart : field.selectionEnd;
  }
  return caretPos;
};
var setCaretPosition = (field, caretPos) => {
  if (field.selectionStart) {
    field.focus();
    field.setSelectionRange(caretPos, caretPos);
  } else {
    field.focus();
  }
};

// node_modules/@ui5/webcomponents-icons/dist/v4/not-editable.js
var name19 = "not-editable";
var pathData28 = "M443 104q5 7 5 12 0 6-5 11L118 453q-4 4-8 4L0 480l22-110q0-5 4-9L352 36q4-4 11-4t11 4zm-121 99l-46-45L52 381l46 46zm87-88l-46-44-64 64 45 45zm71 204l-63 64-65-64-33 32 66 63-66 66 33 32 65-66 63 66 32-32-66-66 66-63z";
var ltr19 = false;
var collection19 = "SAP-icons-v4";
var packageName19 = "@ui5/webcomponents-icons";
registerIcon(name19, { pathData: pathData28, ltr: ltr19, collection: collection19, packageName: packageName19 });

// node_modules/@ui5/webcomponents-icons/dist/v5/not-editable.js
var name20 = "not-editable";
var pathData29 = "M504 94q7 7 7 18t-7 18L130 505q-9 7-18 7H26q-11 0-18.5-7.5T0 486v-86q0-10 8-18L381 7q9-7 18-7 11 0 18 7zm-55 18l-50-50-50 50 50 50zm-86 86l-50-50L62 400l50 50zm142 270q7 7 7 18t-7.5 18.5T486 512t-18-7l-37-38-38 38q-7 7-18 7t-18.5-7.5T349 486q0-10 8-18l38-37-38-38q-8-8-8-18 0-11 7.5-18.5T375 349q10 0 18 8l38 37 37-37q8-8 18-8 11 0 18.5 7.5T512 375t-7 18l-38 38z";
var ltr20 = false;
var collection20 = "SAP-icons-v5";
var packageName20 = "@ui5/webcomponents-icons";
registerIcon(name20, { pathData: pathData29, ltr: ltr20, collection: collection20, packageName: packageName20 });

// node_modules/@ui5/webcomponents-icons/dist/not-editable.js
var pathData30 = isLegacyThemeFamily() ? pathData28 : pathData29;

// node_modules/@ui5/webcomponents/dist/types/InputType.js
var InputType;
(function(InputType2) {
  InputType2["Text"] = "Text";
  InputType2["Email"] = "Email";
  InputType2["Number"] = "Number";
  InputType2["Password"] = "Password";
  InputType2["Tel"] = "Tel";
  InputType2["URL"] = "URL";
})(InputType || (InputType = {}));
var InputType_default = InputType;

// node_modules/@ui5/webcomponents/dist/generated/templates/InputTemplate.lit.js
function block016(context, tags, suffix) {
  return effectiveHtml`<div class="ui5-input-root ui5-input-focusable-element" @focusin="${this._onfocusin}" @focusout="${this._onfocusout}"><div class="ui5-input-content"><input id="${ifDefined(this._id)}-inner" class="ui5-input-inner" style="${styleMap(this.styles.innerInput)}" type="${ifDefined(this.inputType)}" inner-input ?inner-input-with-icon="${this.icon.length}" ?disabled="${this.disabled}" ?readonly="${this._readonly}" .value="${ifDefined(this._innerValue)}" placeholder="${ifDefined(this._placeholder)}" maxlength="${ifDefined(this.maxlength)}" role="${ifDefined(this.accInfo.input.role)}" aria-controls="${ifDefined(this.accInfo.input.ariaControls)}" aria-invalid="${ifDefined(this.accInfo.input.ariaInvalid)}" aria-haspopup="${ifDefined(this.accInfo.input.ariaHasPopup)}" aria-describedby="${ifDefined(this.accInfo.input.ariaDescribedBy)}" aria-roledescription="${ifDefined(this.accInfo.input.ariaRoledescription)}" aria-autocomplete="${ifDefined(this.accInfo.input.ariaAutoComplete)}" aria-expanded="${ifDefined(this.accInfo.input.ariaExpanded)}" aria-label="${ifDefined(this.accInfo.input.ariaLabel)}" aria-required="${ifDefined(this.required)}" @input="${this._handleInput}" @change="${this._handleChange}" @keydown="${this._onkeydown}" @keyup="${this._onkeyup}" @click=${this._click} @focusin=${this.innerFocusIn} data-sap-focus-ref step="${ifDefined(this.nativeInputAttributes.step)}" min="${ifDefined(this.nativeInputAttributes.min)}" max="${ifDefined(this.nativeInputAttributes.max)}" />${this._effectiveShowClearIcon ? block113.call(this, context, tags, suffix) : void 0}${this.icon.length ? block212.call(this, context, tags, suffix) : void 0}<div class="ui5-input-value-state-icon">${unsafeHTML(this._valueStateInputIcon)}</div>${this.showSuggestions ? block310.call(this, context, tags, suffix) : void 0}${this.accInfo.input.ariaDescription ? block46.call(this, context, tags, suffix) : void 0}${this.hasValueState ? block56.call(this, context, tags, suffix) : void 0}</div><slot name="formSupport"></slot></div>`;
}
function block113(context, tags, suffix) {
  return suffix ? effectiveHtml`<div @click=${this._clear} @mousedown=${this._iconMouseDown} class="ui5-input-clear-icon-wrapper" input-icon tabindex="-1"><${scopeTag("ui5-icon", tags, suffix)} tabindex="-1" class="ui5-input-clear-icon" name="decline" accessible-name="${ifDefined(this.clearIconAccessibleName)}"></${scopeTag("ui5-icon", tags, suffix)}></div>` : effectiveHtml`<div @click=${this._clear} @mousedown=${this._iconMouseDown} class="ui5-input-clear-icon-wrapper" input-icon tabindex="-1"><ui5-icon tabindex="-1" class="ui5-input-clear-icon" name="decline" accessible-name="${ifDefined(this.clearIconAccessibleName)}"></ui5-icon></div>`;
}
function block212(context, tags, suffix) {
  return effectiveHtml`<div class="ui5-input-icon-root"><slot name="icon"></slot></div>`;
}
function block310(context, tags, suffix) {
  return effectiveHtml`<span id="${ifDefined(this._id)}-suggestionsText" class="ui5-hidden-text">${ifDefined(this.suggestionsText)}</span><span id="${ifDefined(this._id)}-selectionText" class="ui5-hidden-text" aria-live="polite" role="status"></span><span id="${ifDefined(this._id)}-suggestionsCount" class="ui5-hidden-text" aria-live="polite">${ifDefined(this.availableSuggestionsCount)}</span>`;
}
function block46(context, tags, suffix) {
  return effectiveHtml`<span id="${ifDefined(this._id)}-descr" class="ui5-hidden-text">${ifDefined(this.accInfo.input.ariaDescription)}</span>`;
}
function block56(context, tags, suffix) {
  return effectiveHtml`<span id="${ifDefined(this._id)}-valueStateDesc" class="ui5-hidden-text">${ifDefined(this.ariaValueStateHiddenText)}</span>`;
}
var InputTemplate_lit_default = block016;

// node_modules/@ui5/webcomponents/dist/generated/templates/InputPopoverTemplate.lit.js
function block017(context, tags, suffix) {
  return effectiveHtml`${this.showSuggestions ? block114.call(this, context, tags, suffix) : void 0}${this.hasValueStateMessage ? block172.call(this, context, tags, suffix) : void 0} `;
}
function block114(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-responsive-popover", tags, suffix)} class="${classMap(this.classes.popover)}" hide-arrow _disable-initial-focus placement-type="Bottom" horizontal-align="Left" style="${styleMap(this.styles.suggestionsPopover)}" @ui5-after-open="${ifDefined(this._afterOpenPopover)}" @ui5-after-close="${ifDefined(this._afterClosePopover)}" @ui5-scroll="${ifDefined(this._scroll)}">${this._isPhone ? block213.call(this, context, tags, suffix) : void 0}${!this._isPhone ? block74.call(this, context, tags, suffix) : void 0}<${scopeTag("ui5-list", tags, suffix)} separators="${ifDefined(this.suggestionSeparators)}" @mousedown="${this.onItemMouseDown}" mode="SingleSelect">${repeat(this.suggestionObjects, (item, index) => item._id || index, (item, index) => block123.call(this, context, tags, suffix, item, index))}</${scopeTag("ui5-list", tags, suffix)}>${this._isPhone ? block162.call(this, context, tags, suffix) : void 0}</${scopeTag("ui5-responsive-popover", tags, suffix)}>` : effectiveHtml`<ui5-responsive-popover class="${classMap(this.classes.popover)}" hide-arrow _disable-initial-focus placement-type="Bottom" horizontal-align="Left" style="${styleMap(this.styles.suggestionsPopover)}" @ui5-after-open="${ifDefined(this._afterOpenPopover)}" @ui5-after-close="${ifDefined(this._afterClosePopover)}" @ui5-scroll="${ifDefined(this._scroll)}">${this._isPhone ? block213.call(this, context, tags, suffix) : void 0}${!this._isPhone ? block74.call(this, context, tags, suffix) : void 0}<ui5-list separators="${ifDefined(this.suggestionSeparators)}" @mousedown="${this.onItemMouseDown}" mode="SingleSelect">${repeat(this.suggestionObjects, (item, index) => item._id || index, (item, index) => block123.call(this, context, tags, suffix, item, index))}</ui5-list>${this._isPhone ? block162.call(this, context, tags, suffix) : void 0}</ui5-responsive-popover>`;
}
function block213(context, tags, suffix) {
  return suffix ? effectiveHtml`<div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(this._headerTitleText)}</span><${scopeTag("ui5-button", tags, suffix)} class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${this._closeRespPopover}"></${scopeTag("ui5-button", tags, suffix)}></div><div class="row"><div class="input-root-phone native-input-wrapper"><${scopeTag("ui5-input", tags, suffix)} class="ui5-input-inner-phone" type="${ifDefined(this.inputType)}" .value="${ifDefined(this.value)}" ?show-clear-icon=${this.showClearIcon} placeholder="${ifDefined(this.placeholder)}" @ui5-input="${ifDefined(this._handleInput)}" @ui5-change="${ifDefined(this._handleChange)}"></${scopeTag("ui5-input", tags, suffix)}></div></div></div>${this.hasValueStateMessage ? block311.call(this, context, tags, suffix) : void 0}` : effectiveHtml`<div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(this._headerTitleText)}</span><ui5-button class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${this._closeRespPopover}"></ui5-button></div><div class="row"><div class="input-root-phone native-input-wrapper"><ui5-input class="ui5-input-inner-phone" type="${ifDefined(this.inputType)}" .value="${ifDefined(this.value)}" ?show-clear-icon=${this.showClearIcon} placeholder="${ifDefined(this.placeholder)}" @ui5-input="${ifDefined(this._handleInput)}" @ui5-change="${ifDefined(this._handleChange)}"></ui5-input></div></div></div>${this.hasValueStateMessage ? block311.call(this, context, tags, suffix) : void 0}`;
}
function block311(context, tags, suffix) {
  return suffix ? effectiveHtml`<div class="${classMap(this.classes.popoverValueState)}" style="${styleMap(this.styles.suggestionPopoverHeader)}"><${scopeTag("ui5-icon", tags, suffix)} class="ui5-input-value-state-message-icon" name="${ifDefined(this._valueStateMessageInputIcon)}"></${scopeTag("ui5-icon", tags, suffix)}>${this.shouldDisplayDefaultValueStateMessage ? block47.call(this, context, tags, suffix) : block57.call(this, context, tags, suffix)}</div>` : effectiveHtml`<div class="${classMap(this.classes.popoverValueState)}" style="${styleMap(this.styles.suggestionPopoverHeader)}"><ui5-icon class="ui5-input-value-state-message-icon" name="${ifDefined(this._valueStateMessageInputIcon)}"></ui5-icon>${this.shouldDisplayDefaultValueStateMessage ? block47.call(this, context, tags, suffix) : block57.call(this, context, tags, suffix)}</div>`;
}
function block47(context, tags, suffix) {
  return effectiveHtml`${ifDefined(this.valueStateText)}`;
}
function block57(context, tags, suffix) {
  return effectiveHtml`${repeat(this.valueStateMessageText, (item, index) => item._id || index, (item, index) => block65.call(this, context, tags, suffix, item, index))}`;
}
function block65(context, tags, suffix, item, index) {
  return effectiveHtml`${ifDefined(item)}`;
}
function block74(context, tags, suffix) {
  return effectiveHtml`${this.hasValueStateMessage ? block84.call(this, context, tags, suffix) : void 0}`;
}
function block84(context, tags, suffix) {
  return suffix ? effectiveHtml`<div slot="header" ?focused=${this._isValueStateFocused} class="ui5-responsive-popover-header ${classMap(this.classes.popoverValueState)}" style=${styleMap(this.styles.suggestionPopoverHeader)}><${scopeTag("ui5-icon", tags, suffix)} class="ui5-input-value-state-message-icon" name="${ifDefined(this._valueStateMessageInputIcon)}"></${scopeTag("ui5-icon", tags, suffix)}>${this.shouldDisplayDefaultValueStateMessage ? block94.call(this, context, tags, suffix) : block104.call(this, context, tags, suffix)}</div>` : effectiveHtml`<div slot="header" ?focused=${this._isValueStateFocused} class="ui5-responsive-popover-header ${classMap(this.classes.popoverValueState)}" style=${styleMap(this.styles.suggestionPopoverHeader)}><ui5-icon class="ui5-input-value-state-message-icon" name="${ifDefined(this._valueStateMessageInputIcon)}"></ui5-icon>${this.shouldDisplayDefaultValueStateMessage ? block94.call(this, context, tags, suffix) : block104.call(this, context, tags, suffix)}</div>`;
}
function block94(context, tags, suffix) {
  return effectiveHtml`${ifDefined(this.valueStateText)}`;
}
function block104(context, tags, suffix) {
  return effectiveHtml`${repeat(this.valueStateMessageText, (item, index) => item._id || index, (item, index) => block115.call(this, context, tags, suffix, item, index))}`;
}
function block115(context, tags, suffix, item, index) {
  return effectiveHtml`${ifDefined(item)}`;
}
function block123(context, tags, suffix, item, index) {
  return effectiveHtml`${item.groupItem ? block132.call(this, context, tags, suffix, item, index) : block142.call(this, context, tags, suffix, item, index)}`;
}
function block132(context, tags, suffix, item, index) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-li-groupheader", tags, suffix)} data-ui5-key="${ifDefined(item.key)}">${unsafeHTML(item.text)}</${scopeTag("ui5-li-groupheader", tags, suffix)}>` : effectiveHtml`<ui5-li-groupheader data-ui5-key="${ifDefined(item.key)}">${unsafeHTML(item.text)}</ui5-li-groupheader>`;
}
function block142(context, tags, suffix, item, index) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-li-suggestion-item", tags, suffix)} wrapping-type="Normal" image="${ifDefined(item.image)}" icon="${ifDefined(item.icon)}" additional-text="${ifDefined(item.additionalText)}" type="${ifDefined(item.type)}" additional-text-state="${ifDefined(item.additionalTextState)}" data-ui5-key="${ifDefined(item.key)}">${unsafeHTML(item.text)}${item.description ? block152.call(this, context, tags, suffix, item, index) : void 0}</${scopeTag("ui5-li-suggestion-item", tags, suffix)}>` : effectiveHtml`<ui5-li-suggestion-item wrapping-type="Normal" image="${ifDefined(item.image)}" icon="${ifDefined(item.icon)}" additional-text="${ifDefined(item.additionalText)}" type="${ifDefined(item.type)}" additional-text-state="${ifDefined(item.additionalTextState)}" data-ui5-key="${ifDefined(item.key)}">${unsafeHTML(item.text)}${item.description ? block152.call(this, context, tags, suffix, item, index) : void 0}</ui5-li-suggestion-item>`;
}
function block152(context, tags, suffix, item, index) {
  return effectiveHtml`<span slot="richDescription">${unsafeHTML(item.description)}</span>`;
}
function block162(context, tags, suffix) {
  return suffix ? effectiveHtml`<div slot="footer" class="ui5-responsive-popover-footer"><${scopeTag("ui5-button", tags, suffix)} design="Transparent" @click="${this._closeRespPopover}">OK</${scopeTag("ui5-button", tags, suffix)}></div>` : effectiveHtml`<div slot="footer" class="ui5-responsive-popover-footer"><ui5-button design="Transparent" @click="${this._closeRespPopover}">OK</ui5-button></div>`;
}
function block172(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-popover", tags, suffix)} skip-registry-update _disable-initial-focus prevent-focus-restore hide-arrow class="ui5-valuestatemessage-popover" placement-type="Bottom" horizontal-align="${ifDefined(this._valueStatePopoverHorizontalAlign)}"><div slot="header" class="${classMap(this.classes.popoverValueState)}" style="${styleMap(this.styles.popoverHeader)}"><${scopeTag("ui5-icon", tags, suffix)} class="ui5-input-value-state-message-icon" name="${ifDefined(this._valueStateMessageInputIcon)}"></${scopeTag("ui5-icon", tags, suffix)}>${this.shouldDisplayDefaultValueStateMessage ? block182.call(this, context, tags, suffix) : block192.call(this, context, tags, suffix)}</div></${scopeTag("ui5-popover", tags, suffix)}>` : effectiveHtml`<ui5-popover skip-registry-update _disable-initial-focus prevent-focus-restore hide-arrow class="ui5-valuestatemessage-popover" placement-type="Bottom" horizontal-align="${ifDefined(this._valueStatePopoverHorizontalAlign)}"><div slot="header" class="${classMap(this.classes.popoverValueState)}" style="${styleMap(this.styles.popoverHeader)}"><ui5-icon class="ui5-input-value-state-message-icon" name="${ifDefined(this._valueStateMessageInputIcon)}"></ui5-icon>${this.shouldDisplayDefaultValueStateMessage ? block182.call(this, context, tags, suffix) : block192.call(this, context, tags, suffix)}</div></ui5-popover>`;
}
function block182(context, tags, suffix) {
  return effectiveHtml`${ifDefined(this.valueStateText)}`;
}
function block192(context, tags, suffix) {
  return effectiveHtml`${repeat(this.valueStateMessageText, (item, index) => item._id || index, (item, index) => block20.call(this, context, tags, suffix, item, index))}`;
}
function block20(context, tags, suffix, item, index) {
  return effectiveHtml`${ifDefined(item)}`;
}
var InputPopoverTemplate_lit_default = block017;

// node_modules/@ui5/webcomponents/dist/Filters.js
var StartsWith = (value, items, propName) => items.filter((item) => item[propName].toLowerCase().startsWith(value.toLowerCase()));

// node_modules/@ui5/webcomponents/dist/generated/themes/Input.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData21 = { packageName: "@ui5/webcomponents", fileName: "themes/Input.css.ts", content: `:host{vertical-align:middle}.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}[input-icon]{color:var(--_ui5-v1-24-2_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v1-24-2_input_icon_padding);border-inline-start:var(--_ui5-v1-24-2_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v1-24-2_input_icon_border_radius)}[input-icon][pressed]{background:var(--_ui5-v1-24-2_input_icon_pressed_bg);box-shadow:var(--_ui5-v1-24-2_input_icon_box_shadow);border-inline-start:var(--_ui5-v1-24-2_select_hover_icon_left_border);color:var(--_ui5-v1-24-2_input_icon_pressed_color)}[input-icon]:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v1-24-2_input_icon_box_shadow);border-inline-start:var(--_ui5-v1-24-2_select_hover_icon_left_border);color:var(--_ui5-v1-24-2_input_icon_pressed_color)}[input-icon]:not([pressed]):not(:active):hover{background:var(--_ui5-v1-24-2_input_icon_hover_bg);box-shadow:var(--_ui5-v1-24-2_input_icon_box_shadow)}[input-icon]:hover{border-inline-start:var(--_ui5-v1-24-2_select_hover_icon_left_border);box-shadow:var(--_ui5-v1-24-2_input_icon_box_shadow)}:host(:not([hidden])){display:inline-block}:host{width:var(--_ui5-v1-24-2_input_width);min-width:calc(var(--_ui5-v1-24-2_input_min_width) + (var(--_ui5-v1-24-2-input-icons-count)*var(--_ui5-v1-24-2_input_icon_width)));margin:var(--_ui5-v1-24-2_input_margin_top_bottom) 0;height:var(--_ui5-v1-24-2_input_height);color:var(--sapField_TextColor);font-size:var(--sapFontSize);font-family:"72override",var(--sapFontFamily);font-style:normal;border:var(--_ui5-v1-24-2-input-border);border-radius:var(--_ui5-v1-24-2_input_border_radius);box-sizing:border-box;text-align:start;transition:var(--_ui5-v1-24-2_input_transition);background:var(--sapField_BackgroundStyle);background-color:var(--_ui5-v1-24-2_input_background_color)}:host(:not([readonly])),:host([readonly][disabled]){box-shadow:var(--sapField_Shadow)}:host([focused]:not([opened])){border-color:var(--_ui5-v1-24-2_input_focused_border_color);background-color:var(--sapField_Focus_Background)}.ui5-input-focusable-element{position:relative}:host([focused]:not([opened])) .ui5-input-focusable-element:after{content:var(--ui5-v1-24-2_input_focus_pseudo_element_content);position:absolute;pointer-events:none;z-index:2;border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--_ui5-v1-24-2_input_focus_outline_color);border-radius:var(--_ui5-v1-24-2_input_focus_border_radius);top:var(--_ui5-v1-24-2_input_focus_offset);bottom:var(--_ui5-v1-24-2_input_focus_offset);left:var(--_ui5-v1-24-2_input_focus_offset);right:var(--_ui5-v1-24-2_input_focus_offset)}:host([focused][readonly]:not([opened])) .ui5-input-focusable-element:after{top:var(--_ui5-v1-24-2_input_readonly_focus_offset);bottom:var(--_ui5-v1-24-2_input_readonly_focus_offset);left:var(--_ui5-v1-24-2_input_readonly_focus_offset);right:var(--_ui5-v1-24-2_input_readonly_focus_offset);border-radius:var(--_ui5-v1-24-2_input_readonly_focus_border_radius)}.ui5-input-root:before{content:"";position:absolute;width:calc(100% - 2px);left:1px;bottom:-2px;border-bottom-left-radius:8px;border-bottom-right-radius:8px;height:var(--_ui5-v1-24-2_input_bottom_border_height);transition:var(--_ui5-v1-24-2_input_transition);background-color:var(--_ui5-v1-24-2_input_bottom_border_color)}.ui5-input-root{width:100%;height:100%;position:relative;background:transparent;display:inline-block;outline:none;box-sizing:border-box;color:inherit;transition:border-color .2s ease-in-out;border-radius:var(--_ui5-v1-24-2_input_border_radius);overflow:hidden}:host([disabled]){opacity:var(--_ui5-v1-24-2_input_disabled_opacity);cursor:default;pointer-events:none;background-color:var(--_ui5-v1-24-2-input_disabled_background);border-color:var(--_ui5-v1-24-2_input_disabled_border_color)}:host([disabled]) .ui5-input-root:before,:host([readonly]) .ui5-input-root:before{content:none}[inner-input]{background:transparent;color:inherit;border:none;font-style:inherit;-webkit-appearance:none;-moz-appearance:textfield;padding:var(--_ui5-v1-24-2_input_inner_padding);box-sizing:border-box;min-width:var(--_ui5-v1-24-2_input_min_width);width:100%;text-overflow:ellipsis;flex:1;outline:none;font-size:inherit;font-family:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;text-align:inherit}[inner-input][inner-input-with-icon]{padding:var(--_ui5-v1-24-2_input_inner_padding_with_icon)}.ui5-input-value-state-icon{height:100%;display:var(--_ui5-v1-24-2-input-value-state-icon-display);align-items:center}.ui5-input-value-state-icon>svg{margin-right:8px}[inner-input]::selection{background:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}:host([disabled]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-webkit-input-placeholder{visibility:hidden}:host([disabled]) [inner-input]::-moz-placeholder{visibility:hidden}:host([readonly]) [inner-input]::-moz-placeholder{visibility:hidden}[inner-input]::-webkit-input-placeholder{font-weight:400;font-style:var(--_ui5-v1-24-2_input_placeholder_style);color:var(--_ui5-v1-24-2_input_placeholder_color);padding-right:.125rem}[inner-input]::-moz-placeholder{font-weight:400;font-style:var(--_ui5-v1-24-2_input_placeholder_style);color:var(--_ui5-v1-24-2_input_placeholder_color);padding-right:.125rem}:host([value-state="Error"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v1-24-2-input_error_placeholder_color);font-weight:var(--_ui5-v1-24-2_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Error"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v1-24-2-input_error_placeholder_color);font-weight:var(--_ui5-v1-24-2_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Warning"]) [inner-input]::-webkit-input-placeholder{font-weight:var(--_ui5-v1-24-2_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Warning"]) [inner-input]::-moz-placeholder{font-weight:var(--_ui5-v1-24-2_input_value_state_error_warning_placeholder_font_weight)}:host([value-state="Success"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v1-24-2_input_placeholder_color)}:host([value-state="Success"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v1-24-2_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-webkit-input-placeholder{color:var(--_ui5-v1-24-2_input_placeholder_color)}:host([value-state="Information"]) [inner-input]::-moz-placeholder{color:var(--_ui5-v1-24-2_input_placeholder_color)}.ui5-input-content{height:100%;box-sizing:border-box;display:flex;flex-direction:row;justify-content:flex-end;overflow:hidden;outline:none;background:transparent;color:inherit;border-radius:var(--_ui5-v1-24-2_input_border_radius)}:host([readonly]:not([disabled])){border-color:var(--_ui5-v1-24-2_input_readonly_border_color);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v1-24-2_input_readonly_background)}:host([value-state="None"]:not([readonly]):hover),:host(:not([value-state]):not([readonly]):hover){border:var(--_ui5-v1-24-2_input_hover_border);border-color:var(--_ui5-v1-24-2_input_focused_border_color);box-shadow:var(--sapField_Hover_Shadow);background:var(--sapField_Hover_BackgroundStyle);background-color:var(--sapField_Hover_Background)}:host(:not([value-state]):not([readonly])[focused]:not([opened]):hover),:host([value-state="None"]:not([readonly])[focused]:not([opened]):hover){box-shadow:none}:host([focused]):not([opened]) .ui5-input-root:before{content:none}:host(:not([readonly]):not([disabled])[value-state]:not([value-state="None"])){border-width:var(--_ui5-v1-24-2_input_state_border_width)}:host([value-state="Error"]) [inner-input],:host([value-state="Warning"]) [inner-input]{font-style:var(--_ui5-v1-24-2_input_error_warning_font_style);text-indent:var(--_ui5-v1-24-2_input_error_warning_text_indent)}:host([value-state="Error"]) [inner-input]{font-weight:var(--_ui5-v1-24-2_input_error_font_weight)}:host([value-state="Warning"]) [inner-input]{font-weight:var(--_ui5-v1-24-2_input_warning_font_weight)}:host([value-state="Error"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v1-24-2_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Error"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v1-24-2_input_focused_value_state_error_background);border-color:var(--_ui5-v1-24-2_input_focused_value_state_error_border_color)}:host([value-state="Error"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v1-24-2_input_focused_value_state_error_focus_outline_color)}:host([value-state="Error"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v1-24-2-input-value-state-error-border-botom-color)}:host([value-state="Error"]:not([readonly]):not([focused]):hover),:host([value-state="Error"]:not([readonly])[focused][opened]:hover){background-color:var(--_ui5-v1-24-2_input_value_state_error_hover_background);box-shadow:var(--sapField_Hover_InvalidShadow)}:host([value-state="Error"]:not([readonly]):not([disabled])),:host([value-state="Warning"]:not([readonly]):not([disabled])),:host([value-state="Information"]:not([readonly]):not([disabled])){border-style:var(--_ui5-v1-24-2_input_error_warning_border_style)}:host([value-state="Warning"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v1-24-2_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Warning"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v1-24-2_input_focused_value_state_warning_background);border-color:var(--_ui5-v1-24-2_input_focused_value_state_warning_border_color)}:host([value-state="Warning"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v1-24-2_input_focused_value_state_warning_focus_outline_color)}:host([value-state="Warning"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v1-24-2_input_value_state_warning_border_botom_color)}:host([value-state="Warning"]:not([readonly]):not([focused]):hover),:host([value-state="Warning"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_WarningShadow)}:host([value-state="Success"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v1-24-2_input_value_state_success_border_color);border-width:var(--_ui5-v1-24-2_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Success"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v1-24-2_input_focused_value_state_success_background);border-color:var(--_ui5-v1-24-2_input_focused_value_state_success_border_color)}:host([value-state="Success"][focused]:not([opened]):not([readonly])) .ui5-input-focusable-element:after{border-color:var(--_ui5-v1-24-2_input_focused_value_state_success_focus_outline_color)}:host([value-state="Success"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v1-24-2_input_value_state_success_border_botom_color)}:host([value-state="Success"]:not([readonly]):not([focused]):hover),:host([value-state="Success"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v1-24-2_input_value_state_information_border_color);border-width:var(--_ui5-v1-24-2_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Information"][focused]:not([opened]):not([readonly])){background-color:var(--_ui5-v1-24-2_input_focused_value_state_information_background);border-color:var(--_ui5-v1-24-2_input_focused_value_state_information_border_color)}:host([value-state="Information"]:not([readonly])) .ui5-input-root:before{background-color:var(--_ui5-v1-24-2_input_value_success_information_border_botom_color)}:host([value-state="Information"]:not([readonly]):not([focused]):hover),:host([value-state="Information"]:not([readonly])[focused][opened]:hover){background-color:var(--sapField_Hover_Background);box-shadow:var(--sapField_Hover_InformationShadow)}.ui5-input-icon-root{min-width:var(--_ui5-v1-24-2_input_icon_min_width);height:100%;display:flex;justify-content:center;align-items:center}::slotted([ui5-icon][slot="icon"]){align-self:start;padding:var(--_ui5-v1-24-2_input_custom_icon_padding);box-sizing:content-box!important}:host([value-state="Error"]) [input-icon],:host([value-state="Warning"]) [input-icon]{padding:var(--_ui5-v1-24-2_input_error_warning_icon_padding)}:host([value-state="Error"][focused]) [input-icon],:host([value-state="Warning"][focused]) [input-icon]{padding:var(--_ui5-v1-24-2_input_error_warning_focused_icon_padding)}:host([value-state="Information"]) [input-icon]{padding:var(--_ui5-v1-24-2_input_information_icon_padding)}:host([value-state="Information"][focused]) [input-icon]{padding:var(--_ui5-v1-24-2_input_information_focused_icon_padding)}:host([value-state="Error"]) ::slotted([input-icon][ui5-icon]),:host([value-state="Error"]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Warning"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v1-24-2_input_error_warning_custom_icon_padding)}:host([value-state="Error"][focused]) ::slotted([input-icon][ui5-icon]),:host([value-state="Error"][focused]) ::slotted([ui5-icon][slot="icon"]),:host([value-state="Warning"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v1-24-2_input_error_warning_custom_focused_icon_padding)}:host([value-state="Information"]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v1-24-2_input_information_custom_icon_padding)}:host([value-state="Information"][focused]) ::slotted([ui5-icon][slot="icon"]){padding:var(--_ui5-v1-24-2_input_information_custom_focused_icon_padding)}:host([value-state="Error"]) [input-icon]:active,:host([value-state="Error"]) [input-icon][pressed]{box-shadow:var(--_ui5-v1-24-2_input_error_icon_box_shadow);color:var(--_ui5-v1-24-2_input_icon_error_pressed_color)}:host([value-state="Error"]) [input-icon]:not([pressed]):not(:active):hover{box-shadow:var(--_ui5-v1-24-2_input_error_icon_box_shadow)}:host([value-state="Warning"]) [input-icon]:active,:host([value-state="Warning"]) [input-icon][pressed]{box-shadow:var(--_ui5-v1-24-2_input_warning_icon_box_shadow);color:var(--_ui5-v1-24-2_input_icon_warning_pressed_color)}:host([value-state="Warning"]) [input-icon]:not([pressed]):not(:active):hover{box-shadow:var(--_ui5-v1-24-2_input_warning_icon_box_shadow)}:host([value-state="Information"]) [input-icon]:active,:host([value-state="Information"]) [input-icon][pressed]{box-shadow:var(--_ui5-v1-24-2_input_information_icon_box_shadow);color:var(--_ui5-v1-24-2_input_icon_information_pressed_color)}:host([value-state="Information"]) [input-icon]:not([pressed]):not(:active):hover{box-shadow:var(--_ui5-v1-24-2_input_information_icon_box_shadow)}:host([value-state="Success"]) [input-icon]:active,:host([value-state="Success"]) [input-icon][pressed]{box-shadow:var(--_ui5-v1-24-2_input_success_icon_box_shadow);color:var(--_ui5-v1-24-2_input_icon_success_pressed_color)}:host([value-state="Success"]) [input-icon]:not([pressed]):not(:active):hover{box-shadow:var(--_ui5-v1-24-2_input_success_icon_box_shadow)}.ui5-input-clear-icon-wrapper{height:var(--_ui5-v1-24-2_input_icon_wrapper_height);padding:0;width:var(--_ui5-v1-24-2_input_icon_width);min-width:var(--_ui5-v1-24-2_input_icon_width);display:flex;justify-content:center;align-items:center;box-sizing:border-box}:host([value-state]:not([value-state="None"]):not([value-state="Success"])) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v1-24-2_input_icon_wrapper_state_height);vertical-align:top}:host([value-state="Success"]) .ui5-input-clear-icon-wrapper{height:var(--_ui5-v1-24-2_input_icon_wrapper_success_state_height)}[ui5-icon].ui5-input-clear-icon{padding:0;color:inherit}[inner-input]::-webkit-outer-spin-button,[inner-input]::-webkit-inner-spin-button{-webkit-appearance:inherit;margin:inherit}
` };
var Input_css_default = styleData21;

// node_modules/@ui5/webcomponents/dist/generated/themes/ResponsivePopoverCommon.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData22 = { packageName: "@ui5/webcomponents", fileName: "themes/ResponsivePopoverCommon.css.ts", content: `.input-root-phone{flex:1;position:relative;height:var(--_ui5-v1-24-2_input_height);color:var(--sapField_TextColor);font-size:var(--sapFontSize);font-family:"72override",var(--sapFontFamily);background:var(--sapField_BackgroundStyle);background-color:var(--_ui5-v1-24-2_input_background_color);border:var(--_ui5-v1-24-2-input-border);border-radius:var(--_ui5-v1-24-2_input_border_radius);box-sizing:border-box}.input-root-phone [inner-input]{padding:0 .5rem;width:100%;height:100%}.input-root-phone [inner-input]:focus{background-color:var(--sapField_Focus_Background)}.input-root-phone:focus-within:before{content:"";position:absolute;pointer-events:none;z-index:2;border:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor);border-radius:var(--_ui5-v1-24-2_input_focus_border_radius);top:var(--_ui5-v1-24-2_input_focus_offset);bottom:var(--_ui5-v1-24-2_input_focus_offset);left:var(--_ui5-v1-24-2_input_focus_offset);right:var(--_ui5-v1-24-2_input_focus_offset)}.input-root-phone [value-state=Error] [input-icon][data-ui5-compact-size],.input-root-phone [value-state=Success] [input-icon][data-ui5-compact-size],.input-root-phone [value-state=Warning] [input-icon][data-ui5-compact-size]{padding:.1875rem .5rem}[inner-input]{background:transparent;color:inherit;border:none;font-style:normal;-webkit-appearance:none;-moz-appearance:textfield;line-height:normal;padding:var(--_ui5-v1-24-2_input_inner_padding);box-sizing:border-box;min-width:3rem;text-overflow:ellipsis;flex:1;outline:none;font-size:inherit;font-family:inherit;border-radius:var(--_ui5-v1-24-2_input_border_radius)}[inner-input]::selection,[inner-input]::-moz-selection{background:var(--sapSelectedColor);color:var(--sapContent_ContrastTextColor)}[inner-input]::-webkit-input-placeholder{font-style:italic;color:var(--sapField_PlaceholderTextColor)}[inner-input]::-moz-placeholder{font-style:italic;color:var(--sapField_PlaceholderTextColor)}.input-root-phone[value-state]:not([value-state=None]){border-width:var(--_ui5-v1-24-2_input_state_border_width)}.input-root-phone[value-state=Error] [inner-input],.input-root-phone[value-state=Warning] [inner-input]{font-style:var(--_ui5-v1-24-2_input_error_warning_font_style)}.input-root-phone[value-state=Error] [inner-input]{font-weight:var(--_ui5-v1-24-2_input_error_font_weight)}.input-root-phone[value-state=Error]:not([readonly]){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v1-24-2_input_value_state_error_border_color)}.input-root-phone[value-state=Error]:not([readonly]) [inner-input]:focus{background-color:var(--_ui5-v1-24-2_input_focused_value_state_error_background);border-color:var(--_ui5-v1-24-2_input_focused_value_state_error_border_color)}.input-root-phone[value-state=Error]:not([readonly]):focus-within:before{border-color:var(--_ui5-v1-24-2_input_focused_value_state_error_focus_outline_color)}.input-root-phone[value-state=Error]:not([readonly]):not([disabled]),.input-root-phone[value-state=Warning]:not([readonly]):not([disabled]),.input-root-phone[value-state=Information]:not([readonly]):not([disabled]){border-style:var(--_ui5-v1-24-2_input_error_warning_border_style)}.input-root-phone[value-state=Warning]:not([readonly]){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v1-24-2_input_value_state_warning_border_color)}.input-root-phone[value-state=Warning]:not([readonly]) [inner-input]:focus{background-color:var(--_ui5-v1-24-2_input_focused_value_state_warning_background);border-color:var(--_ui5-v1-24-2_input_focused_value_state_warning_border_color)}.input-root-phone[value-state=Warning]:not([readonly]):focus-within:before{border-color:var(--_ui5-v1-24-2_input_focused_value_state_warning_focus_outline_color)}.input-root-phone[value-state=Success]:not([readonly]){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v1-24-2_input_value_state_success_border_color);border-width:var(--_ui5-v1-24-2_input_value_state_success_border_width)}.input-root-phone[value-state=Success]:not([readonly]) [inner-input]:focus{background-color:var(--_ui5-v1-24-2_input_focused_value_state_success_background);border-color:var(--_ui5-v1-24-2_input_focused_value_state_success_border_color)}.input-root-phone[value-state=Success]:not([readonly]):focus-within:before{border-color:var(--_ui5-v1-24-2_input_focused_value_state_success_focus_outline_color)}.input-root-phone[value-state=Information]:not([readonly]){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v1-24-2_input_value_state_information_border_color);border-width:var(--_ui5-v1-24-2_input_information_border_width)}.input-root-phone[value-state=Information]:not([readonly]) [inner-input]:focus{background-color:var(--_ui5-v1-24-2_input_focused_value_state_information_background);border-color:var(--_ui5-v1-24-2_input_focused_value_state_information_border_color)}.ui5-multi-combobox-toggle-button{margin-left:.5rem}.ui5-responsive-popover-header{width:100%;min-height:2.5rem;display:flex;flex-direction:column}.ui5-responsive-popover-header-text{width:calc(100% - var(--_ui5-v1-24-2_button_base_min_width))}.ui5-responsive-popover-header .row{box-sizing:border-box;padding:.25rem 1rem;min-height:2.5rem;display:flex;justify-content:center;align-items:center;font-size:var(--sapFontHeader5Size)}.ui5-responsive-popover-footer{display:flex;justify-content:flex-end;padding:.25rem 0;width:100%}.ui5-responsive-popover-close-btn{position:absolute;right:1rem}
` };
var ResponsivePopoverCommon_css_default = styleData22;

// node_modules/@ui5/webcomponents/dist/generated/themes/ValueStateMessage.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData23 = { packageName: "@ui5/webcomponents", fileName: "themes/ValueStateMessage.css.ts", content: `.ui5-valuestatemessage-popover{border-radius:var(--_ui5-v1-24-2_value_state_message_popover_border_radius);box-shadow:var(--_ui5-v1-24-2_value_state_message_popover_box_shadow)}.ui5-input-value-state-message-icon{width:var(--_ui5-v1-24-2_value_state_message_icon_width);height:var(--_ui5-v1-24-2_value_state_message_icon_height);display:var(--_ui5-v1-24-2_input_value_state_icon_display);position:absolute;padding-right:.375rem}.ui5-valuestatemessage-root .ui5-input-value-state-message-icon{left:var(--_ui5-v1-24-2_input_value_state_icon_offset)}.ui5-input-value-state-message-icon[name=error]{color:var(--sapNegativeElementColor)}.ui5-input-value-state-message-icon[name=alert]{color:var(--sapCriticalElementColor)}.ui5-input-value-state-message-icon[name=success]{color:var(--sapPositiveElementColor)}.ui5-input-value-state-message-icon[name=information]{color:var(--sapInformativeElementColor)}.ui5-valuestatemessage-root{box-sizing:border-box;display:inline-block;color:var(--sapTextColor);font-size:var(--sapFontSmallSize);font-family:"72override",var(--sapFontFamily);height:auto;padding:var(--_ui5-v1-24-2_value_state_message_padding);overflow:hidden;text-overflow:ellipsis;min-width:6.25rem;border:var(--_ui5-v1-24-2_value_state_message_border);line-height:var(--_ui5-v1-24-2_value_state_message_line_height)}[ui5-responsive-popover] .ui5-valuestatemessage-header,[ui5-popover] .ui5-valuestatemessage-header{min-height:2rem}[ui5-responsive-popover] .ui5-valuestatemessage-header{padding:var(--_ui5-v1-24-2_value_state_header_padding);border:var(--_ui5-v1-24-2_value_state_header_border);border-bottom:var(--_ui5-v1-24-2_value_state_header_border_bottom);flex-grow:1;position:relative}.ui5-valuestatemessage--success{background:var(--sapSuccessBackground)}.ui5-valuestatemessage--warning{background:var(--sapWarningBackground)}.ui5-valuestatemessage--error{background:var(--sapErrorBackground)}.ui5-valuestatemessage--information{background:var(--sapInformationBackground)}.ui5-responsive-popover-header[focused],.ui5-responsive-popover-header:focus{outline-offset:var(--_ui5-v1-24-2_value_state_header_offset);outline:var(--sapContent_FocusWidth) var(--sapContent_FocusStyle) var(--sapContent_FocusColor)}.ui5-valuestatemessage-popover::part(header),.ui5-valuestatemessage-popover::part(content){padding:0}.ui5-valuestatemessage-popover::part(header),.ui5-valuestatemessage-popover::part(footer){min-height:0}.ui5-valuestatemessage-popover::part(header),.ui5-popover-with-value-state-header::part(header),.ui5-popover-with-value-state-header-phone::part(header){margin-bottom:0}.ui5-popover-with-value-state-header-phone .ui5-valuestatemessage-root{padding:var(--_ui5-v1-24-2_value_state_message_padding_phone);width:100%}.ui5-popover-with-value-state-header-phone .ui5-input-value-state-message-icon{left:var(--_ui5-v1-24-2_value_state_message_icon_offset_phone)}.ui5-popover-with-value-state-header-phone .ui5-valuestatemessage-header{position:relative;flex:none;top:0;left:0}.ui5-popover-with-value-state-header-phone::part(content){padding:0;overflow:hidden;display:flex;flex-direction:column}.ui5-popover-with-value-state-header-phone [ui5-list]{overflow:auto}[ui5-responsive-popover] .ui5-valuestatemessage--error{box-shadow:var(--_ui5-v1-24-2_value_state_header_box_shadow_error)}[ui5-responsive-popover] .ui5-valuestatemessage--information{box-shadow:var(--_ui5-v1-24-2_value_state_header_box_shadow_information)}[ui5-responsive-popover] .ui5-valuestatemessage--success{box-shadow:var(--_ui5-v1-24-2_value_state_header_box_shadow_success)}[ui5-responsive-popover] .ui5-valuestatemessage--warning{box-shadow:var(--_ui5-v1-24-2_value_state_header_box_shadow_warning)}[ui5-responsive-popover].ui5-popover-with-value-state-header .ui5-valuestatemessage-root:has(+[ui5-list]:empty){box-shadow:none}
` };
var ValueStateMessage_css_default = styleData23;

// node_modules/@ui5/webcomponents/dist/generated/themes/Suggestions.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData24 = { packageName: "@ui5/webcomponents", fileName: "themes/Suggestions.css.ts", content: `.ui5-suggestions-popover{box-shadow:var(--sapContent_Shadow1)}.ui5-suggestions-popover::part(header),.ui5-suggestions-popover::part(content){padding:0}.ui5-suggestions-popover::part(footer){padding:0 1rem}.ui5-suggestions-popover [ui5-li]::part(icon),.ui5-suggestions-popover [ui5-li-suggestion-item]::part(icon){color:var(--sapList_TextColor)}.input-root-phone.native-input-wrapper{display:contents}.input-root-phone.native-input-wrapper:before{display:none}.native-input-wrapper .ui5-input-inner-phone{margin:0}
` };
var Suggestions_css_default = styleData24;

// node_modules/@ui5/webcomponents/dist/Input.js
var __decorate19 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Input_1;
var INPUT_EVENTS;
(function(INPUT_EVENTS2) {
  INPUT_EVENTS2["CHANGE"] = "change";
  INPUT_EVENTS2["INPUT"] = "input";
  INPUT_EVENTS2["SUGGESTION_ITEM_SELECT"] = "suggestion-item-select";
})(INPUT_EVENTS || (INPUT_EVENTS = {}));
var INPUT_ACTIONS;
(function(INPUT_ACTIONS2) {
  INPUT_ACTIONS2["ACTION_ENTER"] = "enter";
  INPUT_ACTIONS2["ACTION_USER_INPUT"] = "input";
})(INPUT_ACTIONS || (INPUT_ACTIONS = {}));
var Input = Input_1 = class Input2 extends UI5Element_default {
  constructor() {
    super();
    this.hasSuggestionItemSelected = false;
    this.valueBeforeItemSelection = "";
    this.valueBeforeItemPreview = "";
    this.suggestionSelectionCancelled = false;
    this.previousValue = "";
    this.firstRendering = true;
    this.typedInValue = "";
    this.lastConfirmedValue = "";
    this.isTyping = false;
    this.suggestionObjects = [];
    this._handleResizeBound = this._handleResize.bind(this);
    this._keepInnerValue = false;
    this._focusedAfterClear = false;
  }
  onEnterDOM() {
    ResizeHandler_default.register(this, this._handleResizeBound);
    registerUI5Element(this, this._updateAssociatedLabelsTexts.bind(this));
  }
  onExitDOM() {
    ResizeHandler_default.deregister(this, this._handleResizeBound);
    deregisterUI5Element(this);
  }
  onBeforeRendering() {
    if (!this._keepInnerValue) {
      this._innerValue = this.value;
    }
    if (this.showSuggestions) {
      this.enableSuggestions();
      this.suggestionObjects = this.Suggestions.defaultSlotProperties(this.typedInValue);
    }
    this._effectiveShowClearIcon = this.showClearIcon && !!this.value && !this.readonly && !this.disabled;
    this.style.setProperty(getScopedVarName("--_ui5-input-icons-count"), `${this.iconsCount}`);
    this.FormSupport = getFeature("FormSupport");
    const hasItems = !!this.suggestionItems.length;
    const hasValue = !!this.value;
    const isFocused = this.shadowRoot.querySelector("input") === getActiveElement_default();
    if (this._isPhone) {
      this.open = this.openOnMobile;
    } else if (this._forceOpen) {
      this.open = true;
    } else {
      this.open = hasValue && hasItems && isFocused && this.isTyping;
    }
    if (this.FormSupport) {
      this.FormSupport.syncNativeHiddenInput(this);
    } else if (this.name) {
      console.warn(`In order for the "name" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`);
    }
    const value = this.value;
    const innerInput = this.getInputDOMRefSync();
    if (!innerInput || !value) {
      return;
    }
    const autoCompletedChars = innerInput.selectionEnd - innerInput.selectionStart;
    if (this._shouldAutocomplete && !isAndroid() && !autoCompletedChars && !this._isKeyNavigation) {
      const item = this._getFirstMatchingItem(value);
      if (item) {
        this._handleTypeAhead(item);
      }
    }
  }
  async onAfterRendering() {
    const innerInput = this.getInputDOMRefSync();
    if (this.Suggestions && this.showSuggestions) {
      this.Suggestions.toggle(this.open, {
        preventFocusRestore: true
      });
      this._listWidth = await this.Suggestions._getListWidth();
    }
    if (this.shouldDisplayOnlyValueStateMessage) {
      this.openPopover();
    } else {
      this.closePopover();
    }
    if (this._performTextSelection) {
      if (innerInput.value !== this._innerValue) {
        innerInput.value = this._innerValue;
      }
      if (this.typedInValue.length && this.value.length) {
        innerInput.setSelectionRange(this.typedInValue.length, this.value.length);
      }
    }
    this._performTextSelection = false;
  }
  _onkeydown(e) {
    this._isKeyNavigation = true;
    this._shouldAutocomplete = !this.noTypeahead && !(isBackSpace(e) || isDelete(e) || isEscape(e));
    if (isUp(e)) {
      return this._handleUp(e);
    }
    if (isDown(e)) {
      return this._handleDown(e);
    }
    if (isSpace(e)) {
      return this._handleSpace(e);
    }
    if (isTabNext(e)) {
      return this._handleTab();
    }
    if (isEnter(e)) {
      return this._handleEnter(e);
    }
    if (isPageUp(e)) {
      return this._handlePageUp(e);
    }
    if (isPageDown(e)) {
      return this._handlePageDown(e);
    }
    if (isHome(e)) {
      return this._handleHome(e);
    }
    if (isEnd(e)) {
      return this._handleEnd(e);
    }
    if (isEscape(e)) {
      return this._handleEscape();
    }
    if (this.showSuggestions) {
      this._clearPopoverFocusAndSelection();
    }
    this._keyDown = true;
    this._isKeyNavigation = false;
  }
  _onkeyup(e) {
    if (isDelete(e)) {
      this.value = e.target.value;
    }
    this._keyDown = false;
  }
  _handleUp(e) {
    if (this.Suggestions && this.Suggestions.isOpened()) {
      this.Suggestions.onUp(e);
    }
  }
  _handleDown(e) {
    if (this.Suggestions && this.Suggestions.isOpened()) {
      this.Suggestions.onDown(e);
    }
  }
  _handleSpace(e) {
    if (this.Suggestions) {
      this.Suggestions.onSpace(e);
    }
  }
  _handleTab() {
    if (this.Suggestions && this.previousValue !== this.value) {
      this.Suggestions.onTab();
    }
  }
  _handleEnter(e) {
    const suggestionItemPressed = !!(this.Suggestions && this.Suggestions.onEnter(e));
    const innerInput = this.getInputDOMRefSync();
    const matchingItem = this.suggestionItems.find((item) => {
      return item.text && item.text === this.value || item.textContent === this.value;
    });
    if (matchingItem) {
      const itemText = matchingItem.text ? matchingItem.text : matchingItem.textContent || "";
      innerInput.setSelectionRange(itemText.length, itemText.length);
      if (!suggestionItemPressed) {
        this.selectSuggestion(matchingItem, true);
        this.open = false;
      }
    }
    if (this._isPhone && !this.suggestionItems.length && !this.isTypeNumber) {
      innerInput.setSelectionRange(this.value.length, this.value.length);
    }
    if (!suggestionItemPressed) {
      this.lastConfirmedValue = this.value;
      if (this.FormSupport) {
        this.FormSupport.triggerFormSubmit(this);
      }
      return;
    }
    this.focused = true;
  }
  _handlePageUp(e) {
    if (this._isSuggestionsFocused) {
      this.Suggestions.onPageUp(e);
    } else {
      e.preventDefault();
    }
  }
  _handlePageDown(e) {
    if (this._isSuggestionsFocused) {
      this.Suggestions.onPageDown(e);
    } else {
      e.preventDefault();
    }
  }
  _handleHome(e) {
    if (this._isSuggestionsFocused) {
      this.Suggestions.onHome(e);
    }
  }
  _handleEnd(e) {
    if (this._isSuggestionsFocused) {
      this.Suggestions.onEnd(e);
    }
  }
  _handleEscape() {
    const hasSuggestions = this.showSuggestions && !!this.Suggestions;
    const isOpen = hasSuggestions && this.open;
    const innerInput = this.getInputDOMRefSync();
    const isAutoCompleted = innerInput.selectionEnd - innerInput.selectionStart > 0;
    this.isTyping = false;
    if (!isOpen) {
      this.value = this.lastConfirmedValue ? this.lastConfirmedValue : this.previousValue;
      return;
    }
    if (isOpen && this.Suggestions._isItemOnTarget()) {
      this.value = this.typedInValue || this.valueBeforeItemPreview;
      this.suggestionSelectionCancelled = true;
      this.focused = true;
      return;
    }
    if (isAutoCompleted) {
      this.value = this.typedInValue;
    }
    if (this._isValueStateFocused) {
      this._isValueStateFocused = false;
      this.focused = true;
    }
  }
  async _onfocusin(e) {
    await this.getInputDOMRef();
    this.focused = true;
    if (!this._focusedAfterClear) {
      this.previousValue = this.value;
    }
    this.valueBeforeItemPreview = this.value;
    this._inputIconFocused = !!e.target && e.target === this.querySelector("[ui5-icon]");
    this._focusedAfterClear = false;
  }
  /**
   * Called on "focusin" of the native input HTML Element.
   * **Note:** implemented in MultiInput, but used in the Input template.
   */
  innerFocusIn() {
  }
  _onfocusout(e) {
    const toBeFocused = e.relatedTarget;
    const focusedOutToSuggestions = this.Suggestions && toBeFocused && toBeFocused.shadowRoot && toBeFocused.shadowRoot.contains(this.Suggestions.responsivePopover);
    const focusedOutToValueStateMessage = toBeFocused && toBeFocused.shadowRoot && toBeFocused.shadowRoot.querySelector(".ui5-valuestatemessage-root");
    this._keepInnerValue = false;
    if (this.showClearIcon && !this._effectiveShowClearIcon) {
      this._clearIconClicked = false;
      this._handleChange();
    }
    if (focusedOutToSuggestions || focusedOutToValueStateMessage) {
      e.stopImmediatePropagation();
      return;
    }
    if (toBeFocused && toBeFocused.classList.contains(this._id)) {
      return;
    }
    this.open = false;
    this._clearPopoverFocusAndSelection();
    if (!this._clearIconClicked) {
      this.previousValue = "";
    }
    this.lastConfirmedValue = "";
    this.focused = false;
    this.isTyping = false;
    this._forceOpen = false;
  }
  _clearPopoverFocusAndSelection() {
    if (!this.showSuggestions || !this.Suggestions) {
      return;
    }
    this._isValueStateFocused = false;
    this.hasSuggestionItemSelected = false;
    this.Suggestions._deselectItems();
    this.Suggestions._clearItemFocus();
  }
  _click() {
    if (isPhone() && !this.readonly && this.Suggestions) {
      this.blur();
      this.openOnMobile = true;
    }
  }
  _handleChange() {
    if (this._clearIconClicked) {
      this._clearIconClicked = false;
      return;
    }
    if (this.previousValue !== this.getInputDOMRefSync().value) {
      this.fireEvent(INPUT_EVENTS.CHANGE);
      this.previousValue = this.value;
      this.typedInValue = this.value;
    }
  }
  _clear() {
    this.value = "";
    this.fireEvent(INPUT_EVENTS.INPUT);
    if (!this._isPhone) {
      this.focus();
      this._focusedAfterClear = true;
    }
  }
  _iconMouseDown() {
    this._clearIconClicked = true;
  }
  _scroll(e) {
    this.fireEvent("suggestion-scroll", {
      scrollTop: e.detail.scrollTop,
      scrollContainer: e.detail.targetRef
    });
  }
  _handleInput(e) {
    const inputDomRef = this.getInputDOMRefSync();
    const emptyValueFiredOnNumberInput = this.value && this.isTypeNumber && !inputDomRef.value;
    const eventType = e.inputType || e.detail.inputType || "";
    this._keepInnerValue = false;
    const allowedEventTypes = [
      "deleteWordBackward",
      "deleteWordForward",
      "deleteSoftLineBackward",
      "deleteSoftLineForward",
      "deleteEntireSoftLine",
      "deleteHardLineBackward",
      "deleteHardLineForward",
      "deleteByDrag",
      "deleteByCut",
      "deleteContent",
      "deleteContentBackward",
      "deleteContentForward",
      "historyUndo"
    ];
    this._shouldAutocomplete = !allowedEventTypes.includes(eventType) && !this.noTypeahead;
    this.suggestionSelectionCancelled = false;
    if (e instanceof InputEvent) {
      const delimiterCase = this.isTypeNumber && (e.inputType === "deleteContentForward" || e.inputType === "deleteContentBackward") && !e.target.value.includes(".") && this.value.includes(".");
      const eNotationCase = emptyValueFiredOnNumberInput && e.data === "e";
      const minusRemovalCase = emptyValueFiredOnNumberInput && this.value.startsWith("-") && this.value.length === 2 && (e.inputType === "deleteContentForward" || e.inputType === "deleteContentBackward");
      if (delimiterCase || eNotationCase || minusRemovalCase) {
        this.value = e.target.value;
        this._keepInnerValue = true;
      }
    }
    if (e.target === inputDomRef) {
      this.focused = true;
      e.stopImmediatePropagation();
    }
    this.fireEventByAction(INPUT_ACTIONS.ACTION_ENTER, e);
    this.hasSuggestionItemSelected = false;
    this._isValueStateFocused = false;
    if (this.Suggestions) {
      this.Suggestions.updateSelectedItemPosition(-1);
    }
    this.isTyping = true;
  }
  _startsWithMatchingItems(str) {
    const textProp = this.suggestionItems[0].text ? "text" : "textContent";
    return StartsWith(str, this.suggestionItems, textProp);
  }
  _getFirstMatchingItem(current) {
    if (!this.suggestionItems.length) {
      return;
    }
    const matchingItems = this._startsWithMatchingItems(current).filter((item) => !item.groupItem);
    if (matchingItems.length) {
      return matchingItems[0];
    }
  }
  _handleTypeAhead(item) {
    const value = item.text ? item.text : item.textContent || "";
    this._innerValue = value;
    this.value = value;
    this._performTextSelection = true;
    this._shouldAutocomplete = false;
  }
  _handleResize() {
    this._inputWidth = this.offsetWidth;
  }
  _updateAssociatedLabelsTexts() {
    this._associatedLabelsTexts = getAssociatedLabelForTexts(this);
    this._accessibleLabelsRefTexts = getAllAccessibleNameRefTexts(this);
  }
  _closeRespPopover() {
    this.Suggestions.close(true);
  }
  async _afterOpenPopover() {
    if (isPhone()) {
      (await this.getInputDOMRef()).focus();
    }
  }
  _afterClosePopover() {
    this.announceSelectedItem();
    if (isPhone()) {
      this.blur();
      this.focused = false;
    }
    this.openOnMobile = false;
    this.open = false;
    this._forceOpen = false;
    if (this.hasSuggestionItemSelected) {
      this.focus();
    }
  }
  /**
   * Checks if the value state popover is open.
   */
  isValueStateOpened() {
    return !!this._isPopoverOpen;
  }
  async openPopover() {
    const popover = await this._getPopover();
    if (popover) {
      this._isPopoverOpen = true;
      popover.showAt(this);
    }
  }
  async closePopover() {
    const popover = await this._getPopover();
    popover && popover.close();
  }
  async _getPopover() {
    const staticAreaItem = await this.getStaticAreaItemDomRef();
    return staticAreaItem.querySelector("[ui5-popover]");
  }
  /**
   * Manually opens the suggestions popover, assuming suggestions are enabled. Items must be preloaded for it to open.
   * @public
   * @since 1.3.0
   */
  openPicker() {
    if (!this.suggestionItems.length || this.disabled || this.readonly) {
      return;
    }
    this._forceOpen = true;
  }
  enableSuggestions() {
    if (this.Suggestions) {
      return;
    }
    const Suggestions = getFeature("InputSuggestions");
    if (Suggestions) {
      this.Suggestions = new Suggestions(this, "suggestionItems", true, false);
    } else {
      throw new Error(`You have to import "@ui5/webcomponents/dist/features/InputSuggestions.js" module to use ui5-input suggestions`);
    }
  }
  selectSuggestion(item, keyboardUsed) {
    var _a3;
    if (item.groupItem) {
      return;
    }
    const value = this.typedInValue || this.value;
    const itemText = item.text || item.textContent || "";
    const fireInput = keyboardUsed ? this.valueBeforeItemSelection !== itemText : value !== itemText;
    this.hasSuggestionItemSelected = true;
    const valueOriginal = this.value;
    const valueBeforeItemSelectionOriginal = this.valueBeforeItemSelection;
    const lastConfirmedValueOriginal = this.lastConfirmedValue;
    const performTextSelectionOriginal = this._performTextSelection;
    const typedInValueOriginal = this.typedInValue;
    const previousValueOriginal = this.previousValue;
    if (fireInput) {
      this.value = itemText;
      this.valueBeforeItemSelection = itemText;
      this.lastConfirmedValue = itemText;
      this._performTextSelection = true;
      this.fireEvent(INPUT_EVENTS.CHANGE);
      if (isPhone()) {
        this.fireEvent(INPUT_EVENTS.INPUT);
      }
      this.typedInValue = this.value;
      this.previousValue = this.value;
    }
    this.valueBeforeItemPreview = "";
    this.suggestionSelectionCancelled = false;
    const isCancelledByUser = !this.fireEvent(INPUT_EVENTS.SUGGESTION_ITEM_SELECT, { item }, true);
    if (isCancelledByUser) {
      (_a3 = this.Suggestions) == null ? void 0 : _a3._clearSelectedSuggestionAndAccInfo();
      this.hasSuggestionItemSelected = false;
      this.suggestionSelectionCancelled = true;
      if (fireInput) {
        if (itemText === this.value) {
          this.value = valueOriginal;
        }
        this.valueBeforeItemSelection = valueBeforeItemSelectionOriginal;
        this.lastConfirmedValue = lastConfirmedValueOriginal;
        this._performTextSelection = performTextSelectionOriginal;
        this.typedInValue = typedInValueOriginal;
        this.previousValue = previousValueOriginal;
      }
    }
    this.isTyping = false;
    this.openOnMobile = false;
    this._forceOpen = false;
  }
  previewSuggestion(item) {
    this.valueBeforeItemSelection = this.value;
    this.updateValueOnPreview(item);
    this.announceSelectedItem();
    this._previewItem = item;
  }
  /**
   * Updates the input value on item preview.
   * @param item The item that is on preview
   */
  updateValueOnPreview(item) {
    const noPreview = item.type === "Inactive" || item.groupItem;
    const itemValue = noPreview ? this.valueBeforeItemPreview : item.effectiveTitle || item.textContent || "";
    this.value = itemValue;
    this._performTextSelection = true;
  }
  /**
   * The suggestion item on preview.
   * @default null
   * @public
   */
  get previewItem() {
    if (!this._previewItem) {
      return null;
    }
    return this.getSuggestionByListItem(this._previewItem);
  }
  async fireEventByAction(action, e) {
    if (this.disabled || this.readonly) {
      return;
    }
    const inputValue = await this.getInputValue();
    const isUserInput = action === INPUT_ACTIONS.ACTION_ENTER;
    this.value = inputValue;
    this.typedInValue = inputValue;
    this.valueBeforeItemPreview = inputValue;
    if (isUserInput) {
      this.fireEvent(INPUT_EVENTS.INPUT, { inputType: e.inputType });
      this.fireEvent("value-changed");
    }
  }
  async getInputValue() {
    const domRef = this.getDomRef();
    if (domRef) {
      return (await this.getInputDOMRef()).value;
    }
    return "";
  }
  async getInputDOMRef() {
    if (isPhone() && this.Suggestions) {
      await this.Suggestions._getSuggestionPopover();
      return this.Suggestions.responsivePopover.querySelector(".ui5-input-inner-phone");
    }
    return this.nativeInput;
  }
  getInputDOMRefSync() {
    if (isPhone() && this.Suggestions && this.Suggestions.responsivePopover) {
      return this.Suggestions.responsivePopover.querySelector(".ui5-input-inner-phone").shadowRoot.querySelector("input");
    }
    return this.nativeInput;
  }
  /**
   * Returns a reference to the native input element
   * @protected
   */
  get nativeInput() {
    const domRef = this.getDomRef();
    return domRef ? domRef.querySelector(`input`) : null;
  }
  get nativeInputWidth() {
    return this.nativeInput ? this.nativeInput.offsetWidth : 0;
  }
  getLabelableElementId() {
    return this.getInputId();
  }
  getSuggestionByListItem(item) {
    const key = parseInt(item.getAttribute("data-ui5-key"));
    return this.suggestionItems[key];
  }
  /**
   * Returns if the suggestions popover is scrollable.
   * The method returns `Promise` that resolves to true,
   * if the popup is scrollable and false otherwise.
   */
  isSuggestionsScrollable() {
    if (!this.Suggestions) {
      return Promise.resolve(false);
    }
    return this.Suggestions._isScrollable();
  }
  getInputId() {
    return `${this._id}-inner`;
  }
  /* Suggestions interface  */
  onItemMouseOver(e) {
    const item = e.target;
    const suggestion = this.getSuggestionByListItem(item);
    suggestion && suggestion.fireEvent("mouseover", {
      item: suggestion,
      targetRef: item
    });
  }
  onItemMouseOut(e) {
    const item = e.target;
    const suggestion = this.getSuggestionByListItem(item);
    suggestion && suggestion.fireEvent("mouseout", {
      item: suggestion,
      targetRef: item
    });
  }
  onItemMouseDown(e) {
    e.preventDefault();
  }
  onItemSelected(item, keyboardUsed) {
    this.selectSuggestion(item, keyboardUsed);
  }
  onItemPreviewed(item) {
    this.previewSuggestion(item);
    this.fireEvent("suggestion-item-preview", {
      item: this.getSuggestionByListItem(item),
      targetRef: item
    });
  }
  get valueStateTypeMappings() {
    return {
      "Success": Input_1.i18nBundle.getText(VALUE_STATE_TYPE_SUCCESS),
      "Information": Input_1.i18nBundle.getText(VALUE_STATE_TYPE_INFORMATION),
      "Error": Input_1.i18nBundle.getText(VALUE_STATE_TYPE_ERROR),
      "Warning": Input_1.i18nBundle.getText(VALUE_STATE_TYPE_WARNING)
    };
  }
  valueStateTextMappings() {
    return {
      "Success": Input_1.i18nBundle.getText(VALUE_STATE_SUCCESS),
      "Information": Input_1.i18nBundle.getText(VALUE_STATE_INFORMATION),
      "Error": Input_1.i18nBundle.getText(VALUE_STATE_ERROR),
      "Warning": Input_1.i18nBundle.getText(VALUE_STATE_WARNING)
    };
  }
  announceSelectedItem() {
    const invisibleText = this.shadowRoot.querySelector(`[id="${this._id}-selectionText"]`);
    invisibleText.textContent = this.itemSelectionAnnounce;
  }
  get _readonly() {
    return this.readonly && !this.disabled;
  }
  get _headerTitleText() {
    return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
  }
  get clearIconAccessibleName() {
    return Input_1.i18nBundle.getText(INPUT_CLEAR_ICON_ACC_NAME);
  }
  get inputType() {
    return this.type.toLowerCase();
  }
  get isTypeNumber() {
    return this.type === InputType_default.Number;
  }
  get suggestionsTextId() {
    return this.showSuggestions ? `${this._id}-suggestionsText` : "";
  }
  get valueStateTextId() {
    return this.hasValueState ? `${this._id}-valueStateDesc` : "";
  }
  get accInfo() {
    const ariaHasPopupDefault = this.showSuggestions ? "true" : void 0;
    const ariaAutoCompleteDefault = this.showSuggestions ? "list" : void 0;
    const ariaDescribedBy = this._inputAccInfo.ariaDescribedBy ? `${this.suggestionsTextId} ${this.valueStateTextId} ${this._inputAccInfo.ariaDescribedBy}`.trim() : `${this.suggestionsTextId} ${this.valueStateTextId}`.trim();
    const info = {
      "input": {
        "ariaRoledescription": this._inputAccInfo && (this._inputAccInfo.ariaRoledescription || void 0),
        "ariaDescribedBy": ariaDescribedBy || void 0,
        "ariaInvalid": this.valueState === ValueState_default.Error ? "true" : void 0,
        "ariaHasPopup": this._inputAccInfo.ariaHasPopup ? this._inputAccInfo.ariaHasPopup : ariaHasPopupDefault,
        "ariaAutoComplete": this._inputAccInfo.ariaAutoComplete ? this._inputAccInfo.ariaAutoComplete : ariaAutoCompleteDefault,
        "role": this._inputAccInfo && this._inputAccInfo.role,
        "ariaControls": this._inputAccInfo && this._inputAccInfo.ariaControls,
        "ariaExpanded": this._inputAccInfo && this._inputAccInfo.ariaExpanded,
        "ariaDescription": this._inputAccInfo && this._inputAccInfo.ariaDescription,
        "ariaLabel": this._inputAccInfo && this._inputAccInfo.ariaLabel || this._accessibleLabelsRefTexts || this.accessibleName || this._associatedLabelsTexts || void 0
      }
    };
    return info;
  }
  get nativeInputAttributes() {
    return {
      "min": this.isTypeNumber ? this._nativeInputAttributes.min : void 0,
      "max": this.isTypeNumber ? this._nativeInputAttributes.max : void 0,
      "step": this.isTypeNumber ? this._nativeInputAttributes.step || "any" : void 0
    };
  }
  get ariaValueStateHiddenText() {
    if (!this.hasValueState) {
      return;
    }
    const valueState = this.valueState !== ValueState_default.None ? this.valueStateTypeMappings[this.valueState] : "";
    if (this.shouldDisplayDefaultValueStateMessage) {
      return this.valueStateText ? `${valueState} ${this.valueStateText}` : valueState;
    }
    return `${valueState}`.concat(" ", this.valueStateMessageText.map((el) => el.textContent).join(" "));
  }
  get itemSelectionAnnounce() {
    return this.Suggestions ? this.Suggestions.itemSelectionAnnounce : "";
  }
  get iconsCount() {
    const slottedIconsCount = this.icon ? this.icon.length : 0;
    const clearIconCount = Number(this._effectiveShowClearIcon) ?? 0;
    return slottedIconsCount + clearIconCount;
  }
  get classes() {
    return {
      popover: {
        "ui5-suggestions-popover": this.showSuggestions,
        "ui5-popover-with-value-state-header-phone": this._isPhone && this.showSuggestions && this.hasValueStateMessage,
        "ui5-popover-with-value-state-header": !this._isPhone && this.showSuggestions && this.hasValueStateMessage
      },
      popoverValueState: {
        "ui5-valuestatemessage-root": true,
        "ui5-valuestatemessage-header": true,
        "ui5-valuestatemessage--success": this.valueState === ValueState_default.Success,
        "ui5-valuestatemessage--error": this.valueState === ValueState_default.Error,
        "ui5-valuestatemessage--warning": this.valueState === ValueState_default.Warning,
        "ui5-valuestatemessage--information": this.valueState === ValueState_default.Information
      }
    };
  }
  get styles() {
    const remSizeIxPx = parseInt(getComputedStyle(document.documentElement).fontSize);
    const stylesObject = {
      popoverHeader: {
        "max-width": this._inputWidth ? `${this._inputWidth}px` : ""
      },
      suggestionPopoverHeader: {
        "display": this._listWidth === 0 ? "none" : "inline-block",
        "width": this._listWidth ? `${this._listWidth}px` : ""
      },
      suggestionsPopover: {
        "min-width": this._inputWidth ? `${this._inputWidth}px` : "",
        "max-width": this._inputWidth && this._inputWidth / remSizeIxPx > 40 ? `${this._inputWidth}px` : "40rem"
      },
      innerInput: {
        "padding": ""
      }
    };
    return stylesObject;
  }
  get suggestionSeparators() {
    return "None";
  }
  get valueStateMessageText() {
    return this.getSlottedNodes("valueStateMessage").map((el) => el.cloneNode(true));
  }
  get shouldDisplayOnlyValueStateMessage() {
    return this.hasValueStateMessage && !this.readonly && !this.open && this.focused;
  }
  get shouldDisplayDefaultValueStateMessage() {
    return !this.valueStateMessage.length && this.hasValueStateMessage;
  }
  get hasValueState() {
    return this.valueState !== ValueState_default.None;
  }
  get hasValueStateMessage() {
    return this.hasValueState && this.valueState !== ValueState_default.Success && (!this._inputIconFocused || !!(this._isPhone && this.Suggestions));
  }
  get valueStateText() {
    return this.valueState !== ValueState_default.None ? this.valueStateTextMappings()[this.valueState] : void 0;
  }
  get suggestionsText() {
    return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS);
  }
  get availableSuggestionsCount() {
    if (this.showSuggestions && (this.value || this.Suggestions.isOpened())) {
      const nonGroupItems = this.suggestionObjects.filter((item) => !item.groupItem);
      switch (nonGroupItems.length) {
        case 0:
          return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS_NO_HIT);
        case 1:
          return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS_ONE_HIT);
        default:
          return Input_1.i18nBundle.getText(INPUT_SUGGESTIONS_MORE_HITS, nonGroupItems.length);
      }
    }
    return void 0;
  }
  get step() {
    return this.isTypeNumber ? "any" : void 0;
  }
  get _isPhone() {
    return isPhone();
  }
  get _isSuggestionsFocused() {
    return !this.focused && this.Suggestions && this.Suggestions.isOpened();
  }
  /**
   * Returns the placeholder value.
   * @protected
   */
  get _placeholder() {
    return this.placeholder;
  }
  /**
   * This method is relevant for sap_horizon theme only
   */
  get _valueStateInputIcon() {
    const iconPerValueState = {
      Error: `<path xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd" d="M10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0C15.5228 0 20 4.47715 20 10C20 15.5228 15.5228 20 10 20ZM7.70711 13.7071C7.31658 14.0976 6.68342 14.0976 6.29289 13.7071C5.90237 13.3166 5.90237 12.6834 6.29289 12.2929L8.58579 10L6.29289 7.70711C5.90237 7.31658 5.90237 6.68342 6.29289 6.29289C6.68342 5.90237 7.31658 5.90237 7.70711 6.29289L10 8.58579L12.2929 6.29289C12.6834 5.90237 13.3166 5.90237 13.7071 6.29289C14.0976 6.68342 14.0976 7.31658 13.7071 7.70711L11.4142 10L13.7071 12.2929C14.0976 12.6834 14.0976 13.3166 13.7071 13.7071C13.3166 14.0976 12.6834 14.0976 12.2929 13.7071L10 11.4142L7.70711 13.7071Z" fill="#EE3939"/>`,
      Warning: `<path xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd" d="M11.8619 0.49298C11.6823 0.187541 11.3544 0 11 0C10.6456 0 10.3177 0.187541 10.1381 0.49298L0.138066 17.493C-0.0438112 17.8022 -0.0461447 18.1851 0.13195 18.4965C0.310046 18.8079 0.641283 19 1 19H21C21.3587 19 21.69 18.8079 21.868 18.4965C22.0461 18.1851 22.0438 17.8022 21.8619 17.493L11.8619 0.49298ZM11 6C11.5523 6 12 6.44772 12 7V10C12 10.5523 11.5523 11 11 11C10.4477 11 10 10.5523 10 10V7C10 6.44772 10.4477 6 11 6ZM11 16C11.8284 16 12.5 15.3284 12.5 14.5C12.5 13.6716 11.8284 13 11 13C10.1716 13 9.5 13.6716 9.5 14.5C9.5 15.3284 10.1716 16 11 16Z" fill="#F58B00"/>`,
      Success: `<path xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd" d="M0 10C0 15.5228 4.47715 20 10 20C15.5228 20 20 15.5228 20 10C20 4.47715 15.5228 0 10 0C4.47715 0 0 4.47715 0 10ZM14.7071 6.29289C14.3166 5.90237 13.6834 5.90237 13.2929 6.29289L8 11.5858L6.70711 10.2929C6.31658 9.90237 5.68342 9.90237 5.29289 10.2929C4.90237 10.6834 4.90237 11.3166 5.29289 11.7071L7.29289 13.7071C7.68342 14.0976 8.31658 14.0976 8.70711 13.7071L14.7071 7.70711C15.0976 7.31658 15.0976 6.68342 14.7071 6.29289Z" fill="#36A41D"/>`,
      Information: `<path xmlns="http://www.w3.org/2000/svg" fill-rule="evenodd" clip-rule="evenodd" d="M3 0C1.34315 0 0 1.34315 0 3V15C0 16.6569 1.34315 18 3 18H15C16.6569 18 18 16.6569 18 15V3C18 1.34315 16.6569 0 15 0H3ZM9 6.5C9.82843 6.5 10.5 5.82843 10.5 5C10.5 4.17157 9.82843 3.5 9 3.5C8.17157 3.5 7.5 4.17157 7.5 5C7.5 5.82843 8.17157 6.5 9 6.5ZM9 8.5C9.55228 8.5 10 8.94772 10 9.5V13.5C10 14.0523 9.55228 14.5 9 14.5C8.44771 14.5 8 14.0523 8 13.5V9.5C8 8.94772 8.44771 8.5 9 8.5Z" fill="#1B90FF"/>`
    };
    if (this.valueState !== ValueState_default.None) {
      return `
			<svg xmlns="http://www.w3.org/2000/svg" width="24" height="20" viewBox="0 0 20 20" fill="none">
				${iconPerValueState[this.valueState]};
			</svg>
			`;
    }
    return "";
  }
  get _valueStatePopoverHorizontalAlign() {
    return this.effectiveDir !== "rtl" ? "Left" : "Right";
  }
  /**
   * This method is relevant for sap_horizon theme only
   */
  get _valueStateMessageInputIcon() {
    const iconPerValueState = {
      Error: "error",
      Warning: "alert",
      Success: "sys-enter-2",
      Information: "information"
    };
    return this.valueState !== ValueState_default.None ? iconPerValueState[this.valueState] : "";
  }
  /**
   * Returns the caret position inside the native input
   * @protected
   */
  getCaretPosition() {
    return getCaretPosition(this.nativeInput);
  }
  /**
   * Sets the caret to a certain position inside the native input
   * @protected
   */
  setCaretPosition(pos) {
    setCaretPosition(this.nativeInput, pos);
  }
  /**
   * Removes the fractional part of floating-point number.
   * @param value the numeric value of Input of type "Number"
   */
  removeFractionalPart(value) {
    if (value.includes(".")) {
      return value.slice(0, value.indexOf("."));
    }
    if (value.includes(",")) {
      return value.slice(0, value.indexOf(","));
    }
    return value;
  }
  static async onDefine() {
    const Suggestions = getFeature("InputSuggestions");
    [Input_1.i18nBundle] = await Promise.all([
      getI18nBundle("@ui5/webcomponents"),
      Suggestions ? Suggestions.init() : Promise.resolve()
    ]);
  }
};
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "disabled", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "highlight", void 0);
__decorate19([
  property_default()
], Input.prototype, "placeholder", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "readonly", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "required", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "noTypeahead", void 0);
__decorate19([
  property_default({ type: InputType_default, defaultValue: InputType_default.Text })
], Input.prototype, "type", void 0);
__decorate19([
  property_default()
], Input.prototype, "value", void 0);
__decorate19([
  property_default({ noAttribute: true })
], Input.prototype, "_innerValue", void 0);
__decorate19([
  property_default({ type: ValueState_default, defaultValue: ValueState_default.None })
], Input.prototype, "valueState", void 0);
__decorate19([
  property_default()
], Input.prototype, "name", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "showSuggestions", void 0);
__decorate19([
  property_default({ validator: Integer_default })
], Input.prototype, "maxlength", void 0);
__decorate19([
  property_default()
], Input.prototype, "accessibleName", void 0);
__decorate19([
  property_default({ defaultValue: "" })
], Input.prototype, "accessibleNameRef", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "showClearIcon", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "_effectiveShowClearIcon", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "focused", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "openOnMobile", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "open", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "_forceOpen", void 0);
__decorate19([
  property_default({ type: Boolean })
], Input.prototype, "_isValueStateFocused", void 0);
__decorate19([
  property_default({ type: Object, noAttribute: true })
], Input.prototype, "_inputAccInfo", void 0);
__decorate19([
  property_default({ type: Object, noAttribute: true })
], Input.prototype, "_nativeInputAttributes", void 0);
__decorate19([
  property_default({ validator: Integer_default })
], Input.prototype, "_inputWidth", void 0);
__decorate19([
  property_default({ validator: Integer_default })
], Input.prototype, "_listWidth", void 0);
__decorate19([
  property_default({ type: Boolean, noAttribute: true })
], Input.prototype, "_isPopoverOpen", void 0);
__decorate19([
  property_default({ type: Boolean, noAttribute: true })
], Input.prototype, "_inputIconFocused", void 0);
__decorate19([
  property_default({ type: String, noAttribute: true, defaultValue: void 0 })
], Input.prototype, "_associatedLabelsTexts", void 0);
__decorate19([
  property_default({ type: String, noAttribute: true, defaultValue: void 0 })
], Input.prototype, "_accessibleLabelsRefTexts", void 0);
__decorate19([
  slot_default({ type: HTMLElement, "default": true })
], Input.prototype, "suggestionItems", void 0);
__decorate19([
  slot_default()
], Input.prototype, "icon", void 0);
__decorate19([
  slot_default()
], Input.prototype, "formSupport", void 0);
__decorate19([
  slot_default({
    type: HTMLElement,
    invalidateOnChildChange: true,
    cloned: true
  })
], Input.prototype, "valueStateMessage", void 0);
Input = Input_1 = __decorate19([
  customElement_default({
    tag: "ui5-input",
    languageAware: true,
    renderer: LitRenderer_default,
    template: InputTemplate_lit_default,
    staticAreaTemplate: InputPopoverTemplate_lit_default,
    styles: Input_css_default,
    staticAreaStyles: [ResponsivePopoverCommon_css_default, ValueStateMessage_css_default, Suggestions_css_default],
    get dependencies() {
      const Suggestions = getFeature("InputSuggestions");
      return [Popover_default, Icon_default].concat(Suggestions ? Suggestions.dependencies : []);
    }
  }),
  event_default("change"),
  event_default("input"),
  event_default("suggestion-item-select", {
    detail: {
      /**
      * @public
      */
      item: { type: HTMLElement }
    }
  }),
  event_default("suggestion-item-preview", {
    detail: {
      /**
      * @public
      */
      item: { type: HTMLElement },
      /**
      * @public
      */
      targetRef: { type: HTMLElement }
    }
  }),
  event_default("suggestion-scroll", {
    detail: {
      /**
      * @public
      */
      scrollTop: { type: Integer_default },
      /**
      * @public
      */
      scrollContainer: { type: HTMLElement }
    }
  })
], Input);
Input.define();
var Input_default = Input;

// node_modules/@ui5/webcomponents/dist/generated/templates/DatePickerTemplate.lit.js
function block018(context, tags, suffix) {
  return suffix ? effectiveHtml`<div class="ui5-date-picker-root" style="${styleMap(this.styles.main)}"><${scopeTag("ui5-input", tags, suffix)} id="${ifDefined(this._id)}-inner" class="ui5-date-picker-input" placeholder="${ifDefined(this._placeholder)}" type="${ifDefined(this.type)}" value="${ifDefined(this.value)}" ?disabled="${this.disabled}" ?required="${this.required}" ?readonly="${this.readonly}" value-state="${ifDefined(this.valueState)}" data-sap-focus-ref ._inputAccInfo ="${ifDefined(this.accInfo)}" @ui5-change="${ifDefined(this._onInputChange)}" @ui5-input="${ifDefined(this._onInputInput)}" @ui5-submit="${ifDefined(this._onInputSubmit)}" @keydown="${this._onkeydown}">${this.valueStateMessage.length ? block116.call(this, context, tags, suffix) : void 0}${!this.readonly ? block214.call(this, context, tags, suffix) : void 0}</${scopeTag("ui5-input", tags, suffix)}><slot name="formSupport"></slot></div>` : effectiveHtml`<div class="ui5-date-picker-root" style="${styleMap(this.styles.main)}"><ui5-input id="${ifDefined(this._id)}-inner" class="ui5-date-picker-input" placeholder="${ifDefined(this._placeholder)}" type="${ifDefined(this.type)}" value="${ifDefined(this.value)}" ?disabled="${this.disabled}" ?required="${this.required}" ?readonly="${this.readonly}" value-state="${ifDefined(this.valueState)}" data-sap-focus-ref ._inputAccInfo ="${ifDefined(this.accInfo)}" @ui5-change="${ifDefined(this._onInputChange)}" @ui5-input="${ifDefined(this._onInputInput)}" @ui5-submit="${ifDefined(this._onInputSubmit)}" @keydown="${this._onkeydown}">${this.valueStateMessage.length ? block116.call(this, context, tags, suffix) : void 0}${!this.readonly ? block214.call(this, context, tags, suffix) : void 0}</ui5-input><slot name="formSupport"></slot></div>`;
}
function block116(context, tags, suffix) {
  return effectiveHtml`<slot name="valueStateMessage" slot="valueStateMessage"></slot>`;
}
function block214(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-icon", tags, suffix)} slot="icon" name="${ifDefined(this.openIconName)}" tabindex="-1" accessible-name="${ifDefined(this.openIconTitle)}" accessible-role="button" aria-hidden="${ifDefined(this._ariaHidden)}" show-tooltip @click="${this.togglePicker}" input-icon ?pressed="${this._isPickerOpen}"></${scopeTag("ui5-icon", tags, suffix)}>` : effectiveHtml`<ui5-icon slot="icon" name="${ifDefined(this.openIconName)}" tabindex="-1" accessible-name="${ifDefined(this.openIconTitle)}" accessible-role="button" aria-hidden="${ifDefined(this._ariaHidden)}" show-tooltip @click="${this.togglePicker}" input-icon ?pressed="${this._isPickerOpen}"></ui5-icon>`;
}
var DatePickerTemplate_lit_default = block018;

// node_modules/@ui5/webcomponents/dist/generated/templates/DatePickerPopoverTemplate.lit.js
function block019(context, tags, suffix) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-responsive-popover", tags, suffix)} id="${ifDefined(this._id)}-responsive-popover" allow-target-overlap placement-type="Bottom" horizontal-align="Left" hide-arrow ?_hide-header=${ifDefined(this._shouldHideHeader)} @keydown="${this._onkeydown}" @ui5-after-close="${ifDefined(this.onResponsivePopoverAfterClose)}">${this.showHeader ? block117.call(this, context, tags, suffix) : void 0}<${scopeTag("ui5-calendar", tags, suffix)} id="${ifDefined(this._id)}-calendar" primary-calendar-type="${ifDefined(this._primaryCalendarType)}" secondary-calendar-type="${ifDefined(this.secondaryCalendarType)}" format-pattern="${ifDefined(this._formatPattern)}" timestamp="${ifDefined(this._calendarTimestamp)}" .selectionMode="${ifDefined(this._calendarSelectionMode)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" @ui5-selected-dates-change="${ifDefined(this.onSelectedDatesChange)}" @ui5-show-month-press="${ifDefined(this.onHeaderShowMonthPress)}" @ui5-show-year-press="${ifDefined(this.onHeaderShowYearPress)}" ?hide-week-numbers="${this.hideWeekNumbers}" ._currentPicker="${ifDefined(this._calendarCurrentPicker)}" ._pickersMode="${ifDefined(this._calendarPickersMode)}">${repeat(this._calendarSelectedDates, (item, index) => item._id || index, (item, index) => block215.call(this, context, tags, suffix, item, index))}</${scopeTag("ui5-calendar", tags, suffix)}>${this.showFooter ? block312.call(this, context, tags, suffix) : void 0}</${scopeTag("ui5-responsive-popover", tags, suffix)}> ` : effectiveHtml`<ui5-responsive-popover id="${ifDefined(this._id)}-responsive-popover" allow-target-overlap placement-type="Bottom" horizontal-align="Left" hide-arrow ?_hide-header=${ifDefined(this._shouldHideHeader)} @keydown="${this._onkeydown}" @ui5-after-close="${ifDefined(this.onResponsivePopoverAfterClose)}">${this.showHeader ? block117.call(this, context, tags, suffix) : void 0}<ui5-calendar id="${ifDefined(this._id)}-calendar" primary-calendar-type="${ifDefined(this._primaryCalendarType)}" secondary-calendar-type="${ifDefined(this.secondaryCalendarType)}" format-pattern="${ifDefined(this._formatPattern)}" timestamp="${ifDefined(this._calendarTimestamp)}" .selectionMode="${ifDefined(this._calendarSelectionMode)}" .minDate="${ifDefined(this.minDate)}" .maxDate="${ifDefined(this.maxDate)}" @ui5-selected-dates-change="${ifDefined(this.onSelectedDatesChange)}" @ui5-show-month-press="${ifDefined(this.onHeaderShowMonthPress)}" @ui5-show-year-press="${ifDefined(this.onHeaderShowYearPress)}" ?hide-week-numbers="${this.hideWeekNumbers}" ._currentPicker="${ifDefined(this._calendarCurrentPicker)}" ._pickersMode="${ifDefined(this._calendarPickersMode)}">${repeat(this._calendarSelectedDates, (item, index) => item._id || index, (item, index) => block215.call(this, context, tags, suffix, item, index))}</ui5-calendar>${this.showFooter ? block312.call(this, context, tags, suffix) : void 0}</ui5-responsive-popover> `;
}
function block117(context, tags, suffix) {
  return suffix ? effectiveHtml`<div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(this._headerTitleText)}</span><${scopeTag("ui5-button", tags, suffix)} class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${this.closePicker}"></${scopeTag("ui5-button", tags, suffix)}></div></div>` : effectiveHtml`<div slot="header" class="ui5-responsive-popover-header"><div class="row"><span>${ifDefined(this._headerTitleText)}</span><ui5-button class="ui5-responsive-popover-close-btn" icon="decline" design="Transparent" @click="${this.closePicker}"></ui5-button></div></div>`;
}
function block215(context, tags, suffix, item, index) {
  return suffix ? effectiveHtml`<${scopeTag("ui5-date", tags, suffix)} value="${ifDefined(item)}"></${scopeTag("ui5-date", tags, suffix)}>` : effectiveHtml`<ui5-date value="${ifDefined(item)}"></ui5-date>`;
}
function block312(context, tags, suffix) {
  return effectiveHtml``;
}
var DatePickerPopoverTemplate_lit_default = block019;

// node_modules/@ui5/webcomponents/dist/generated/themes/DatePicker.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData25 = { packageName: "@ui5/webcomponents", fileName: "themes/DatePicker.css.ts", content: `.ui5-hidden-text{position:absolute;clip:rect(1px,1px,1px,1px);user-select:none;left:-1000px;top:-1000px;pointer-events:none;font-size:0}[input-icon]{color:var(--_ui5-v1-24-2_input_icon_color);cursor:pointer;outline:none;padding:var(--_ui5-v1-24-2_input_icon_padding);border-inline-start:var(--_ui5-v1-24-2_input_icon_border);min-width:1rem;min-height:1rem;border-radius:var(--_ui5-v1-24-2_input_icon_border_radius)}[input-icon][pressed]{background:var(--_ui5-v1-24-2_input_icon_pressed_bg);box-shadow:var(--_ui5-v1-24-2_input_icon_box_shadow);border-inline-start:var(--_ui5-v1-24-2_select_hover_icon_left_border);color:var(--_ui5-v1-24-2_input_icon_pressed_color)}[input-icon]:active{background-color:var(--sapButton_Active_Background);box-shadow:var(--_ui5-v1-24-2_input_icon_box_shadow);border-inline-start:var(--_ui5-v1-24-2_select_hover_icon_left_border);color:var(--_ui5-v1-24-2_input_icon_pressed_color)}[input-icon]:not([pressed]):not(:active):hover{background:var(--_ui5-v1-24-2_input_icon_hover_bg);box-shadow:var(--_ui5-v1-24-2_input_icon_box_shadow)}[input-icon]:hover{border-inline-start:var(--_ui5-v1-24-2_select_hover_icon_left_border);box-shadow:var(--_ui5-v1-24-2_input_icon_box_shadow)}:host([readonly]:not([disabled])){border-color:var(--_ui5-v1-24-2_input_readonly_border_color);background:var(--sapField_ReadOnly_BackgroundStyle);background-color:var(--_ui5-v1-24-2_input_readonly_background)}:host([disabled]){opacity:var(--_ui5-v1-24-2_input_disabled_opacity);cursor:default;pointer-events:none;background-color:var(--_ui5-v1-24-2-input_disabled_background);border-color:var(--_ui5-v1-24-2_input_disabled_border_color)}:host([value-state="Error"]) [input-icon]:not([pressed]):not(:active):hover{box-shadow:var(--_ui5-v1-24-2_input_error_icon_box_shadow)}:host([value-state="Warning"]) [input-icon]:not([pressed]):not(:active):hover{box-shadow:var(--_ui5-v1-24-2_input_warning_icon_box_shadow)}:host([value-state="Information"]) [input-icon]:not([pressed]):not(:active):hover{box-shadow:var(--_ui5-v1-24-2_input_information_icon_box_shadow)}:host([value-state="Success"]) [input-icon]:not([pressed]):not(:active):hover{box-shadow:var(--_ui5-v1-24-2_input_success_icon_box_shadow)}:host([value-state="Error"]:not([readonly]):not([disabled])){background:var(--sapField_InvalidBackgroundStyle);background-color:var(--sapField_InvalidBackground);border-color:var(--_ui5-v1-24-2_input_value_state_error_border_color);box-shadow:var(--sapField_InvalidShadow)}:host([value-state="Warning"]:not([readonly]):not([disabled])){background:var(--sapField_WarningBackgroundStyle);background-color:var(--sapField_WarningBackground);border-color:var(--_ui5-v1-24-2_input_value_state_warning_border_color);box-shadow:var(--sapField_WarningShadow)}:host([value-state="Success"]:not([readonly]):not([disabled])){background:var(--sapField_SuccessBackgroundStyle);background-color:var(--sapField_SuccessBackground);border-color:var(--_ui5-v1-24-2_input_value_state_success_border_color);border-width:var(--_ui5-v1-24-2_input_value_state_success_border_width);box-shadow:var(--sapField_SuccessShadow)}:host([value-state="Information"]:not([readonly]):not([disabled])){background:var(--sapField_InformationBackgroundStyle);background-color:var(--sapField_InformationBackground);border-color:var(--_ui5-v1-24-2_input_value_state_information_border_color);border-width:var(--_ui5-v1-24-2_input_information_border_width);box-shadow:var(--sapField_InformationShadow)}:host([value-state="Error"]) [input-icon]:active,:host([value-state="Error"]) [input-icon][pressed]{box-shadow:var(--_ui5-v1-24-2_input_error_icon_box_shadow);color:var(--_ui5-v1-24-2_input_icon_error_pressed_color)}:host([value-state="Warning"]) [input-icon]:active,:host([value-state="Warning"]) [input-icon][pressed]{box-shadow:var(--_ui5-v1-24-2_input_warning_icon_box_shadow);color:var(--_ui5-v1-24-2_input_icon_warning_pressed_color)}:host([value-state="Information"]) [input-icon]:active,:host([value-state="Information"]) [input-icon][pressed]{box-shadow:var(--_ui5-v1-24-2_input_information_icon_box_shadow);color:var(--_ui5-v1-24-2_input_icon_information_pressed_color)}:host([value-state="Success"]) [input-icon]:active,:host([value-state="Success"]) [input-icon][pressed]{box-shadow:var(--_ui5-v1-24-2_input_success_icon_box_shadow);color:var(--_ui5-v1-24-2_input_icon_success_pressed_color)}:host([value-state="Error"]) [input-icon],:host([value-state="Warning"]) [input-icon]{padding:var(--_ui5-v1-24-2_input_error_warning_icon_padding)}:host([value-state="Information"]) [input-icon]{padding:var(--_ui5-v1-24-2_input_information_icon_padding)}:host(:not([hidden])){display:inline-block;line-height:normal;letter-spacing:normal;word-spacing:normal;height:var(--_ui5-v1-24-2_input_height);border-radius:var(--_ui5-v1-24-2_input_border_radius)}:host{min-width:calc(var(--_ui5-v1-24-2_input_min_width) + var(--_ui5-v1-24-2_input_icon_width));color:var(--sapField_TextColor);background-color:var(--sapField_Background);border-radius:var(--_ui5-v1-24-2-datepicker_border_radius);margin:var(--_ui5-v1-24-2_input_margin_top_bottom) 0;user-select:none;-moz-user-select:none;-webkit-user-select:none;-ms-user-select:none}:host(:not([disabled]):not([readonly]):active){background:var(--_ui5-v1-24-2-datepicker-hover-background)}:host(:not([disabled]):not([readonly]):hover){background:var(--_ui5-v1-24-2-datepicker-hover-background)}.ui5-date-picker-root{border-radius:inherit;height:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit}:host .ui5-date-picker-input{width:100%;min-width:12.5625rem;color:inherit;background-color:inherit;border-radius:inherit;height:inherit;line-height:inherit;letter-spacing:inherit;word-spacing:inherit;margin:inherit}:host(:not([disabled]):not([readonly])) .ui5-date-picker-input[focused]{background-color:var(--_ui5-v1-24-2-datepicker-hover-background)}
` };
var DatePicker_css_default = styleData25;

// node_modules/@ui5/webcomponents/dist/generated/themes/DatePickerPopover.css.js
registerThemePropertiesLoader("@ui5/webcomponents-theming", "sap_horizon", async () => parameters_bundle_css_default);
registerThemePropertiesLoader("@ui5/webcomponents", "sap_horizon", async () => parameters_bundle_css_default2);
var styleData26 = { packageName: "@ui5/webcomponents", fileName: "themes/DatePickerPopover.css.ts", content: `[ui5-calendar]{width:100%;display:flex;justify-content:center}[ui5-responsive-popover]::part(content){padding:0}
` };
var DatePickerPopover_css_default = styleData26;

// node_modules/@ui5/webcomponents/dist/DatePicker.js
var __decorate20 = function(decorators, target, key, desc) {
  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d2;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
    r = Reflect.decorate(decorators, target, key, desc);
  else
    for (var i = decorators.length - 1; i >= 0; i--)
      if (d2 = decorators[i])
        r = (c < 3 ? d2(r) : c > 3 ? d2(target, key, r) : d2(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var DatePicker_1;
var DatePicker = DatePicker_1 = class DatePicker2 extends DateComponentBase_default {
  /**
   * @protected
   */
  onResponsivePopoverAfterClose() {
    var _a3;
    this._isPickerOpen = false;
    if (isPhone()) {
      this.blur();
    } else {
      (_a3 = this._getInput()) == null ? void 0 : _a3.focus();
    }
  }
  onBeforeRendering() {
    this.FormSupport = getFeature("FormSupport");
    ["minDate", "maxDate"].forEach((prop) => {
      const propValue = this[prop];
      if (!this.isValid(propValue)) {
        console.warn(`Invalid value for property "${prop}": ${propValue} is not compatible with the configured format pattern: "${this._displayFormat}"`);
      }
    });
    if (this.FormSupport) {
      this.FormSupport.syncNativeHiddenInput(this);
    } else if (this.name) {
      console.warn(`In order for the "name" property to have effect, you should also: import "@ui5/webcomponents/dist/features/InputElementsFormSupport.js";`);
    }
    this.value = this.normalizeValue(this.value) || this.value;
    this.liveValue = this.value;
  }
  /**
   * Override in derivatives to change calendar selection mode
   * @protected
   */
  get _calendarSelectionMode() {
    return "Single";
  }
  /**
   * Used to provide a timestamp to the Calendar (to focus it to a relevant date when open) based on the component's state
   * Override in derivatives to provide the calendar a timestamp based on their properties
   * By default focus the calendar on the selected date if set, or the current day otherwise
   * @protected
   */
  get _calendarTimestamp() {
    if (this.value && this.dateValueUTC && this._checkValueValidity(this.value)) {
      const millisecondsUTC = this.dateValueUTC.getTime();
      return getRoundedTimestamp_default(millisecondsUTC);
    }
    return getTodayUTCTimestamp_default(this._primaryCalendarType);
  }
  /**
   * Used to provide selectedDates to the calendar based on the component's state
   * Override in derivatives to provide different rules for setting the calendar's selected dates
   * @protected
   */
  get _calendarSelectedDates() {
    if (this.value && this._checkValueValidity(this.value)) {
      return [this.value];
    }
    return [];
  }
  _onkeydown(e) {
    if (isShow(e)) {
      e.preventDefault();
      if (this.isOpen()) {
        if (!isF4(e)) {
          this._toggleAndFocusInput();
        }
      } else {
        this._toggleAndFocusInput();
      }
    }
    if (this._getInput().isEqualNode(e.target) && this.isOpen() && (isTabNext(e) || isTabPrevious(e) || isF6Next(e) || isF6Previous(e))) {
      this.closePicker();
    }
    if (this.isOpen()) {
      return;
    }
    if (isEnter(e)) {
      if (this.FormSupport) {
        this.FormSupport.triggerFormSubmit(this);
      }
    } else if (isPageUpShiftCtrl(e)) {
      e.preventDefault();
      this._modifyDateValue(1, "year");
    } else if (isPageUpShift(e)) {
      e.preventDefault();
      this._modifyDateValue(1, "month");
    } else if (isPageUp(e)) {
      e.preventDefault();
      this._modifyDateValue(1, "day");
    } else if (isPageDownShiftCtrl(e)) {
      e.preventDefault();
      this._modifyDateValue(-1, "year");
    } else if (isPageDownShift(e)) {
      e.preventDefault();
      this._modifyDateValue(-1, "month");
    } else if (isPageDown(e)) {
      e.preventDefault();
      this._modifyDateValue(-1, "day");
    }
  }
  /**
   * @param amount
   * @param unit
   * @param preserveDate whether to preserve the day of the month (f.e. 15th of March + 1 month = 15th of April)
   * @protected
   */
  _modifyDateValue(amount, unit, preserveDate) {
    if (!this.dateValue) {
      return;
    }
    const modifiedDate = modifyDateBy_default(CalendarDate_default.fromLocalJSDate(this.dateValue), amount, unit, preserveDate, this._minDate, this._maxDate);
    const newValue = this.formatValue(modifiedDate.toUTCJSDate());
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
  }
  _updateValueAndFireEvents(value, normalizeValue, events, updateValue = true) {
    const valid = this._checkValueValidity(value);
    if (valid && normalizeValue) {
      value = this.normalizeValue(value);
    }
    let executeEvent = true;
    this.liveValue = value;
    const previousValue = this.value;
    if (updateValue) {
      this._getInput().value = value;
      this.value = value;
      this._updateValueState();
    }
    events.forEach((e) => {
      if (!this.fireEvent(e, { value, valid }, true)) {
        executeEvent = false;
      }
    });
    if (!executeEvent && updateValue) {
      if (this.value !== previousValue && this.value !== this._getInput().value) {
        return;
      }
      this._getInput().value = previousValue;
      this.value = previousValue;
    }
  }
  _updateValueState() {
    const valid = this._checkValueValidity(this.value);
    const previousValueState = this.valueState;
    this.valueState = valid ? ValueState_default.None : ValueState_default.Error;
    const eventPrevented = !this.fireEvent("value-state-change", { valueState: this.valueState, valid }, true);
    if (eventPrevented) {
      this.valueState = previousValueState;
    }
  }
  _toggleAndFocusInput() {
    this.togglePicker();
    this._getInput().focus();
  }
  _getInput() {
    return this.shadowRoot.querySelector("[ui5-input]");
  }
  /**
   * The ui5-input "submit" event handler - fire change event when the user presses enter
   * @protected
   */
  _onInputSubmit() {
  }
  /**
   * The ui5-input "change" event handler - fire change event when the user focuses out of the input
   * @protected
   */
  _onInputChange(e) {
    this._updateValueAndFireEvents(e.target.value, true, ["change", "value-changed"]);
  }
  /**
   * The ui5-input "input" event handler - fire input even when the user types
   * @protected
   */
  _onInputInput(e) {
    this._updateValueAndFireEvents(e.target.value, false, ["input"], false);
  }
  /**
   * Checks if the provided value is valid and within valid range.
   * @protected
   * @param value
   */
  _checkValueValidity(value) {
    if (value === "") {
      return true;
    }
    return this.isValid(value) && this.isInValidRange(value);
  }
  _click(e) {
    if (isPhone()) {
      this.responsivePopover.showAt(this);
      e.preventDefault();
    }
  }
  /**
   * Checks if a value is valid against the current date format of the DatePicker.
   * @public
   * @param value A value to be tested against the current date format
   */
  isValid(value) {
    if (value === "" || value === void 0) {
      return true;
    }
    return !!this.getFormat().parse(value);
  }
  /**
   * Checks if a date is between the minimum and maximum date.
   * @public
   * @param value A value to be checked
   */
  isInValidRange(value) {
    if (value === "" || value === void 0) {
      return true;
    }
    const calendarDate = this._getCalendarDateFromString(value);
    if (!calendarDate || !this._minDate || !this._maxDate) {
      return false;
    }
    return calendarDate.valueOf() >= this._minDate.valueOf() && calendarDate.valueOf() <= this._maxDate.valueOf();
  }
  /**
   * The parser understands many formats, but we need one format
   * @protected
   */
  normalizeValue(value) {
    if (value === "") {
      return value;
    }
    return this.getFormat().format(this.getFormat().parse(value, true), true);
  }
  get _displayFormat() {
    return this.getFormat().oFormatOptions.pattern;
  }
  /**
   * @protected
   */
  get _placeholder() {
    return this.placeholder !== void 0 ? this.placeholder : this._displayFormat;
  }
  get _headerTitleText() {
    return DatePicker_1.i18nBundle.getText(INPUT_SUGGESTIONS_TITLE);
  }
  get phone() {
    return isPhone();
  }
  get showHeader() {
    return this.phone;
  }
  get showFooter() {
    return this.phone;
  }
  get accInfo() {
    return {
      "ariaRoledescription": this.dateAriaDescription,
      "ariaHasPopup": HasPopup_default.Grid.toLowerCase(),
      "ariaRequired": this.required,
      "ariaLabel": getEffectiveAriaLabelText(this)
    };
  }
  get openIconTitle() {
    return DatePicker_1.i18nBundle.getText(DATEPICKER_OPEN_ICON_TITLE);
  }
  get openIconName() {
    return "appointment-2";
  }
  get dateAriaDescription() {
    return DatePicker_1.i18nBundle.getText(DATEPICKER_DATE_DESCRIPTION);
  }
  /**
   * Defines whether the dialog on mobile should have header
   * @private
   */
  get _shouldHideHeader() {
    return false;
  }
  /**
   * Returns the first picker depending on the CalendarPickerMode
   */
  get firstPicker() {
    const calendarPickerMode = this._calendarPickersMode;
    let firstPicker = "day";
    if (calendarPickerMode === CalendarPickersMode_default.YEAR) {
      firstPicker = "year";
    } else if (calendarPickerMode === CalendarPickersMode_default.MONTH_YEAR) {
      firstPicker = "month";
    }
    return firstPicker;
  }
  /**
   * Defines whether the value help icon is hidden
   * @private
   */
  get _ariaHidden() {
    return isDesktop();
  }
  async _respPopover() {
    const staticAreaItem = await this.getStaticAreaItemDomRef();
    return staticAreaItem.querySelector("[ui5-responsive-popover]");
  }
  _canOpenPicker() {
    return !this.disabled && !this.readonly;
  }
  get _calendarPickersMode() {
    const format = this.getFormat();
    const patternSymbolTypes = format.aFormatArray.map((patternSymbolSettings) => {
      return patternSymbolSettings.type.toLowerCase();
    });
    if (patternSymbolTypes.includes("day")) {
      return CalendarPickersMode_default.DAY_MONTH_YEAR;
    }
    if (patternSymbolTypes.includes("month") || patternSymbolTypes.includes("monthstandalone")) {
      return CalendarPickersMode_default.MONTH_YEAR;
    }
    return CalendarPickersMode_default.YEAR;
  }
  /**
   * The user selected a new date in the calendar
   * @param e
   * @protected
   */
  onSelectedDatesChange(e) {
    e.preventDefault();
    const newValue = e.detail.values && e.detail.values[0];
    this._updateValueAndFireEvents(newValue, true, ["change", "value-changed"]);
    this.closePicker();
  }
  /**
   * The user clicked the "month" button in the header
   */
  onHeaderShowMonthPress() {
    this._calendarCurrentPicker = "month";
  }
  /**
   * The user clicked the "year" button in the header
   */
  onHeaderShowYearPress() {
    this._calendarCurrentPicker = "year";
  }
  /**
   * Formats a Java Script date object into a string representing a locale date
   * according to the `formatPattern` property of the DatePicker instance
   * @public
   * @param date A Java Script date object to be formatted as string
   * @returns The date as string
   */
  formatValue(date) {
    return this.getFormat().format(date);
  }
  /**
   * Closes the picker.
   * @public
   */
  closePicker() {
    this.responsivePopover.close();
  }
  /**
   * Opens the picker.
   * @public
   * @returns Resolves when the picker is open
   */
  async openPicker() {
    this._isPickerOpen = true;
    this._calendarCurrentPicker = this.firstPicker;
    this.responsivePopover = await this._respPopover();
    this.responsivePopover.showAt(this);
  }
  togglePicker() {
    if (this.isOpen()) {
      this.closePicker();
    } else if (this._canOpenPicker()) {
      this.openPicker();
    }
  }
  /**
   * Checks if the picker is open.
   * @public
   * @returns true if the picker is open, false otherwise
   */
  isOpen() {
    return !!this._isPickerOpen;
  }
  /**
   * Currently selected date represented as a Local JavaScript Date instance.
   * @public
   * @default null
   */
  get dateValue() {
    return this.liveValue ? this.getFormat().parse(this.liveValue) : this.getFormat().parse(this.value);
  }
  get dateValueUTC() {
    return this.liveValue ? this.getFormat().parse(this.liveValue, true) : this.getFormat().parse(this.value);
  }
  get styles() {
    return {
      main: {
        width: "100%"
      }
    };
  }
  get type() {
    return InputType_default.Text;
  }
};
__decorate20([
  property_default()
], DatePicker.prototype, "value", void 0);
__decorate20([
  property_default({ type: ValueState_default, defaultValue: ValueState_default.None })
], DatePicker.prototype, "valueState", void 0);
__decorate20([
  property_default({ type: Boolean })
], DatePicker.prototype, "required", void 0);
__decorate20([
  property_default({ type: Boolean })
], DatePicker.prototype, "disabled", void 0);
__decorate20([
  property_default({ type: Boolean })
], DatePicker.prototype, "readonly", void 0);
__decorate20([
  property_default({ defaultValue: void 0 })
], DatePicker.prototype, "placeholder", void 0);
__decorate20([
  property_default()
], DatePicker.prototype, "name", void 0);
__decorate20([
  property_default({ type: Boolean })
], DatePicker.prototype, "hideWeekNumbers", void 0);
__decorate20([
  property_default()
], DatePicker.prototype, "accessibleName", void 0);
__decorate20([
  property_default({ defaultValue: "" })
], DatePicker.prototype, "accessibleNameRef", void 0);
__decorate20([
  property_default({ type: Boolean, noAttribute: true })
], DatePicker.prototype, "_isPickerOpen", void 0);
__decorate20([
  property_default({ type: Object })
], DatePicker.prototype, "_respPopoverConfig", void 0);
__decorate20([
  property_default({ defaultValue: "day" })
], DatePicker.prototype, "_calendarCurrentPicker", void 0);
__decorate20([
  slot_default({ type: HTMLElement })
], DatePicker.prototype, "valueStateMessage", void 0);
__decorate20([
  slot_default({ type: HTMLElement })
], DatePicker.prototype, "formSupport", void 0);
DatePicker = DatePicker_1 = __decorate20([
  customElement_default({
    tag: "ui5-date-picker",
    languageAware: true,
    template: DatePickerTemplate_lit_default,
    staticAreaTemplate: DatePickerPopoverTemplate_lit_default,
    styles: DatePicker_css_default,
    staticAreaStyles: [
      ResponsivePopoverCommon_css_default,
      DatePickerPopover_css_default
    ],
    dependencies: [
      Icon_default,
      ResponsivePopover_default,
      Calendar_default,
      CalendarDate_default2,
      Input_default,
      Button_default
    ]
  }),
  event_default("change", {
    detail: {
      /**
       * @public
       */
      value: {
        type: String
      },
      /**
       * @public
       */
      valid: {
        type: Boolean
      }
    }
  }),
  event_default("input", {
    detail: {
      /**
       * @public
       */
      value: {
        type: String
      },
      /**
       * @public
       */
      valid: {
        type: Boolean
      }
    }
  }),
  event_default("value-state-change", {
    detail: {
      /**
       * @public
       */
      valueState: {
        type: String
      },
      /**
       * @public
       */
      valid: {
        type: Boolean
      }
    }
  })
], DatePicker);
DatePicker.define();
var DatePicker_default = DatePicker;
export {
  DatePicker_default as default
};
/*! Bundled license information:

@ui5/webcomponents-localization/dist/sap/base/strings/formatMessage.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

@ui5/webcomponents-localization/dist/sap/ui/core/format/DateFormat.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)

lit-html/development/lit-html.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directive.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directive-helpers.js:
  (**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/repeat.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/class-map.js:
  (**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

@ui5/webcomponents-base/dist/renderer/directives/style-map.js:
  (**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/if-defined.js:
  (**
   * @license
   * Copyright 2018 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/directives/unsafe-html.js:
  (**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)

lit-html/development/static.js:
  (**
   * @license
   * Copyright 2020 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   *)
*/
//# sourceMappingURL=@ui5_webcomponents_dist_DatePicker__js.js.map
