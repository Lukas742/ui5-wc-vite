{
  "version": 3,
  "sources": ["../../@ui5/webcomponents-base/src/locale/normalizeLocale.ts", "../../@ui5/webcomponents-base/src/locale/nextFallbackLocale.ts", "../../@ui5/webcomponents-base/src/asset-registries/i18n.ts"],
  "sourcesContent": ["import { DEFAULT_LOCALE } from \"../generated/AssetParameters.js\";\n\nconst localeRegEX = /^((?:[A-Z]{2,3}(?:-[A-Z]{3}){0,3})|[A-Z]{4}|[A-Z]{5,8})(?:-([A-Z]{4}))?(?:-([A-Z]{2}|[0-9]{3}))?((?:-[0-9A-Z]{5,8}|-[0-9][0-9A-Z]{3})*)((?:-[0-9A-WYZ](?:-[0-9A-Z]{2,8})+)*)(?:-(X(?:-[0-9A-Z]{1,8})+))?$/i;\nconst SAPSupportabilityLocales = /(?:^|-)(saptrc|sappsd)(?:-|$)/i;\n\n/* Map for old language names for a few ISO639 codes. */\nconst M_ISO639_NEW_TO_OLD = {\n\t\"he\": \"iw\",\n\t\"yi\": \"ji\",\n\t\"nb\": \"no\",\n\t\"sr\": \"sh\",\n};\n\n/**\n * Normalizes the given locale in BCP-47 syntax.\n * @param {string} locale locale to normalize\n * @returns {string} Normalized locale, \"undefined\" if the locale can't be normalized or the default locale, if no locale provided.\n */\nconst normalizeLocale = (locale: string) => {\n\tlet m;\n\n\tif (!locale) {\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\tif (typeof locale === \"string\" && (m = localeRegEX.exec(locale.replace(/_/g, \"-\")))) {/* eslint-disable-line */\n\t\tlet language = m[1].toLowerCase();\n\t\tlet region = m[3] ? m[3].toUpperCase() : undefined;\n\t\tconst script = m[2] ? m[2].toLowerCase() : undefined;\n\t\tconst variants = m[4] ? m[4].slice(1) : undefined;\n\t\tconst isPrivate = m[6];\n\n\t\tlanguage = M_ISO639_NEW_TO_OLD[language as keyof typeof M_ISO639_NEW_TO_OLD] || language;\n\n\t\t// recognize and convert special SAP supportability locales (overwrites m[]!)\n\t\tif ((isPrivate && (m = SAPSupportabilityLocales.exec(isPrivate))) /* eslint-disable-line */ ||\n\t\t\t(variants && (m = SAPSupportabilityLocales.exec(variants)))) {/* eslint-disable-line */\n\t\t\treturn `en_US_${m[1].toLowerCase()}`; // for now enforce en_US (agreed with SAP SLS)\n\t\t}\n\n\t\t// Chinese: when no region but a script is specified, use default region for each script\n\t\tif (language === \"zh\" && !region) {\n\t\t\tif (script === \"hans\") {\n\t\t\t\tregion = \"CN\";\n\t\t\t} else if (script === \"hant\") {\n\t\t\t\tregion = \"TW\";\n\t\t\t}\n\t\t}\n\n\t\treturn language + (region ? \"_\" + region + (variants ? \"_\" + variants.replace(\"-\", \"_\") : \"\") : \"\"); /* eslint-disable-line */\n\t}\n\n\treturn DEFAULT_LOCALE;\n};\n\nexport default normalizeLocale;\n", "import { DEFAULT_LOCALE } from \"../generated/AssetParameters.js\";\n\n/**\n * Calculates the next fallback locale for the given locale.\n *\n * @param {string} locale Locale string in Java format (underscores) or null\n * @returns {string} Next fallback Locale or \"en\" if no fallbacks found.\n */\nconst nextFallbackLocale = (locale: string) => {\n\tif (!locale) {\n\t\treturn DEFAULT_LOCALE;\n\t}\n\n\tif (locale === \"zh_HK\") {\n\t\treturn \"zh_TW\";\n\t}\n\n\t// if there are multiple segments (separated by underscores), remove the last one\n\tconst p = locale.lastIndexOf(\"_\");\n\tif (p >= 0) {\n\t\treturn locale.slice(0, p);\n\t}\n\n\t// for any language but the default, fallback to the default first before falling back to the 'raw' language (empty string)\n\treturn locale !== DEFAULT_LOCALE ? DEFAULT_LOCALE : \"\";\n};\n\nexport default nextFallbackLocale;\n", "import getLocale from \"../locale/getLocale.js\";\nimport { attachLanguageChange } from \"../locale/languageChange.js\";\nimport normalizeLocale from \"../locale/normalizeLocale.js\";\nimport nextFallbackLocale from \"../locale/nextFallbackLocale.js\";\nimport { DEFAULT_LANGUAGE } from \"../generated/AssetParameters.js\";\nimport { getFetchDefaultLanguage } from \"../config/Language.js\";\n\ntype I18nLoader = (localeId: string) => Promise<I18nData>;\ntype I18nData = Record<string, string>;\n\n// contains package names for which the warning has been shown\nconst warningShown = new Set();\nconst reportedErrors = new Set();\n\nconst bundleData = new Map<string, I18nData | null>();\nconst bundlePromises = new Map<string, Promise<I18nData>>();\nconst loaders = new Map<string, I18nLoader>();\n\n/**\n * Registers i18n loader function for given package and locale.\n *\n * @public\n * @param {string} packageName for which package this loader can fetch data\n * @param {string} localeId locale that this loader can handle\n * @param {function} loader async function that will be passed a localeId and should return a JSON object\n */\nconst registerI18nLoader = (packageName: string, localeId: string, loader: I18nLoader) => {\n\t// register loader by key\n\tconst bundleKey = `${packageName}/${localeId}`;\n\tloaders.set(bundleKey, loader);\n};\n\nconst _setI18nBundleData = (packageName: string, data: I18nData | null) => {\n\tbundleData.set(packageName, data);\n};\n\nconst getI18nBundleData = (packageName: string) => {\n\treturn bundleData.get(packageName);\n};\n\nconst _hasLoader = (packageName: string, localeId: string) => {\n\tconst bundleKey = `${packageName}/${localeId}`;\n\treturn loaders.has(bundleKey);\n};\n\n// load bundle over the network once\nconst _loadMessageBundleOnce = (packageName: string, localeId: string) => {\n\tconst bundleKey = `${packageName}/${localeId}`;\n\tconst loadMessageBundle = loaders.get(bundleKey);\n\n\tif (loadMessageBundle && !bundlePromises.get(bundleKey)) {\n\t\tbundlePromises.set(bundleKey, loadMessageBundle(localeId));\n\t}\n\n\treturn bundlePromises.get(bundleKey)!; // Investigate if i18n loader exists and this won't return undefined.\n};\n\nconst _showAssetsWarningOnce = (packageName: string) => {\n\tif (!warningShown.has(packageName)) {\n\t\tconsole.warn(`[${packageName}]: Message bundle assets are not configured. Falling back to English texts.`, /* eslint-disable-line */\n\t\t\t` Add \\`import \"${packageName}/dist/Assets.js\"\\` in your bundle and make sure your build tool supports dynamic imports and JSON imports. See section \"Assets\" in the documentation for more information.`); /* eslint-disable-line */\n\t\twarningShown.add(packageName);\n\t}\n};\n\nconst useFallbackBundle = (packageName: string, localeId: string) => {\n\treturn localeId !== DEFAULT_LANGUAGE && !_hasLoader(packageName, localeId);\n};\n\n/**\n * This method preforms the asynchronous task of fetching the actual text resources. It will fetch\n * each text resource over the network once (even for multiple calls to the same method).\n * It should be fully finished before the i18nBundle class is created in the webcomponents.\n * This method uses the bundle URLs that are populated by the `registerI18nBundle` method.\n * To simplify the usage, the synchronization of both methods happens internally for the same `bundleId`\n * @param {packageName} packageName the NPM package name\n * @public\n */\nconst fetchI18nBundle = async (packageName: string) => {\n\tconst language = getLocale().getLanguage();\n\tconst region = getLocale().getRegion();\n\tconst variant = getLocale().getVariant();\n\tlet localeId = language + (region ? `-${region}` : ``) + (variant ? `-${variant}` : ``);\n\n\tif (useFallbackBundle(packageName, localeId)) {\n\t\tlocaleId = normalizeLocale(localeId);\n\n\t\twhile (useFallbackBundle(packageName, localeId)) {\n\t\t\tlocaleId = nextFallbackLocale(localeId);\n\t\t}\n\t}\n\n\t// use default language unless configured to always fetch it from the network\n\tconst fetchDefaultLanguage = getFetchDefaultLanguage();\n\tif (localeId === DEFAULT_LANGUAGE && !fetchDefaultLanguage) {\n\t\t_setI18nBundleData(packageName, null); // reset for the default language (if data was set for a previous language)\n\t\treturn;\n\t}\n\n\tif (!_hasLoader(packageName, localeId)) {\n\t\t_showAssetsWarningOnce(packageName);\n\t\treturn;\n\t}\n\n\ttry {\n\t\tconst data = await _loadMessageBundleOnce(packageName, localeId);\n\t\t_setI18nBundleData(packageName, data);\n\t} catch (error: unknown) {\n\t\tconst e = error as Error;\n\t\tif (!reportedErrors.has(e.message)) {\n\t\t\treportedErrors.add(e.message);\n\t\t\tconsole.error(e.message); /* eslint-disable-line */\n\t\t}\n\t}\n};\n\n// When the language changes dynamically (the user calls setLanguage), re-fetch all previously fetched bundles\nattachLanguageChange((lang: string /* eslint-disable-line */) => {\n\tconst allPackages = [...bundleData.keys()];\n\treturn Promise.all(allPackages.map(fetchI18nBundle));\n});\n\nexport {\n\tregisterI18nLoader,\n\tfetchI18nBundle,\n\tgetI18nBundleData,\n};\n"],
  "mappings": "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",
  "names": []
}
