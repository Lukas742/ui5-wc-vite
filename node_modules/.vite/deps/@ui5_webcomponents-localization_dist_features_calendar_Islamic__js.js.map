{
  "version": 3,
  "sources": ["../../@ui5/webcomponents-localization/dist/sap/base/config.js", "../../@ui5/webcomponents-localization/dist/sap/base/Event.js", "../../@ui5/webcomponents-localization/dist/sap/base/Eventing.js", "../../@ui5/webcomponents-localization/dist/sap/base/util/isEmptyObject.js", "../../@ui5/webcomponents-localization/dist/sap/base/i18n/Formatting.js", "../../@ui5/webcomponents-localization/dist/sap/ui/core/date/Islamic.js"],
  "sourcesContent": ["// called from sapui5, but not supported by us\nconst legacyFormats = [\"sapUiLegacyTimeFormat\", \"sapUiABAPTimeFormat\", \"sapUiLegacyDateFormat\", \"sapUiABAPDateFormat\", \"sapUiLegacyNumberFormat\", \"sapUiABAPNumberFormat\"];\nexport default {\n  getWritableInstance() {\n    return {\n      get({\n        name\n      }) {\n        if (legacyFormats.includes(name)) {\n          return undefined;\n        }\n        throw new Error(\"Localization :: missing configuration requested.\");\n      }\n    };\n  },\n  Type: {}\n};", "/*!\n * OpenUI5\n * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n// Provides class module:sap/base/Event\n\nconst EVENT_PARAMETERS_SYMBOL = Symbol(\"parameters\");\n\n/**\n * @author SAP SE\n * @version 1.120.5\n *\n * Creates an event with the given <code>sType</code>,\n * linked to the provided <code>oTarget</code> and enriched with the <code>oParameters</code>.\n *\n * @param {string} sType The type of the event\n * @param {object} oParameters Parameters for this event. The parameters will be accessible as properties of the Event instance.\n *\n * @alias module:sap/base/Event\n * @namespace\n * @private\n * @ui5-restricted sap.ui.core\n */\nclass Event {\n  /**\n   *The type of the event\n   * @type {string}\n   * @private\n   * @ui5-restricted sap.ui.core\n   */\n  #type;\n  constructor(sType, oParameters) {\n    //copy & freeze parameters\n    for (const param in oParameters) {\n      this[param] = oParameters[param];\n      Object.defineProperty(this, param, {\n        configurable: false,\n        writable: false\n      });\n    }\n    this[EVENT_PARAMETERS_SYMBOL] = oParameters;\n    this.#type = sType;\n  }\n  get type() {\n    return this.#type;\n  }\n  /**\n   * Returns the event parameters as map\n   * @param {module:sap/base/Event} oEvent The event object to retrieve the parameters\n   * @returns {object} Map of event parameters\n   * @private\n   * @ui5-restricted sap/base/i18n sap.ui.core\n   */\n  static getParameters(oEvent) {\n    return Object.assign({}, oEvent[EVENT_PARAMETERS_SYMBOL]);\n  }\n}\nexport default Event;", "/*!\n * OpenUI5\n * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n// Provides mixin sap/base/Eventing\nimport assert from \"./assert.js\";\nimport Event from \"./Event.js\";\n/**\n * Eventing\n *\n * @author SAP SE\n * @version 1.120.5\n *\n * @since 1.120.0\n * @private\n * @ui5-restricted sap.ui.core sap/base/i18n\n */\nclass Eventing {\n  #mEventRegistry = {};\n  /**\n   * Attaches an event handler to the event with the given identifier.\n   *\n   * @param {string}\n   * \t\tsType The type of the event to listen for\n   * @param {function}\n   * \t\tfnFunction The handler function to call when the event occurs. The event\n   * \t\tobject ({@link module:sap/base/Event}) is provided as first argument of the handler. Handlers must not change\n   * \t\tthe content of the event.\n   * @param {object}\n   * \t\t[oData] An object that will be passed to the handler along with the event object when the event is fired\n   * @since 1.120.0\n   * @private\n   * @ui5-restricted sap.ui.core sap/base/i18n\n   */\n  attachEvent(sType, fnFunction, oData) {\n    assert(typeof sType === \"string\" && sType, \"Eventing.attachEvent: sType must be a non-empty string\");\n    assert(typeof fnFunction === \"function\", \"Eventing.attachEvent: fnFunction must be a function\");\n    let aEventListeners = this.#mEventRegistry[sType];\n    if (!Array.isArray(aEventListeners)) {\n      aEventListeners = this.#mEventRegistry[sType] = [];\n    }\n    aEventListeners.push({\n      fnFunction: fnFunction,\n      oData: oData\n    });\n  }\n\n  /**\n   * Attaches an event handler, called one time only, to the event with the given identifier.\n   *\n   * When the event occurs, the handler function is called and the handler registration is automatically removed afterwards.\n   *\n   * @param {string}\n   *            sType The type of the event to listen for\n   * @param {function}\n   *            fnFunction The handler function to call when the event occurs. The event\n   *                       object ({@link module:sap/base/Event}) is provided as first argument of the handler. Handlers must not change\n   *                       the content of the event.\n   * @param {object}\n   *            [oData] An object that will be passed to the handler along with the event object when the event is fired\n   * @since 1.120.0\n   * @private\n   * @ui5-restricted sap.ui.core sap/base/i18n\n   */\n  attachEventOnce(sType, fnFunction, oData) {\n    const fnOnce = oEvent => {\n      this.detachEvent(sType, fnOnce);\n      fnFunction.call(null, oEvent); // needs to do the same resolution as in fireEvent\n    };\n    fnOnce.oOriginal = {\n      fnFunction: fnFunction\n    };\n    this.attachEvent(sType, fnOnce, oData);\n  }\n\n  /**\n   * Removes a previously attached event handler from the event with the given identifier.\n   *\n   * The passed parameters must match those used for registration with {@link #attachEvent} beforehand.\n   *\n   * @param {string}\n   *            sType The type of the event to detach from\n   * @param {function}\n   *            fnFunction The handler function to detach from the event\n   * @since 1.120.0\n   * @private\n   * @ui5-restricted sap.ui.core sap/base/i18n\n   */\n  detachEvent(sType, fnFunction) {\n    assert(typeof sType === \"string\" && sType, \"Eventing.detachEvent: sType must be a non-empty string\");\n    assert(typeof fnFunction === \"function\", \"Eventing.detachEvent: fnFunction must be a function\");\n    const aEventListeners = this.#mEventRegistry[sType];\n    if (!Array.isArray(aEventListeners)) {\n      return;\n    }\n    let oFound;\n    for (let i = 0, iL = aEventListeners.length; i < iL; i++) {\n      if (aEventListeners[i].fnFunction === fnFunction) {\n        oFound = aEventListeners[i];\n        aEventListeners.splice(i, 1);\n        break;\n      }\n    }\n    // If no listener was found, look for original listeners of attachEventOnce\n    if (!oFound) {\n      for (let i = 0, iL = aEventListeners.length; i < iL; i++) {\n        const oOriginal = aEventListeners[i].fnFunction.oOriginal;\n        if (oOriginal && oOriginal.fnFunction === fnFunction) {\n          aEventListeners.splice(i, 1);\n          break;\n        }\n      }\n    }\n    // If we just deleted the last registered EventHandler, remove the whole entry from our map.\n    if (aEventListeners.length == 0) {\n      delete this.#mEventRegistry[sType];\n    }\n  }\n\n  /**\n   * Fires an {@link module:sap/base/Event event} with the given settings and notifies all attached event handlers.\n   *\n   * @param {string}\n   *            sType The type of the event to fire\n   * @param {object}\n   *            [oParameters] Parameters which should be carried by the event\n   * @since 1.120.0\n   * @private\n   * @ui5-restricted sap.ui.core sap/base/i18n\n   */\n  fireEvent(sType, oParameters) {\n    let aEventListeners, oEvent, i, iL, oInfo;\n    aEventListeners = this.#mEventRegistry[sType];\n    if (Array.isArray(aEventListeners)) {\n      // avoid issues with 'concurrent modification' (e.g. if an event listener unregisters itself).\n      aEventListeners = aEventListeners.slice();\n      oEvent = new Event(sType, oParameters);\n      for (i = 0, iL = aEventListeners.length; i < iL; i++) {\n        oInfo = aEventListeners[i];\n        oInfo.fnFunction.call(null, oEvent);\n      }\n    }\n  }\n}\nexport default Eventing;", "/**\n * Validates if the given object is empty, that is that it has no enumerable properties.\n *\n * Note that <code>null</code> and <code>undefined</code> comply with this definition of 'empty'.\n * The behavior for non-object values is undefined and might change in future.\n *\n * @example\n * sap.ui.require([\"sap/base/util/isEmptyObject\"], function(isEmptyObject){\n *      isEmptyObject({}); // true\n *      isEmptyObject({test: '123'}); // false\n *      isEmptyObject(null); // true\n *      isEmptyObject(undefined); // true\n * });\n *\n * @function\n * @since 1.65\n * @public\n * @name module:sap/base/util/isEmptyObject\n * @param {Object} obj the object which is checked\n * @returns {boolean} whether or not the given object is empty\n */ /*!\n     * OpenUI5\n     * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.\n     * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n     */\n\nvar fnIsEmptyObject = function isEmptyObject(obj) {\n  // eslint-disable-next-line no-unreachable-loop\n  for (var sName in obj) {\n    return false;\n  }\n  return true;\n};\nexport default fnIsEmptyObject;", "/*!\n* OpenUI5\n * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n*/\nimport assert from \"../assert.js\";\nimport BaseConfig from \"../config.js\";\nimport Eventing from \"../Eventing.js\";\nimport Log from \"../Log.js\";\nimport Localization from \"./Localization.js\";\nimport LanguageTag from \"./LanguageTag.js\";\nimport CalendarType from \"./date/CalendarType.js\";\nimport CalendarWeekNumbering from \"./date/CalendarWeekNumbering.js\";\nimport deepEqual from \"../util/deepEqual.js\";\nimport extend from \"../util/extend.js\";\nimport isEmptyObject from \"../util/isEmptyObject.js\";\nconst oEventing = new Eventing();\nconst oWritableConfig = BaseConfig.getWritableInstance();\nconst mSettings = {};\nlet mChanges;\nlet aCustomIslamicCalendarData;\nconst M_ABAP_DATE_FORMAT_PATTERN = {\n  \"\": {\n    pattern: null\n  },\n  \"1\": {\n    pattern: \"dd.MM.yyyy\"\n  },\n  \"2\": {\n    pattern: \"MM/dd/yyyy\"\n  },\n  \"3\": {\n    pattern: \"MM-dd-yyyy\"\n  },\n  \"4\": {\n    pattern: \"yyyy.MM.dd\"\n  },\n  \"5\": {\n    pattern: \"yyyy/MM/dd\"\n  },\n  \"6\": {\n    pattern: \"yyyy-MM-dd\"\n  },\n  \"7\": {\n    pattern: \"Gyy.MM.dd\"\n  },\n  \"8\": {\n    pattern: \"Gyy/MM/dd\"\n  },\n  \"9\": {\n    pattern: \"Gyy-MM-dd\"\n  },\n  \"A\": {\n    pattern: \"yyyy/MM/dd\"\n  },\n  \"B\": {\n    pattern: \"yyyy/MM/dd\"\n  },\n  \"C\": {\n    pattern: \"yyyy/MM/dd\"\n  }\n};\nconst M_ABAP_TIME_FORMAT_PATTERN = {\n  \"\": {\n    \"short\": null,\n    medium: null,\n    dayPeriods: null\n  },\n  \"0\": {\n    \"short\": \"HH:mm\",\n    medium: \"HH:mm:ss\",\n    dayPeriods: null\n  },\n  \"1\": {\n    \"short\": \"hh:mm a\",\n    medium: \"hh:mm:ss a\",\n    dayPeriods: [\"AM\", \"PM\"]\n  },\n  \"2\": {\n    \"short\": \"hh:mm a\",\n    medium: \"hh:mm:ss a\",\n    dayPeriods: [\"am\", \"pm\"]\n  },\n  \"3\": {\n    \"short\": \"KK:mm a\",\n    medium: \"KK:mm:ss a\",\n    dayPeriods: [\"AM\", \"PM\"]\n  },\n  \"4\": {\n    \"short\": \"KK:mm a\",\n    medium: \"KK:mm:ss a\",\n    dayPeriods: [\"am\", \"pm\"]\n  }\n};\nconst M_ABAP_NUMBER_FORMAT_SYMBOLS = {\n  \"\": {\n    groupingSeparator: null,\n    decimalSeparator: null\n  },\n  \" \": {\n    groupingSeparator: \".\",\n    decimalSeparator: \",\"\n  },\n  \"X\": {\n    groupingSeparator: \",\",\n    decimalSeparator: \".\"\n  },\n  \"Y\": {\n    groupingSeparator: \" \",\n    decimalSeparator: \",\"\n  }\n};\nfunction check(bCondition, sMessage) {\n  if (!bCondition) {\n    throw new TypeError(sMessage);\n  }\n}\nfunction _set(sKey, oValue) {\n  // Invalidating the BaseConfig is necessary, because Formatting.getLanguageTag\n  // does defaulting depending on the mSettings. In case no specifc LaguageTag was\n  // set the default would become applied and cached. If the mSettings are changed\n  // inbetween the cache would not become invalidated because there is no direct\n  // change to the Configuration and therefore the cached value would be wrong.\n  BaseConfig._.invalidate();\n  const oOldValue = mSettings[sKey];\n  if (oValue != null) {\n    mSettings[sKey] = oValue;\n  } else {\n    delete mSettings[sKey];\n  }\n  // report a change only if old and new value differ (null/undefined are treated as the same value)\n  if ((oOldValue != null || oValue != null) && !deepEqual(oOldValue, oValue)) {\n    const bFireEvent = !mChanges;\n    mChanges ??= {};\n    mChanges[sKey] = oValue;\n    if (bFireEvent) {\n      fireChange();\n    }\n  }\n}\n\n/**\n * Helper that creates a LanguageTag object from the given language\n * or, throws an error for non BCP-47 compliant languages.\n *\n * @param {string|module:sap/base/i18n/LanguageTag} vLanguageTag A BCP-47 compliant language tag\n * @returns {module:sap/base/i18n/LanguageTag} The resulting LanguageTag\n * @private\n * @since 1.116.0\n */\nfunction createLanguageTag(vLanguageTag) {\n  let oLanguageTag;\n  if (vLanguageTag && typeof vLanguageTag === 'string') {\n    try {\n      oLanguageTag = new LanguageTag(vLanguageTag);\n    } catch (e) {\n      // ignore\n    }\n  } else if (vLanguageTag instanceof LanguageTag) {\n    oLanguageTag = vLanguageTag;\n  }\n  return oLanguageTag;\n}\n\n/**\n * Configuration for formatting specific parameters\n * @public\n * @alias module:sap/base/i18n/Formatting\n * @namespace\n * @since 1.120\n */\nconst Formatting = {\n  /**\n   * The <code>change</code> event is fired, when the configuration options are changed.\n   * For the event parameters please refer to {@link module:sap/base/i18n/Formatting$ChangeEvent}.\n   *\n   * @name module:sap/base/i18n/Formatting.change\n   * @event\n   * @param {module:sap/base/i18n/Formatting$ChangeEvent} oEvent\n   * @public\n   * @since 1.120\n   */\n\n  /**\n   * The formatting change event. Contains only the parameters which were changed.\n   *\n   * The list below shows the possible combinations of parameters available as part of the change event.\n   *\n   * <ul>\n   * <li>{@link module:sap/base/i18n/Formatting.setLanguageTag Formatting.setLanguageTag}:\n   * <ul>\n   * <li><code>languageTag</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.setCustomIslamicCalendarData Formatting.setCustomIslamicCalendarData}:\n   * <ul>\n   * <li><code>customIslamicCalendarData</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.setCalendarWeekNumbering Formatting.setCalendarWeekNumbering}:\n   * <ul>\n   * <li><code>calendarWeekNumbering</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.setCalendarType Formatting.setCalendarType}:\n   * <ul>\n   * <li><code>calendarType</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.addCustomCurrencies Formatting.addCustomCurrencies} / {@link module:sap/base/i18n/Formatting.setCustomCurrencies Formatting.setCustomCurrencies}:\n   * <ul>\n   * <li><code>currency</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.setABAPDateFormat Formatting.setABAPDateFormat} (all parameters listed below):\n   * <ul>\n   * <li><code>ABAPDateFormat</code></li>\n   * <li><code>\"dateFormats-short\"</code></li>\n   * <li><code>\"dateFormats-medium\"</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.setABAPTimeFormat Formatting.setABAPTimeFormat} (all parameters listed below):\n   * <ul>\n   * <li><code>ABAPTimeFormat</code></li>\n   * <li><code>\"timeFormats-short\"</code></li>\n   * <li><code>\"timeFormats-medium\"</code></li>\n   * <li><code>\"dayPeriods-format-abbreviated\"</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.setABAPNumberFormat Formatting.setABAPNumberFormat} (all parameters listed below):\n   * <ul>\n   * <li><code>ABAPNumberFormat</code></li>\n   * <li><code>\"symbols-latn-group\"</code></li>\n   * <li><code>\"symbols-latn-decimal\"</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.setDatePattern Formatting.setDatePattern} (one of the parameters listed below):\n   * <ul>\n   * <li><code>\"dateFormats-short\"</code></li>\n   * <li><code>\"dateFormats-medium\"</code></li>\n   * <li><code>\"dateFormats-long\"</code></li>\n   * <li><code>\"dateFormats-full\"</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.setTimePattern Formatting.setTimePattern} (one of the parameters listed below):\n   * <ul>\n   * <li><code>\"timeFormats-short\"</code></li>\n   * <li><code>\"timeFormats-medium\"</code></li>\n   * <li><code>\"timeFormats-long\"</code></li>\n   * <li><code>\"timeFormats-full\"</code></li>\n   * </ul>\n   * </li>\n   * <li>{@link module:sap/base/i18n/Formatting.setNumberSymbol Formatting.setNumberSymbol} (one of the parameters listed below):\n   * <ul>\n   * <li><code>\"symbols-latn-group\"</code></li>\n   * <li><code>\"symbols-latn-decimal\"</code></li>\n   * <li><code>\"symbols-latn-plusSign\"</code></li>\n   * <li><code>\"symbols-latn-minusSign\"</code></li>\n   * </ul>\n   * </li>\n   * </ul>\n   *\n   * @typedef {object} module:sap/base/i18n/Formatting$ChangeEvent\n   * @property {string} [languageTag] The formatting language tag.\n   * @property {string} [ABAPDateFormat] The ABAP date format.\n   * @property {string} [ABAPTimeFormat] The ABAP time format.\n   * @property {string} [ABAPNumberFormat] The ABAP number format.\n   * @property {object[]} [legacyDateCalendarCustomizing] The legacy date calendar customizing.\n   * @property {object} [calendarWeekNumbering] The calendar week numbering.\n   * @property {object} [calendarType] The calendar type.\n   * @property {string} [\"dateFormats-short\"] The short date format.\n   * @property {string} [\"dateFormats-medium\"] The medium date format.\n   * @property {string} [\"dateFormats-long\"] The long date format.\n   * @property {string} [\"dateFormats-full\"] The full date format.\n   * @property {string} [\"timeFormats-short\"] The short time format.\n   * @property {string} [\"timeFormats-medium\"] The medium time format.\n   * @property {string} [\"timeFormats-long\"] The long time format.\n   * @property {string} [\"timeFormats-full\"] The full time format.\n   * @property {string} [\"symbols-latn-group\"] The latin symbols group.\n   * @property {string} [\"symbols-latn-decimal\"] The latin symbols decimal.\n   * @property {string} [\"symbols-latn-plusSign\"] The latin symbols plusSign.\n   * @property {string} [\"symbols-latn-minusSign\"] The latin symbols minusSign.\n   * @property {Object<string,string>} [currency] The currency.\n   * @property {string[]} [\"dayPeriods-format-abbreviated\"] The abbreviated day periods format.\n   * @public\n   * @since 1.120\n   */\n\n  /**\n   * Attaches the <code>fnFunction</code> event handler to the {@link #event:change change} event\n   * of <code>module:sap/base/i18n/Formatting</code>.\n   *\n   * @param {function(module:sap/base/i18n/Formatting$ChangeEvent)} fnFunction\n   *   The function to be called when the event occurs\n   * @public\n   * @since 1.120\n   */\n  attachChange(fnFunction) {\n    oEventing.attachEvent(\"change\", fnFunction);\n  },\n  /**\n   * Detaches event handler <code>fnFunction</code> from the {@link #event:change change} event of\n   * this <code>module:sap/base/i18n/Formatting</code>.\n   *\n   * @param {function(module:sap/base/i18n/Formatting$ChangeEvent)} fnFunction Function to be called when the event occurs\n   * @public\n   * @since 1.120\n   */\n  detachChange(fnFunction) {\n    oEventing.detachEvent(\"change\", fnFunction);\n  },\n  /**\n   * Returns the LanguageTag to be used for formatting.\n   *\n   * If no such LanguageTag has been defined, this method falls back to the language,\n   * see {@link module:sap/base/i18n/Localization.getLanguage Localization.getLanguage()}.\n   *\n   * If any user preferences for date, time or number formatting have been set,\n   * and if no format LanguageTag has been specified, then a special private use subtag\n   * is added to the LanguageTag, indicating to the framework that these user preferences\n   * should be applied.\n   *\n   * @returns {module:sap/base/i18n/LanguageTag} the format LanguageTag\n   * @public\n   * @since 1.120\n   */\n  getLanguageTag() {\n    function fallback() {\n      let oLanguageTag = new LanguageTag(Localization.getLanguage());\n      // if any user settings have been defined, add the private use subtag \"sapufmt\"\n      if (!isEmptyObject(mSettings) || Formatting.getCalendarWeekNumbering() !== CalendarWeekNumbering.Default) {\n        let l = oLanguageTag.toString();\n        if (l.indexOf(\"-x-\") < 0) {\n          l += \"-x-sapufmt\";\n        } else if (l.indexOf(\"-sapufmt\") <= l.indexOf(\"-x-\")) {\n          l += \"-sapufmt\";\n        }\n        oLanguageTag = new LanguageTag(l);\n      }\n      return oLanguageTag;\n    }\n    return oWritableConfig.get({\n      name: \"sapUiFormatLocale\",\n      type: function (sFormatLocale) {\n        return new LanguageTag(sFormatLocale);\n      },\n      defaultValue: fallback,\n      external: true\n    });\n  },\n  /**\n   * Sets a new language tag to be used from now on for retrieving language\n   * specific formatters. Modifying this setting does not have an impact on\n   * the retrieval of translated texts!\n   *\n   * Can either be set to a concrete value (a BCP47 or Java locale compliant\n   * language tag) or to <code>null</code>. When set to <code>null</code> (default\n   * value) then locale specific formatters are retrieved for the current language.\n   *\n   * After changing the format locale, the framework tries to update localization\n   * specific parts of the UI. See the documentation of\n   * {@link module:sap/base/i18n/Localization.setLanguage Localization.setLanguage()}\n   * for details and restrictions.\n   *\n   * <b>Note</b>: When a language tag is set, it has higher priority than a number,\n   * date or time format defined with a call to <code>setABAPNumberFormat</code>,\n   * <code>setABAPDateFormat</code> or <code>setABAPTimeFormat</code>.\n   *\n   * <b>Note</b>: See documentation of\n   * {@link module:sap/base/i18n/Localization.setLanguage Localization.setLanguage()}\n   * for restrictions.\n   *\n   * @param {string|module:sap/base/i18n/LanguageTag|null} vLanguageTag the new BCP47 compliant language tag;\n   *   case doesn't matter and underscores can be used instead of dashes to separate\n   *   components (compatibility with Java Locale IDs)\n   * @throws {TypeError} When <code>sLanguageTag</code> is given, but is not a valid BCP47 language\n   *   tag or Java locale identifier\n   * @public\n   * @since 1.120\n   */\n  setLanguageTag(vLanguageTag) {\n    const oLanguageTag = createLanguageTag(vLanguageTag);\n    check(vLanguageTag == null || oLanguageTag, \"vLanguageTag must be a BCP47 language tag or Java Locale id or null\");\n    const oOldLanguageTag = Formatting.getLanguageTag();\n    oWritableConfig.set(\"sapUiFormatLocale\", oLanguageTag?.toString());\n    const oCurrentLanguageTag = Formatting.getLanguageTag();\n    if (oOldLanguageTag.toString() !== oCurrentLanguageTag.toString()) {\n      const bFireEvent = !mChanges;\n      mChanges ??= {};\n      mChanges.languageTag = oCurrentLanguageTag.toString();\n      if (bFireEvent) {\n        fireChange();\n      }\n    }\n  },\n  /**\n   * @deprecated As of Version 1.120\n   */\n  _set: _set,\n  /**\n   * Retrieves the custom units.\n   * These custom units are set by {@link #setCustomUnits} and {@link #addCustomUnits}\n   * @returns {object} custom units object\n   * @see {@link module:sap/base/i18n/Formatting.setCustomUnits}\n   * @see {@link module:sap/base/i18n/Formatting.addCustomUnits}\n   * @private\n   * @since 1.116.0\n   */\n  getCustomUnits() {\n    return mSettings[\"units\"]?.[\"short\"];\n  },\n  /**\n   * Sets custom units which can be used to do Unit Formatting.\n   *\n   * The custom unit object consists of:\n   * * a custom unit key which can then be referenced to use this unit.\n   * * <code>displayName</code> which represents the name of the unit.\n   * * <code>unitPattern-count-&lt;pluralName&gt;</code> which represents the plural category of the locale for the given value.\n   * The plural category is defined within the locale, e.g. in the 'en' locale:\n   * <code>unitPattern-count-one</code> for <code>1</code>,\n   * <code>unitPattern-count-zero</code> for <code>0</code>,\n   * <code>unitPattern-count-other</code> for all the res\n   * To retrieve all plural categories defined for a locale use <code>sap.ui.core.LocaleData.prototype.getPluralCategories</code>.\n   *\n   * A Sample custom unit definition could look like this:\n   * <code>\n   * {\n   *  \"BAG\": {\n   *      \"displayName\": \"Bag\",\n   *\t\t\"unitPattern-count-one\": \"{0} bag\",\n   *\t\t\"unitPattern-count-other\": \"{0} bags\"\n   *  }\n   * }\n   * </code>\n   * In the above snippet:\n   * * <code>\"BAG\"</code> represent the unit key which is used to reference it.\n   * * <code>\"unitPattern-count-one\"</code> represent the unit pattern for the form \"one\", e.g. the number <code>1</code> in the 'en' locale.\n   * * <code>\"unitPattern-count-other\"</code> represent the unit pattern for all other numbers which do not\n   *   match the plural forms of the previous patterns.\n   * * In the patterns <code>{0}</code> is replaced by the number\n   *\n   * E.g. In locale 'en' value <code>1</code> would result in <code>1 Bag</code>, while <code>2</code> would result in <code>2 Bags</code>\n   * @param {object} mUnits custom unit object which replaces the current custom unit definition. Call with <code>null</code> to delete custom units.\n   * @private\n   * @since 1.116.0\n   */\n  setCustomUnits(mUnits) {\n    // add custom units, or remove the existing ones if none are given\n    let mUnitsshort = null;\n    if (mUnits) {\n      mUnitsshort = {\n        \"short\": mUnits\n      };\n    }\n    _set(\"units\", mUnitsshort);\n  },\n  /**\n   * Adds custom units.\n   * Similar to {@link #setCustomUnits} but instead of setting the custom units, it will add additional ones.\n   * @param {object} mUnits custom unit object which replaces the current custom unit definition. Call with <code>null</code> to delete custom units.\n   * @see {@link module:sap/base/i18n/Formatting.setCustomUnits}\n   * @private\n   * @since 1.116.0\n   */\n  addCustomUnits(mUnits) {\n    // add custom units, or remove the existing ones if none are given\n    const mExistingUnits = Formatting.getCustomUnits();\n    if (mExistingUnits) {\n      mUnits = extend({}, mExistingUnits, mUnits);\n    }\n    Formatting.setCustomUnits(mUnits);\n  },\n  /**\n   * Sets custom unit mappings.\n   * Unit mappings contain key value pairs (both strings)\n   * * {string} key: a new entry which maps to an existing unit key\n   * * {string} value: an existing unit key\n   *\n   * Example:\n   * <code>\n   * {\n   *  \"my\": \"my-custom-unit\",\n   *  \"cm\": \"length-centimeter\"\n   * }\n   * </code>\n   * Note: It is possible to create multiple entries per unit key.\n   * Call with <code>null</code> to delete unit mappings.\n   * @param {object} mUnitMappings unit mappings\n   * @private\n   * @since 1.116.0\n   */\n  setUnitMappings(mUnitMappings) {\n    _set(\"unitMappings\", mUnitMappings);\n  },\n  /**\n   * Adds unit mappings.\n   * Similar to {@link #setUnitMappings} but instead of setting the unit mappings, it will add additional ones.\n   * @param {object} mUnitMappings unit mappings\n   * @see {@link module:sap/base/i18n/Formatting.setUnitMappings}\n   * @private\n   * @since 1.116.0\n   */\n  addUnitMappings(mUnitMappings) {\n    // add custom units, or remove the existing ones if none are given\n    const mExistingUnits = Formatting.getUnitMappings();\n    if (mExistingUnits) {\n      mUnitMappings = extend({}, mExistingUnits, mUnitMappings);\n    }\n    Formatting.setUnitMappings(mUnitMappings);\n  },\n  /**\n   * Retrieves the unit mappings.\n   * These unit mappings are set by {@link #setUnitMappings} and {@link #addUnitMappings}\n   * @private\n   * @returns {object} unit mapping object\n   * @see {@link module:sap/base/i18n/Formatting.setUnitMappings}\n   * @see {@link module:sap/base/i18n/Formatting.addUnitMappings}\n   * @since 1.116.0\n   */\n  getUnitMappings() {\n    return mSettings[\"unitMappings\"];\n  },\n  /**\n   * Returns the currently set date pattern or undefined if no pattern has been defined.\n   * @param {\"short\"|\"medium\"|\"long\"|\"full\"} sStyle The date style (short, medium, long or full)\n   * @returns {string} The resulting date pattern\n   * @public\n   * @since 1.120\n   */\n  getDatePattern(sStyle) {\n    assert(sStyle == \"short\" || sStyle == \"medium\" || sStyle == \"long\" || sStyle == \"full\", \"sStyle must be short, medium, long or full\");\n    return mSettings[\"dateFormats-\" + sStyle];\n  },\n  /**\n   * Defines the preferred format pattern for the given date format style.\n   *\n   * Calling this method with a null or undefined pattern removes a previously set pattern.\n   *\n   * If a pattern is defined, it will be preferred over patterns derived from the current locale.\n   *\n   * See class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n   *\n   * After changing the date pattern, the framework tries to update localization\n   * specific parts of the UI. See the documentation of {@link module:sap/base/i18n/Localization.setLanguage Localization.setLanguage()}\n   * for details and restrictions.\n   *\n   * @param {\"short\"|\"medium\"|\"long\"|\"full\"} sStyle must be one of short, medium, long or full.\n   * @param {string} sPattern the format pattern to be used in LDML syntax.\n   * @public\n   * @since 1.120\n   */\n  setDatePattern(sStyle, sPattern) {\n    check(sStyle == \"short\" || sStyle == \"medium\" || sStyle == \"long\" || sStyle == \"full\", \"sStyle must be short, medium, long or full\");\n    _set(\"dateFormats-\" + sStyle, sPattern);\n  },\n  /**\n   * Returns the currently set time pattern or undefined if no pattern has been defined.\n   * @param {\"short\"|\"medium\"|\"long\"|\"full\"} sStyle The time style (short, medium, long or full)\n   * @returns {string} The resulting time pattern\n   * @public\n   * @since 1.120\n   */\n  getTimePattern(sStyle) {\n    assert(sStyle == \"short\" || sStyle == \"medium\" || sStyle == \"long\" || sStyle == \"full\", \"sStyle must be short, medium, long or full\");\n    return mSettings[\"timeFormats-\" + sStyle];\n  },\n  /**\n   * Defines the preferred format pattern for the given time format style.\n   *\n   * Calling this method with a null or undefined pattern removes a previously set pattern.\n   *\n   * If a pattern is defined, it will be preferred over patterns derived from the current locale.\n   *\n   * See class {@link sap.ui.core.format.DateFormat} for details about the pattern syntax.\n   *\n   * After changing the time pattern, the framework tries to update localization\n   * specific parts of the UI. See the documentation of\n   * {@link module:sap/base/i18n/Localization.setLanguage Localization.setLanguage()}\n   * for details and restrictions.\n   *\n   * @param {\"short\"|\"medium\"|\"long\"|\"full\"} sStyle must be one of short, medium, long or full.\n   * @param {string} sPattern the format pattern to be used in LDML syntax.\n   * @public\n   * @since 1.120\n   */\n  setTimePattern(sStyle, sPattern) {\n    check(sStyle == \"short\" || sStyle == \"medium\" || sStyle == \"long\" || sStyle == \"full\", \"sStyle must be short, medium, long or full\");\n    _set(\"timeFormats-\" + sStyle, sPattern);\n  },\n  /**\n   * Returns the currently set number symbol of the given type or undefined if no symbol has been defined.\n   *\n   * @param {\"group\"|\"decimal\"|\"plusSign\"|\"minusSign\"} sType the type of symbol\n   * @returns {string} A non-numerical symbol used as part of a number for the given type,\n   *   e.g. for locale de_DE:\n   *     <ul>\n   *       <li>\"group\": \".\" (grouping separator)</li>\n   *       <li>\"decimal\": \",\" (decimal separator)</li>\n   *       <li>\"plusSign\": \"+\" (plus sign)</li>\n   *       <li>\"minusSign\": \"-\" (minus sign)</li>\n   *     </ul>\n   * @public\n   * @since 1.120\n   */\n  getNumberSymbol(sType) {\n    assert([\"group\", \"decimal\", \"plusSign\", \"minusSign\"].includes(sType), \"sType must be decimal, group, plusSign or minusSign\");\n    return mSettings[\"symbols-latn-\" + sType];\n  },\n  /**\n   * Defines the string to be used for the given number symbol.\n   *\n   * Calling this method with a null or undefined symbol removes a previously set symbol string.\n   * Note that an empty string is explicitly allowed.\n   *\n   * If a symbol is defined, it will be preferred over symbols derived from the current locale.\n   *\n   * See class {@link sap.ui.core.format.NumberFormat} for details about the symbols.\n   *\n   * After changing the number symbol, the framework tries to update localization\n   * specific parts of the UI. See the documentation of\n   * {@link module:sap/base/i18n/Localization.setLanguage Localization.setLanguage()}\n   * for details and restrictions.\n   *\n   * @param {\"group\"|\"decimal\"|\"plusSign\"|\"minusSign\"} sType the type of symbol\n   * @param {string} sSymbol will be used to represent the given symbol type\n   * @public\n   * @since 1.120\n   */\n  setNumberSymbol(sType, sSymbol) {\n    check([\"group\", \"decimal\", \"plusSign\", \"minusSign\"].includes(sType), \"sType must be decimal, group, plusSign or minusSign\");\n    _set(\"symbols-latn-\" + sType, sSymbol);\n  },\n  /**\n   * Retrieves the custom currencies.\n   * E.g.\n   * <code>\n   * {\n   *  \"KWD\": {\"digits\": 3},\n   *  \"TND\" : {\"digits\": 3}\n   * }\n   * </code>\n   * @returns {object} the mapping between custom currencies and its digits\n   * @public\n   * @since 1.120\n   * @see {@link module:sap/base/i18n/Formatting.setCustomCurrencies}\n   * @see {@link module:sap/base/i18n/Formatting.addCustomCurrencies}\n   */\n  getCustomCurrencies() {\n    return mSettings[\"currency\"];\n  },\n  /**\n   * Sets custom currencies and replaces existing entries.\n   *\n   * There is a special currency code named \"DEFAULT\" that is optional.\n   * In case it is set it will be used for all currencies not contained\n   * in the list, otherwise currency digits as defined by the CLDR will\n   * be used as a fallback.\n   *\n   * Example:\n   * To use CLDR, but override single currencies\n   * <code>\n   * {\n   *  \"KWD\": {\"digits\": 3},\n   *  \"TND\" : {\"digits\": 3}\n   * }\n   * </code>\n   *\n   * To replace the CLDR currency digits completely\n   * <code>\n   * {\n   *   \"DEFAULT\": {\"digits\": 2},\n   *   \"ADP\": {\"digits\": 0},\n   *   ...\n   *   \"XPF\": {\"digits\": 0}\n   * }\n   * </code>\n   *\n   * Note: To unset the custom currencies: call with <code>undefined</code>\n   * Custom currencies must not only consist of digits but contain at least one non-digit character, e.g. \"a\",\n   * so that the measure part can be distinguished from the number part.\n   * @public\n   * @since 1.120\n   * @param {object} mCurrencies currency map which is set\n   * @see {@link module:sap/base/i18n/Formatting.addCustomCurrencies}\n   */\n  setCustomCurrencies(mCurrencies) {\n    check(typeof mCurrencies === \"object\" || mCurrencies == null, \"mCurrencyDigits must be an object\");\n    Object.keys(mCurrencies || {}).forEach(function (sCurrencyDigit) {\n      check(typeof sCurrencyDigit === \"string\");\n      check(typeof mCurrencies[sCurrencyDigit] === \"object\");\n    });\n    _set(\"currency\", mCurrencies);\n  },\n  /**\n   * Adds custom currencies to the existing entries.\n   * E.g.\n   * <code>\n   * {\n   *  \"KWD\": {\"digits\": 3},\n   *  \"TND\" : {\"digits\": 3}\n   * }\n   * </code>\n   *\n   * @public\n   * @since 1.120\n   * @param {object} mCurrencies adds to the currency map\n   * @see {@link module:sap/base/i18n/Formatting.setCustomCurrencies}\n   */\n  addCustomCurrencies(mCurrencies) {\n    // add custom units, or remove the existing ones if none are given\n    const mExistingCurrencies = Formatting.getCustomCurrencies();\n    if (mExistingCurrencies) {\n      mCurrencies = extend({}, mExistingCurrencies, mCurrencies);\n    }\n    Formatting.setCustomCurrencies(mCurrencies);\n  },\n  _setDayPeriods(sWidth, aTexts) {\n    assert(sWidth == \"narrow\" || sWidth == \"abbreviated\" || sWidth == \"wide\", \"sWidth must be narrow, abbreviated or wide\");\n    _set(\"dayPeriods-format-\" + sWidth, aTexts);\n  },\n  /**\n   * Returns the currently set ABAP date format (its id) or undefined if none has been set.\n   *\n   * @returns {\"1\"|\"2\"|\"3\"|\"4\"|\"5\"|\"6\"|\"7\"|\"8\"|\"9\"|\"A\"|\"B\"|\"C\"|undefined} ID of the ABAP date format,\n   *   if not set or set to <code>\"\"</code>, <code>undefined</code> will be returned\n   * @public\n   * @since 1.120\n   */\n  getABAPDateFormat() {\n    const sABAPDateFormat = oWritableConfig.get({\n      name: \"sapUiABAPDateFormat\",\n      type: BaseConfig.Type.String,\n      /**\n       * @deprecated As of Version 1.120\n       */\n      defaultValue: oWritableConfig.get({\n        name: \"sapUiLegacyDateFormat\",\n        type: BaseConfig.Type.String,\n        external: true\n      }),\n      external: true\n    });\n    return sABAPDateFormat ? sABAPDateFormat.toUpperCase() : undefined;\n  },\n  /**\n   * Allows to specify one of the ABAP date formats.\n   *\n   * This method modifies the date patterns for 'short' and 'medium' style with the corresponding ABAP\n   * format. When called with a null or undefined format id, any previously applied format will be removed.\n   *\n   * After changing the date format, the framework tries to update localization\n   * specific parts of the UI. See the documentation of\n   * {@link module:sap/base/i18n/Localization.setLanguage Localization.setLanguage()}\n   * for details and restrictions.\n   *\n   * @param {\"\"|\"1\"|\"2\"|\"3\"|\"4\"|\"5\"|\"6\"|\"7\"|\"8\"|\"9\"|\"A\"|\"B\"|\"C\"} [sFormatId=\"\"] ID of the ABAP date format,\n   *   <code>\"\"</code> will reset the date patterns for 'short' and 'medium' style to the\n   *   locale-specific ones.\n   * @public\n   * @since 1.120\n   */\n  setABAPDateFormat(sFormatId) {\n    sFormatId = sFormatId ? String(sFormatId).toUpperCase() : \"\";\n    check(M_ABAP_DATE_FORMAT_PATTERN.hasOwnProperty(sFormatId), \"sFormatId must be one of ['1','2','3','4','5','6','7','8','9','A','B','C'] or empty\");\n    const bFireEvent = !mChanges;\n    const sOldFormat = Formatting.getABAPDateFormat();\n    if (sOldFormat !== sFormatId) {\n      mChanges ??= {};\n      oWritableConfig.set(\"sapUiABAPDateFormat\", sFormatId);\n      mChanges.ABAPDateFormat = sFormatId;\n      Formatting.setDatePattern(\"short\", M_ABAP_DATE_FORMAT_PATTERN[sFormatId].pattern);\n      Formatting.setDatePattern(\"medium\", M_ABAP_DATE_FORMAT_PATTERN[sFormatId].pattern);\n      if (bFireEvent) {\n        fireChange();\n      }\n    }\n  },\n  /**\n   * Returns the currently set ABAP time format (its id) or undefined if none has been set.\n   *\n   * @returns {\"0\"|\"1\"|\"2\"|\"3\"|\"4\"|undefined} ID of the ABAP date format,\n   *   if not set or set to <code>\"\"</code>, <code>undefined</code> will be returned\n   * @public\n   * @since 1.120\n   */\n  getABAPTimeFormat() {\n    const sABAPTimeFormat = oWritableConfig.get({\n      name: \"sapUiABAPTimeFormat\",\n      type: BaseConfig.Type.String,\n      /**\n       * @deprecated As of Version 1.120\n       */\n      defaultValue: oWritableConfig.get({\n        name: \"sapUiLegacyTimeFormat\",\n        type: BaseConfig.Type.String,\n        external: true\n      }),\n      external: true\n    });\n    return sABAPTimeFormat ? sABAPTimeFormat.toUpperCase() : undefined;\n  },\n  /**\n   * Allows to specify one of the ABAP time formats.\n   *\n   * This method sets the time patterns for 'short' and 'medium' style to the corresponding ABAP\n   * formats and sets the day period texts to \"AM\"/\"PM\" or \"am\"/\"pm\" respectively. When called\n   * with a null or undefined format id, any previously applied format will be removed.\n   *\n   * After changing the time format, the framework tries to update localization\n   * specific parts of the UI. See the documentation of\n   * {@link module:sap/base/i18n/Localization.setLanguage Localization.setLanguage()}\n   * for details and restrictions.\n   *\n   * @param {\"\"|\"0\"|\"1\"|\"2\"|\"3\"|\"4\"} [sFormatId=\"\"] ID of the ABAP time format,\n   *   <code>\"\"</code> will reset the time patterns for 'short' and 'medium' style and the day\n   *   period texts to the locale-specific ones.\n   * @public\n   * @since 1.120\n   */\n  setABAPTimeFormat(sFormatId) {\n    sFormatId = sFormatId || \"\";\n    check(M_ABAP_TIME_FORMAT_PATTERN.hasOwnProperty(sFormatId), \"sFormatId must be one of ['0','1','2','3','4'] or empty\");\n    const bFireEvent = !mChanges;\n    const sOldFormat = Formatting.getABAPTimeFormat();\n    if (sOldFormat !== sFormatId) {\n      mChanges ??= {};\n      oWritableConfig.set(\"sapUiABAPTimeFormat\", sFormatId);\n      mChanges.ABAPTimeFormat = sFormatId;\n      Formatting.setTimePattern(\"short\", M_ABAP_TIME_FORMAT_PATTERN[sFormatId][\"short\"]);\n      Formatting.setTimePattern(\"medium\", M_ABAP_TIME_FORMAT_PATTERN[sFormatId][\"medium\"]);\n      Formatting._setDayPeriods(\"abbreviated\", M_ABAP_TIME_FORMAT_PATTERN[sFormatId].dayPeriods);\n      if (bFireEvent) {\n        fireChange();\n      }\n    }\n  },\n  /**\n   * Returns the currently set ABAP number format (its id) or undefined if none has been set.\n   *\n   * @returns {\" \"|\"X\"|\"Y\"|undefined} ID of the ABAP number format,\n   *   if not set or set to <code>\"\"</code>, <code>undefined</code> will be returned\n   * @public\n   * @since 1.120\n   */\n  getABAPNumberFormat() {\n    const sABAPNumberFormat = oWritableConfig.get({\n      name: \"sapUiABAPNumberFormat\",\n      type: BaseConfig.Type.String,\n      /**\n       * @deprecated As of Version 1.120\n       */\n      defaultValue: oWritableConfig.get({\n        name: \"sapUiLegacyNumberFormat\",\n        type: BaseConfig.Type.String,\n        external: true\n      }),\n      external: true\n    });\n    return sABAPNumberFormat ? sABAPNumberFormat.toUpperCase() : undefined;\n  },\n  /**\n   * Allows to specify one of the ABAP number format.\n   *\n   * This method will modify the 'group' and 'decimal' symbols. When called with a null\n   * or undefined format id, any previously applied format will be removed.\n   *\n   * After changing the number format, the framework tries to update localization\n   * specific parts of the UI. See the documentation of\n   * {@link module:sap/base/i18n/Localization.setLanguage Localization.setLanguage()}\n   * for details and restrictions.\n   *\n   * @param {\"\"|\" \"|\"X\"|\"Y\"} [sFormatId=\"\"] ID of the ABAP number format set,\n   *   <code>\"\"</code> will reset the 'group' and 'decimal' symbols to the locale-specific\n   *   ones.\n   * @public\n   * @since 1.120\n   */\n  setABAPNumberFormat(sFormatId) {\n    sFormatId = sFormatId ? sFormatId.toUpperCase() : \"\";\n    check(M_ABAP_NUMBER_FORMAT_SYMBOLS.hasOwnProperty(sFormatId), \"sFormatId must be one of [' ','X','Y'] or empty\");\n    const bFireEvent = !mChanges;\n    const sOldFormat = Formatting.getABAPNumberFormat();\n    if (sOldFormat !== sFormatId) {\n      mChanges ??= {};\n      oWritableConfig.set(\"sapUiABAPNumberFormat\", sFormatId);\n      mChanges.ABAPNumberFormat = sFormatId;\n      Formatting.setNumberSymbol(\"group\", M_ABAP_NUMBER_FORMAT_SYMBOLS[sFormatId].groupingSeparator);\n      Formatting.setNumberSymbol(\"decimal\", M_ABAP_NUMBER_FORMAT_SYMBOLS[sFormatId].decimalSeparator);\n      if (bFireEvent) {\n        fireChange();\n      }\n    }\n  },\n  /**\n   *\n   * Customizing data for the support of Islamic calendar.\n   * Represents one row of data from Table TISLCAL.\n   *\n   * @typedef {object} module:sap/base/i18n/Formatting.CustomIslamicCalendarData\n   *\n   * @property {\"A\"|\"B\"} dateFormat The date format. Column DATFM in TISLCAL.\n   * @property {string} islamicMonthStart The Islamic date in format: 'yyyyMMdd'. Column ISLMONTHSTART in TISLCAL.\n   * @property {string} gregDate The corresponding Gregorian date format: 'yyyyMMdd'. Column GREGDATE in TISLCAL.\n   *\n   * @public\n   */\n\n  /**\n   * Allows to specify the customizing data for Islamic calendar support\n   *\n   * See: {@link module:sap/base/i18n/Formatting.CustomIslamicCalendarData}\n   *\n   * @param {module:sap/base/i18n/Formatting.CustomIslamicCalendarData[]} aCustomCalendarData Contains the customizing data for the support of Islamic calendar.\n   * One JSON object in the array represents one row of data from Table TISLCAL\n   * @public\n   * @since 1.120\n   */\n  setCustomIslamicCalendarData(aCustomCalendarData) {\n    check(Array.isArray(aCustomCalendarData), \"aCustomCalendarData must be an Array\");\n    const bFireEvent = !mChanges;\n    mChanges ??= {};\n    aCustomIslamicCalendarData = mChanges.customIslamicCalendarData = aCustomCalendarData.slice();\n    if (bFireEvent) {\n      fireChange();\n    }\n  },\n  /**\n   * Returns the currently set customizing data for Islamic calendar support.\n   *\n   * See: {@link module:sap/base/i18n/Formatting.CustomIslamicCalendarData}\n   *\n   * @returns {module:sap/base/i18n/Formatting.CustomIslamicCalendarData[]|undefined} Returns an array that contains the customizing data. Each element in the array has properties: dateFormat, islamicMonthStart, gregDate. For details, please see {@link #.setCustomIslamicCalendarData}\n   * @public\n   * @since 1.120\n   */\n  getCustomIslamicCalendarData() {\n    return aCustomIslamicCalendarData?.slice() ?? undefined;\n  },\n  /**\n   * Define whether the NumberFormatter shall always place the currency code after the numeric value, with\n   * the only exception of right-to-left locales, where the currency code shall be placed before the numeric value.\n   * Default configuration setting is <code>true</code>.\n   *\n   * When set to <code>false</code> the placement of the currency code is done dynamically, depending on the\n   * configured locale using data provided by the Unicode Common Locale Data Repository (CLDR).\n   *\n   * Each currency instance ({@link sap.ui.core.format.NumberFormat.getCurrencyInstance}) will be created\n   * with this setting unless overwritten on instance level.\n   *\n   * @param {boolean} bTrailingCurrencyCode Whether currency codes shall always be placed after the numeric value\n   * @public\n   * @since 1.120\n   */\n  setTrailingCurrencyCode(bTrailingCurrencyCode) {\n    check(typeof bTrailingCurrencyCode === \"boolean\", \"bTrailingCurrencyCode must be a boolean\");\n    oWritableConfig.set(\"sapUiTrailingCurrencyCode\", bTrailingCurrencyCode);\n  },\n  /**\n   * Returns current trailingCurrencyCode configuration for new NumberFormatter instances\n   *\n   * @return {boolean} Whether currency codes shall always be placed after the numeric value\n   * @public\n   * @since 1.120\n   */\n  getTrailingCurrencyCode() {\n    return oWritableConfig.get({\n      name: \"sapUiTrailingCurrencyCode\",\n      type: BaseConfig.Type.Boolean,\n      defaultValue: true,\n      external: true\n    });\n  },\n  /**\n   * Returns a live object with the current settings\n   * TODO this method is part of the facade to be accessible from LocaleData, but it shouldn't be\n   *\n   * @returns {mSettings} The custom LocaleData settings object\n   * @private\n   * @ui5-restricted sap.ui.core\n   * @since 1.116.0\n   */\n  getCustomLocaleData() {\n    return mSettings;\n  },\n  /**\n   * Returns the calendar week numbering algorithm used to determine the first day of the week\n   * and the first calendar week of the year, see {@link module:sap/base/i18n/data/CalendarWeekNumbering}.\n   *\n   * @returns {module:sap/base/i18n/date/CalendarWeekNumbering} The calendar week numbering algorithm\n   *\n   * @public\n   * @since 1.120\n   */\n  getCalendarWeekNumbering() {\n    let oCalendarWeekNumbering = CalendarWeekNumbering.Default;\n    try {\n      oCalendarWeekNumbering = oWritableConfig.get({\n        name: \"sapUiCalendarWeekNumbering\",\n        type: CalendarWeekNumbering,\n        defaultValue: CalendarWeekNumbering.Default,\n        external: true\n      });\n    } catch (err) {\n      //nothing to do, return default;\n    }\n    return oCalendarWeekNumbering;\n  },\n  /**\n   * Sets the calendar week numbering algorithm which is used to determine the first day of the week\n   * and the first calendar week of the year, see {@link module:sap/base/i18n/date/CalendarWeekNumbering}.\n   *\n   * @param {module:sap/base/i18n/date/CalendarWeekNumbering} sCalendarWeekNumbering\n   *   The calendar week numbering algorithm\n   * @throws {TypeError}\n   *   If <code>sCalendarWeekNumbering</code> is not a valid calendar week numbering algorithm,\n   *   defined in {@link module:sap/base/i18n/date/CalendarWeekNumbering}\n   *\n   * @public\n   * @since 1.120\n   */\n  setCalendarWeekNumbering(sCalendarWeekNumbering) {\n    BaseConfig._.checkEnum(CalendarWeekNumbering, sCalendarWeekNumbering, \"calendarWeekNumbering\");\n    const sCurrentWeekNumbering = oWritableConfig.get({\n      name: \"sapUiCalendarWeekNumbering\",\n      type: CalendarWeekNumbering,\n      defaultValue: CalendarWeekNumbering.Default,\n      external: true\n    });\n    if (sCurrentWeekNumbering !== sCalendarWeekNumbering) {\n      const bFireEvent = !mChanges;\n      mChanges ??= {};\n      oWritableConfig.set(\"sapUiCalendarWeekNumbering\", sCalendarWeekNumbering);\n      mChanges.calendarWeekNumbering = sCalendarWeekNumbering;\n      if (bFireEvent) {\n        fireChange();\n      }\n    }\n  },\n  /**\n   * Returns the calendar type which is being used in locale dependent functionality.\n   *\n   * When it's explicitly set by calling <code>setCalendarType</code>, the set calendar type is returned.\n   * Otherwise, the calendar type is determined by checking the format settings and current locale.\n   *\n   * @returns {module:sap/base/i18n/date/CalendarType} the current calendar type, e.g. <code>Gregorian</code>\n   * @public\n   * @since 1.120\n   */\n  getCalendarType() {\n    let sName,\n      sCalendarType = oWritableConfig.get({\n        name: \"sapUiCalendarType\",\n        type: BaseConfig.Type.String,\n        external: true\n      });\n    sCalendarType ??= null;\n    if (sCalendarType) {\n      for (sName in CalendarType) {\n        if (sName.toLowerCase() === sCalendarType.toLowerCase()) {\n          return sName;\n        }\n      }\n      Log.warning(\"Parameter 'calendarType' is set to \" + sCalendarType + \" which isn't a valid value and therefore ignored. The calendar type is determined from format setting and current locale\");\n    }\n    const sABAPDateFormat = Formatting.getABAPDateFormat();\n    switch (sABAPDateFormat) {\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n        return CalendarType.Gregorian;\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        return CalendarType.Japanese;\n      case \"A\":\n      case \"B\":\n        return CalendarType.Islamic;\n      case \"C\":\n        return CalendarType.Persian;\n      default:\n        return Localization.getPreferredCalendarType();\n    }\n  },\n  /**\n   * Sets the new calendar type to be used from now on in locale dependent functionality (for example,\n   * formatting, translation texts, etc.).\n   *\n   * @param {module:sap/base/i18n/date/CalendarType|null} sCalendarType the new calendar type. Set it with null to clear the calendar type\n   *   and the calendar type is calculated based on the format settings and current locale.\n   * @public\n   * @since 1.120\n   */\n  setCalendarType(sCalendarType) {\n    const sOldCalendarType = Formatting.getCalendarType();\n    oWritableConfig.set(\"sapUiCalendarType\", sCalendarType);\n    const sCurrentCalendarType = Formatting.getCalendarType();\n    if (sOldCalendarType !== sCurrentCalendarType) {\n      const bFireEvent = !mChanges;\n      mChanges ??= {};\n      mChanges.calendarType = sCurrentCalendarType;\n      if (bFireEvent) {\n        fireChange();\n      }\n    }\n  }\n};\nfunction fireChange() {\n  oEventing.fireEvent(\"change\", mChanges);\n  mChanges = undefined;\n}\nfunction init() {\n  // init ABAP formats\n  const sABAPDateFormat = Formatting.getABAPDateFormat();\n  if (sABAPDateFormat !== undefined) {\n    Formatting.setABAPDateFormat(sABAPDateFormat);\n  }\n  const sABAPNumberFormat = Formatting.getABAPNumberFormat();\n  if (sABAPNumberFormat !== undefined) {\n    Formatting.setABAPNumberFormat(sABAPNumberFormat);\n  }\n  const sABAPTimeFormat = Formatting.getABAPTimeFormat();\n  if (sABAPTimeFormat !== undefined) {\n    Formatting.setABAPTimeFormat(sABAPTimeFormat);\n  }\n}\ninit();\nexport default Formatting;", "/*!\n * OpenUI5\n * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n// Provides class sap.ui.core.date.Islamic\nimport UniversalDate from \"./UniversalDate.js\";\nimport CalendarType from \"../CalendarType.js\";\nimport Log from \"../../../base/Log.js\";\nimport Formatting from \"../../../base/i18n/Formatting.js\";\nimport _Calendars from \"./_Calendars.js\";\n/**\n * The Islamic date class\n *\n * @class\n * The islamic date does conversion of day, month and year values based on tabular data indicating the start of a month.\n * In case no tabular data is available for the date, a fallback calculated date will be used.\n *\n * @private\n * @alias sap.ui.core.date.Islamic\n * @extends sap.ui.core.date.UniversalDate\n */\nvar Islamic = UniversalDate.extend(\"sap.ui.core.date.Islamic\", /** @lends sap.ui.core.date.Islamic.prototype */{\n  constructor: function () {\n    var aArgs = arguments;\n    if (aArgs.length > 1) {\n      aArgs = toGregorianArguments(aArgs);\n    }\n    this.oDate = this.createDate(Date, aArgs);\n    this.sCalendarType = CalendarType.Islamic;\n  }\n});\nIslamic.UTC = function () {\n  var aArgs = toGregorianArguments(arguments);\n  return Date.UTC.apply(Date, aArgs);\n};\nIslamic.now = function () {\n  return Date.now();\n};\nvar BASE_YEAR = 1400,\n  // used for 2 digits \"year\" related method\n  GREGORIAN_EPOCH_DAYS = 1721425.5,\n  // Julian days since noon on January 1, 4713 BC\n  ISLAMIC_EPOCH_DAYS = 1948439.5,\n  // Julian days since noon on January 1, 4713 BC\n  ISLAMIC_MILLIS = -42521587200000,\n  // 7/16/622\n  ONE_DAY = 86400000;\nvar oCustomizationMap = null;\n\n// Currently those are the two supported Islamic Calendar types in the ABAP\nvar aSupportedIslamicCalendarTypes = [\"A\", \"B\"];\n\n/**\n * Calculate islamic date from gregorian.\n *\n * @param {object} oGregorian A JS object containing day, month and year in the gregorian calendar\n * @returns {object} The islamic date object created\n * @private\n */\nfunction toIslamic(oGregorian) {\n  var iGregorianYear = oGregorian.year,\n    iGregorianMonth = oGregorian.month,\n    iGregorianDay = oGregorian.day,\n    iIslamicYear,\n    iIslamicMonth,\n    iIslamicDay,\n    iMonths,\n    iDays,\n    iLeapAdj,\n    iJulianDay;\n  iLeapAdj = 0;\n  if (iGregorianMonth + 1 > 2) {\n    iLeapAdj = isGregorianLeapYear(iGregorianYear) ? -1 : -2;\n  }\n  iJulianDay = GREGORIAN_EPOCH_DAYS - 1 + 365 * (iGregorianYear - 1) + Math.floor((iGregorianYear - 1) / 4) + -Math.floor((iGregorianYear - 1) / 100) + Math.floor((iGregorianYear - 1) / 400) + Math.floor((367 * (iGregorianMonth + 1) - 362) / 12 + iLeapAdj + iGregorianDay);\n  iJulianDay = Math.floor(iJulianDay) + 0.5;\n  iDays = iJulianDay - ISLAMIC_EPOCH_DAYS;\n  iMonths = Math.floor(iDays / 29.530588853); // day/CalendarAstronomer.SYNODIC_MONTH\n\n  if (iMonths < 0) {\n    //negative means Islamic date before the Islamic's calendar start. So we do not apply customization.\n    iIslamicYear = Math.floor(iMonths / 12) + 1;\n    iIslamicMonth = iMonths % 12;\n    if (iIslamicMonth < 0) {\n      iIslamicMonth += 12;\n    }\n    iIslamicDay = iDays - monthStart(iIslamicYear, iIslamicMonth) + 1;\n  } else {\n    /* Guess the month start.\n     * Always also check the next month, since customization can\n     * differ. It can differ for not more than 3 days. so that\n     * checking the next month is enough.\n     */\n    iMonths++;\n\n    /*\n     * Check the true month start for the given month. If it is\n     * later, check the previous month, until a suitable is found.\n     */\n    while (getCustomMonthStartDays(iMonths) > iDays) {\n      iMonths--;\n    }\n    iIslamicYear = Math.floor(iMonths / 12) + 1;\n    iIslamicMonth = iMonths % 12;\n    iIslamicDay = iDays - getCustomMonthStartDays(12 * (iIslamicYear - 1) + iIslamicMonth) + 1;\n  }\n  return {\n    day: iIslamicDay,\n    month: iIslamicMonth,\n    year: iIslamicYear\n  };\n}\n\n/**\n * Calculate gregorian date from islamic.\n *\n * @param {object} oIslamic A JS object containing day, month and year in the islamic calendar\n * @returns {object} The gregorian date object created\n * @private\n */\nfunction toGregorian(oIslamic) {\n  var iIslamicYear = oIslamic.year,\n    iIslamicMonth = oIslamic.month,\n    iIslamicDate = oIslamic.day,\n    /* Islamic Calendar starts from  0001/0/1 (19 July 622 AD), so for any date before it customization is not needed */\n    iMonthStart = iIslamicYear < 1 ? monthStart(iIslamicYear, iIslamicMonth) : getCustomMonthStartDays(12 * (iIslamicYear - 1) + iIslamicMonth),\n    iJulianDay = iIslamicDate + iMonthStart + ISLAMIC_EPOCH_DAYS - 1,\n    iJulianDayNoon = Math.floor(iJulianDay - 0.5) + 0.5,\n    iDaysSinceGregorianEpoch = iJulianDayNoon - GREGORIAN_EPOCH_DAYS,\n    iQuadricent = Math.floor(iDaysSinceGregorianEpoch / 146097),\n    iQuadricentNormalized = mod(iDaysSinceGregorianEpoch, 146097),\n    iCent = Math.floor(iQuadricentNormalized / 36524),\n    iCentNormalized = mod(iQuadricentNormalized, 36524),\n    iQuad = Math.floor(iCentNormalized / 1461),\n    iQuadNormalized = mod(iCentNormalized, 1461),\n    iYearIndex = Math.floor(iQuadNormalized / 365),\n    iYear = iQuadricent * 400 + iCent * 100 + iQuad * 4 + iYearIndex,\n    iMonth,\n    iDay,\n    iGregorianYearStartDays,\n    iDayOfYear,\n    tjd,\n    tjd2,\n    iLeapAdj,\n    iLeapAdj2;\n  if (!(iCent == 4 || iYearIndex == 4)) {\n    iYear++;\n  }\n  iGregorianYearStartDays = GREGORIAN_EPOCH_DAYS + 365 * (iYear - 1) + Math.floor((iYear - 1) / 4) - Math.floor((iYear - 1) / 100) + Math.floor((iYear - 1) / 400);\n  iDayOfYear = iJulianDayNoon - iGregorianYearStartDays;\n  tjd = GREGORIAN_EPOCH_DAYS - 1 + 365 * (iYear - 1) + Math.floor((iYear - 1) / 4) - Math.floor((iYear - 1) / 100) + Math.floor((iYear - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(iYear) ? -1 : -2) + 1);\n  iLeapAdj = 0;\n  if (iJulianDayNoon < tjd) {\n    iLeapAdj = 0;\n  } else {\n    iLeapAdj = isGregorianLeapYear(iYear) ? 1 : 2;\n  }\n  iMonth = Math.floor(((iDayOfYear + iLeapAdj) * 12 + 373) / 367);\n  tjd2 = GREGORIAN_EPOCH_DAYS - 1 + 365 * (iYear - 1) + Math.floor((iYear - 1) / 4) - Math.floor((iYear - 1) / 100) + Math.floor((iYear - 1) / 400);\n  iLeapAdj2 = 0;\n  if (iMonth > 2) {\n    iLeapAdj2 = isGregorianLeapYear(iYear) ? -1 : -2;\n  }\n  tjd2 += Math.floor((367 * iMonth - 362) / 12 + iLeapAdj2 + 1);\n  iDay = iJulianDayNoon - tjd2 + 1;\n  return {\n    day: iDay,\n    month: iMonth - 1,\n    year: iYear\n  };\n}\nfunction toGregorianArguments(aArgs) {\n  var aGregorianArgs = Array.prototype.slice.call(aArgs),\n    oIslamic,\n    oGregorian;\n  oIslamic = {\n    year: aArgs[0],\n    month: aArgs[1],\n    day: aArgs[2] !== undefined ? aArgs[2] : 1\n  };\n  oGregorian = toGregorian(oIslamic);\n  aGregorianArgs[0] = oGregorian.year;\n  aGregorianArgs[1] = oGregorian.month;\n  aGregorianArgs[2] = oGregorian.day;\n  return aGregorianArgs;\n}\nfunction initCustomizationMap() {\n  var sDateFormat, oCustomizationJSON;\n  oCustomizationMap = {};\n  sDateFormat = Formatting.getABAPDateFormat();\n  sDateFormat = _isSupportedIslamicCalendarType(sDateFormat) ? sDateFormat : \"A\"; // set \"A\" as a fall-back format always\n  oCustomizationJSON = Formatting.getCustomIslamicCalendarData();\n  oCustomizationJSON = oCustomizationJSON || [];\n  if (!oCustomizationJSON.length) {\n    Log.warning(\"No calendar customizations.\");\n    return;\n  }\n  oCustomizationJSON.forEach(function (oEntry) {\n    if (oEntry.dateFormat === sDateFormat) {\n      var date = parseDate(oEntry.gregDate);\n      // no need to use UI5Date.getInstance as only the UTC timestamp is used\n      var iGregorianDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n      var iMillis = iGregorianDate.getTime();\n      var iIslamicMonthStartDays = (iMillis - ISLAMIC_MILLIS) / ONE_DAY;\n      date = parseDate(oEntry.islamicMonthStart);\n      var iIslamicMonths = (date.year - 1) * 12 + date.month - 1;\n      oCustomizationMap[iIslamicMonths] = iIslamicMonthStartDays;\n    }\n  });\n  Log.info(\"Working with date format: [\" + sDateFormat + \"] and customization: \" + JSON.stringify(oCustomizationJSON));\n}\nfunction parseDate(sDate) {\n  return {\n    year: parseInt(sDate.substr(0, 4)),\n    month: parseInt(sDate.substr(4, 2)),\n    day: parseInt(sDate.substr(6, 2))\n  };\n}\nfunction getCustomMonthStartDays(months) {\n  if (!oCustomizationMap) {\n    initCustomizationMap();\n  }\n  var iIslamicMonthStartDays = oCustomizationMap[months];\n  if (!iIslamicMonthStartDays) {\n    var year = Math.floor(months / 12) + 1;\n    var month = months % 12;\n    iIslamicMonthStartDays = monthStart(year, month);\n  }\n  return iIslamicMonthStartDays;\n}\nfunction monthStart(year, month) {\n  return Math.ceil(29.5 * month) + (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n}\nfunction isGregorianLeapYear(iYear) {\n  return !(iYear % 400) || !(iYear % 4) && !!(iYear % 100);\n}\nfunction _isSupportedIslamicCalendarType(sCalendarType) {\n  return aSupportedIslamicCalendarTypes.indexOf(sCalendarType) !== -1;\n}\n\n/**\n * Get the islamic date from the this.oDate.\n * @returns {object} The islamic date object created\n */\nIslamic.prototype._getIslamic = function () {\n  return toIslamic({\n    day: this.oDate.getDate(),\n    month: this.oDate.getMonth(),\n    year: this.oDate.getFullYear()\n  });\n};\n\n/**\n * Set the islamic date to the current this.oDate object.\n * @param {object} oIslamic A JS object containing day, month and year in the islamic calendar\n * @returns {number} <code>this</code> to allow method chaining\n */\nIslamic.prototype._setIslamic = function (oIslamic) {\n  var oGregorian = toGregorian(oIslamic);\n  return this.oDate.setFullYear(oGregorian.year, oGregorian.month, oGregorian.day);\n};\n\n/**\n * Get the islamic date from the this.oDate.\n * @returns {object} The UTC date object created\n */\nIslamic.prototype._getUTCIslamic = function () {\n  return toIslamic({\n    day: this.oDate.getUTCDate(),\n    month: this.oDate.getUTCMonth(),\n    year: this.oDate.getUTCFullYear()\n  });\n};\n\n/**\n * Set the islamic date to the current this.oDate object.\n * @param {object} oIslamic A JS object containing day, month and year in the islamic calendar\n * @returns {number} <code>this</code> to allow method chaining\n */\nIslamic.prototype._setUTCIslamic = function (oIslamic) {\n  var oGregorian = toGregorian(oIslamic);\n  return this.oDate.setUTCFullYear(oGregorian.year, oGregorian.month, oGregorian.day);\n};\n\n/*\n * Override setters and getters specific to the islamic date\n */\nIslamic.prototype.getDate = function (iDate) {\n  return this._getIslamic().day;\n};\nIslamic.prototype.getMonth = function () {\n  return this._getIslamic().month;\n};\nIslamic.prototype.getYear = function () {\n  return this._getIslamic().year - BASE_YEAR;\n};\nIslamic.prototype.getFullYear = function () {\n  return this._getIslamic().year;\n};\nIslamic.prototype.setDate = function (iDate) {\n  var oIslamic = this._getIslamic();\n  oIslamic.day = iDate;\n  return this._setIslamic(oIslamic);\n};\nIslamic.prototype.setMonth = function (iMonth, iDay) {\n  var oIslamic = this._getIslamic();\n  oIslamic.month = iMonth;\n  if (iDay !== undefined) {\n    oIslamic.day = iDay;\n  }\n  return this._setIslamic(oIslamic);\n};\nIslamic.prototype.setYear = function (iYear) {\n  var oIslamic = this._getIslamic();\n  oIslamic.year = iYear + BASE_YEAR;\n  return this._setIslamic(oIslamic);\n};\nIslamic.prototype.setFullYear = function (iYear, iMonth, iDay) {\n  var oIslamic = this._getIslamic();\n  oIslamic.year = iYear;\n  if (iMonth !== undefined) {\n    oIslamic.month = iMonth;\n  }\n  if (iDay !== undefined) {\n    oIslamic.day = iDay;\n  }\n  return this._setIslamic(oIslamic);\n};\nIslamic.prototype.getUTCDate = function (iDate) {\n  return this._getUTCIslamic().day;\n};\nIslamic.prototype.getUTCMonth = function () {\n  return this._getUTCIslamic().month;\n};\nIslamic.prototype.getUTCFullYear = function () {\n  return this._getUTCIslamic().year;\n};\nIslamic.prototype.setUTCDate = function (iDate) {\n  var oIslamic = this._getUTCIslamic();\n  oIslamic.day = iDate;\n  return this._setUTCIslamic(oIslamic);\n};\nIslamic.prototype.setUTCMonth = function (iMonth, iDay) {\n  var oIslamic = this._getUTCIslamic();\n  oIslamic.month = iMonth;\n  if (iDay !== undefined) {\n    oIslamic.day = iDay;\n  }\n  return this._setUTCIslamic(oIslamic);\n};\nIslamic.prototype.setUTCFullYear = function (iYear, iMonth, iDay) {\n  var oIslamic = this._getUTCIslamic();\n  oIslamic.year = iYear;\n  if (iMonth !== undefined) {\n    oIslamic.month = iMonth;\n  }\n  if (iDay !== undefined) {\n    oIslamic.day = iDay;\n  }\n  return this._setUTCIslamic(oIslamic);\n};\n_Calendars.set(CalendarType.Islamic, Islamic);\nexport default Islamic;"],
  "mappings": "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",
  "names": ["CalendarType_default"]
}
