import {
  CalendarType_default3 as CalendarType_default,
  Calendars_default,
  UniversalDate_default
} from "./chunk-BWZI5OG7.js";
import "./chunk-GBZ2GERS.js";
import "./chunk-6WDZWUHI.js";

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/date/Japanese.js
var Japanese = UniversalDate_default.extend(
  "sap.ui.core.date.Japanese",
  /** @lends sap.ui.core.date.Japanese.prototype */
  {
    constructor: function() {
      var aArgs = arguments;
      if (aArgs.length > 1) {
        aArgs = toGregorianArguments(aArgs);
      }
      this.oDate = this.createDate(Date, aArgs);
      this.sCalendarType = CalendarType_default.Japanese;
    }
  }
);
Japanese.UTC = function() {
  var aArgs = toGregorianArguments(arguments);
  return Date.UTC.apply(Date, aArgs);
};
Japanese.now = function() {
  return Date.now();
};
function toJapanese(oGregorian) {
  var iEra = UniversalDate_default.getEraByDate(CalendarType_default.Japanese, oGregorian.year, oGregorian.month, oGregorian.day), iEraStartYear = UniversalDate_default.getEraStartDate(CalendarType_default.Japanese, iEra).year;
  return {
    era: iEra,
    year: oGregorian.year - iEraStartYear + 1,
    month: oGregorian.month,
    day: oGregorian.day
  };
}
function toGregorian(oJapanese) {
  var iEraStartYear = UniversalDate_default.getEraStartDate(CalendarType_default.Japanese, oJapanese.era).year;
  return {
    year: iEraStartYear + oJapanese.year - 1,
    month: oJapanese.month,
    day: oJapanese.day
  };
}
function toGregorianArguments(aArgs) {
  var oJapanese, oGregorian, iEra, vYear = aArgs[0];
  if (typeof vYear == "number") {
    if (vYear >= 100) {
      return aArgs;
    } else {
      iEra = UniversalDate_default.getCurrentEra(CalendarType_default.Japanese);
      vYear = [iEra, vYear];
    }
  } else if (!Array.isArray(vYear)) {
    vYear = [];
  }
  oJapanese = {
    era: vYear[0],
    year: vYear[1],
    month: aArgs[1],
    day: aArgs[2] !== void 0 ? aArgs[2] : 1
  };
  oGregorian = toGregorian(oJapanese);
  aArgs[0] = oGregorian.year;
  return aArgs;
}
Japanese.prototype._getJapanese = function() {
  var oGregorian = {
    year: this.oDate.getFullYear(),
    month: this.oDate.getMonth(),
    day: this.oDate.getDate()
  };
  return toJapanese(oGregorian);
};
Japanese.prototype._setJapanese = function(oJapanese) {
  var oGregorian = toGregorian(oJapanese);
  return this.oDate.setFullYear(oGregorian.year, oGregorian.month, oGregorian.day);
};
Japanese.prototype._getUTCJapanese = function() {
  var oGregorian = {
    year: this.oDate.getUTCFullYear(),
    month: this.oDate.getUTCMonth(),
    day: this.oDate.getUTCDate()
  };
  return toJapanese(oGregorian);
};
Japanese.prototype._setUTCJapanese = function(oJapanese) {
  var oGregorian = toGregorian(oJapanese);
  return this.oDate.setUTCFullYear(oGregorian.year, oGregorian.month, oGregorian.day);
};
Japanese.prototype.getYear = function() {
  return this._getJapanese().year;
};
Japanese.prototype.getFullYear = function() {
  return this._getJapanese().year;
};
Japanese.prototype.getEra = function() {
  return this._getJapanese().era;
};
Japanese.prototype.getUTCFullYear = function() {
  return this._getUTCJapanese().year;
};
Japanese.prototype.getUTCEra = function() {
  return this._getUTCJapanese().era;
};
Japanese.prototype.setYear = function(iYear) {
  var oJapanese = this._getJapanese();
  oJapanese.year = iYear;
  return this._setJapanese(oJapanese);
};
Japanese.prototype.setFullYear = function(iYear, iMonth, iDay) {
  var oJapanese = this._getJapanese();
  oJapanese.year = iYear;
  if (iMonth !== void 0) {
    oJapanese.month = iMonth;
  }
  if (iDay !== void 0) {
    oJapanese.day = iDay;
  }
  return this._setJapanese(oJapanese);
};
Japanese.prototype.setEra = function(iEra, iYear, iMonth, iDay) {
  var oEraStartDate = UniversalDate_default.getEraStartDate(CalendarType_default.Japanese, iEra), oJapanese = toJapanese(oEraStartDate);
  if (iYear !== void 0) {
    oJapanese.year = iYear;
  }
  if (iMonth !== void 0) {
    oJapanese.month = iMonth;
  }
  if (iDay !== void 0) {
    oJapanese.day = iDay;
  }
  return this._setJapanese(oJapanese);
};
Japanese.prototype.setUTCFullYear = function(iYear, iMonth, iDay) {
  var oJapanese = this._getUTCJapanese();
  oJapanese.year = iYear;
  if (iMonth !== void 0) {
    oJapanese.month = iMonth;
  }
  if (iDay !== void 0) {
    oJapanese.day = iDay;
  }
  return this._setUTCJapanese(oJapanese);
};
Japanese.prototype.setUTCEra = function(iEra, iYear, iMonth, iDay) {
  var oEraStartDate = UniversalDate_default.getEraStartDate(CalendarType_default.Japanese, iEra), oJapanese = toJapanese(oEraStartDate);
  if (iYear !== void 0) {
    oJapanese.year = iYear;
  }
  if (iMonth !== void 0) {
    oJapanese.month = iMonth;
  }
  if (iDay !== void 0) {
    oJapanese.day = iDay;
  }
  return this._setUTCJapanese(oJapanese);
};
Japanese.prototype.getWeek = function(oLocale, vCalendarWeekNumbering) {
  return UniversalDate_default.getWeekByDate(this.sCalendarType, this.oDate.getFullYear(), this.getMonth(), this.getDate(), oLocale, vCalendarWeekNumbering);
};
Japanese.prototype.getUTCWeek = function(oLocale, vCalendarWeekNumbering) {
  return UniversalDate_default.getWeekByDate(this.sCalendarType, this.oDate.getUTCFullYear(), this.getUTCMonth(), this.getUTCDate(), oLocale, vCalendarWeekNumbering);
};
Calendars_default.set(CalendarType_default.Japanese, Japanese);
/*! Bundled license information:

@ui5/webcomponents-localization/dist/sap/ui/core/date/Japanese.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)
*/
//# sourceMappingURL=@ui5_webcomponents-localization_dist_features_calendar_Japanese__js.js.map
