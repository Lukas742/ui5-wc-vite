import {
  CalendarType_default3 as CalendarType_default,
  Calendars_default,
  UniversalDate_default
} from "./chunk-BWZI5OG7.js";
import "./chunk-GBZ2GERS.js";
import "./chunk-6WDZWUHI.js";

// node_modules/@ui5/webcomponents-localization/dist/sap/ui/core/date/Buddhist.js
var Buddhist = UniversalDate_default.extend(
  "sap.ui.core.date.Buddhist",
  /** @lends sap.ui.core.date.Buddhist.prototype */
  {
    constructor: function() {
      var aArgs = arguments;
      if (aArgs.length > 1) {
        aArgs = toGregorianArguments(aArgs);
      }
      this.oDate = this.createDate(Date, aArgs);
      this.sCalendarType = CalendarType_default.Buddhist;
    }
  }
);
Buddhist.UTC = function() {
  var aArgs = toGregorianArguments(arguments);
  return Date.UTC.apply(Date, aArgs);
};
Buddhist.now = function() {
  return Date.now();
};
function toBuddhist(oGregorian) {
  var iEraStartYear = UniversalDate_default.getEraStartDate(CalendarType_default.Buddhist, 0).year, iYear = oGregorian.year - iEraStartYear + 1;
  if (oGregorian.year < 1941 && oGregorian.month < 3) {
    iYear -= 1;
  }
  if (oGregorian.year === null) {
    iYear = void 0;
  }
  return {
    year: iYear,
    month: oGregorian.month,
    day: oGregorian.day
  };
}
function toGregorian(oBuddhist) {
  var iEraStartYear = UniversalDate_default.getEraStartDate(CalendarType_default.Buddhist, 0).year, iYear = oBuddhist.year + iEraStartYear - 1;
  if (iYear < 1941 && oBuddhist.month < 3) {
    iYear += 1;
  }
  if (oBuddhist.year === null) {
    iYear = void 0;
  }
  return {
    year: iYear,
    month: oBuddhist.month,
    day: oBuddhist.day
  };
}
function toGregorianArguments(aArgs) {
  var oBuddhist, oGregorian;
  oBuddhist = {
    year: aArgs[0],
    month: aArgs[1],
    day: aArgs[2] !== void 0 ? aArgs[2] : 1
  };
  oGregorian = toGregorian(oBuddhist);
  aArgs[0] = oGregorian.year;
  return aArgs;
}
Buddhist.prototype._getBuddhist = function() {
  var oGregorian = {
    year: this.oDate.getFullYear(),
    month: this.oDate.getMonth(),
    day: this.oDate.getDate()
  };
  return toBuddhist(oGregorian);
};
Buddhist.prototype._setBuddhist = function(oBuddhist) {
  var oGregorian = toGregorian(oBuddhist);
  return this.oDate.setFullYear(oGregorian.year, oGregorian.month, oGregorian.day);
};
Buddhist.prototype._getUTCBuddhist = function() {
  var oGregorian = {
    year: this.oDate.getUTCFullYear(),
    month: this.oDate.getUTCMonth(),
    day: this.oDate.getUTCDate()
  };
  return toBuddhist(oGregorian);
};
Buddhist.prototype._setUTCBuddhist = function(oBuddhist) {
  var oGregorian = toGregorian(oBuddhist);
  return this.oDate.setUTCFullYear(oGregorian.year, oGregorian.month, oGregorian.day);
};
Buddhist.prototype.getYear = function() {
  return this._getBuddhist().year;
};
Buddhist.prototype.getFullYear = function() {
  return this._getBuddhist().year;
};
Buddhist.prototype.getUTCFullYear = function() {
  return this._getUTCBuddhist().year;
};
Buddhist.prototype.setYear = function(iYear) {
  var oBuddhist = this._getBuddhist();
  oBuddhist.year = iYear;
  return this._setBuddhist(oBuddhist);
};
Buddhist.prototype.setFullYear = function(iYear, iMonth, iDay) {
  var oBuddhist = this._getBuddhist();
  oBuddhist.year = iYear;
  if (iMonth !== void 0) {
    oBuddhist.month = iMonth;
  }
  if (iDay !== void 0) {
    oBuddhist.day = iDay;
  }
  return this._setBuddhist(oBuddhist);
};
Buddhist.prototype.setUTCFullYear = function(iYear, iMonth, iDay) {
  var oBuddhist = this._getUTCBuddhist();
  oBuddhist.year = iYear;
  if (iMonth !== void 0) {
    oBuddhist.month = iMonth;
  }
  if (iDay !== void 0) {
    oBuddhist.day = iDay;
  }
  return this._setUTCBuddhist(oBuddhist);
};
Calendars_default.set(CalendarType_default.Buddhist, Buddhist);
/*! Bundled license information:

@ui5/webcomponents-localization/dist/sap/ui/core/date/Buddhist.js:
  (*!
   * OpenUI5
   * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.
   * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.
   *)
*/
//# sourceMappingURL=@ui5_webcomponents-localization_dist_features_calendar_Buddhist__js.js.map
