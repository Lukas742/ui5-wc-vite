{
  "version": 3,
  "sources": ["../../@ui5/webcomponents-localization/dist/sap/ui/core/date/Buddhist.js"],
  "sourcesContent": ["/*!\n * OpenUI5\n * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n// Provides class sap.ui.core.date.Buddhist\nimport UniversalDate from \"./UniversalDate.js\";\nimport CalendarType from \"../CalendarType.js\";\nimport _Calendars from \"./_Calendars.js\";\n/**\n * The Buddhist date class\n *\n * @class\n * The Buddhist date implements the Thai solar calendar (BE - Buddhist Era). In this calendar\n * the year is offset by 543 compared to the Gregorian calendar.\n * e.g. Year 2022 CE corresponds to 2565 BE\n *\n *\n * Before 1941 CE the year start was 1st of April, so Januar to March belong to the previous year.\n * <pre>\n * Month | 1-3 | 4-6 | 7-9 | 10-12 | 1-3 | 4-6 | 7-9 | 10-12 | 1-3 | 4-6 | 7-9 | 10-12 | 1-3 | 4-6 | 7-9 | 10-12 |\n * CE    |       1939              |           1940          |         1941            |          1942           |\n * BE     2481 |        2482             |      2483         |         2484            |          2485           |\n * </pre>\n *\n * @private\n * @alias sap.ui.core.date.Buddhist\n * @extends sap.ui.core.date.UniversalDate\n */\nvar Buddhist = UniversalDate.extend(\"sap.ui.core.date.Buddhist\", /** @lends sap.ui.core.date.Buddhist.prototype */{\n  constructor: function () {\n    var aArgs = arguments;\n    if (aArgs.length > 1) {\n      aArgs = toGregorianArguments(aArgs);\n    }\n    this.oDate = this.createDate(Date, aArgs);\n    this.sCalendarType = CalendarType.Buddhist;\n  }\n});\nBuddhist.UTC = function () {\n  var aArgs = toGregorianArguments(arguments);\n  return Date.UTC.apply(Date, aArgs);\n};\nBuddhist.now = function () {\n  return Date.now();\n};\n\n/**\n * Find the matching Buddhist date for the given gregorian date\n *\n * @param {{year: int, month: int, day: int}} oGregorian Gregorian date\n * @return {{year: int, month: int, day: int}} the resulting Buddhist date\n */\nfunction toBuddhist(oGregorian) {\n  var iEraStartYear = UniversalDate.getEraStartDate(CalendarType.Buddhist, 0).year,\n    iYear = oGregorian.year - iEraStartYear + 1;\n  // Before 1941 new year started on 1st of April\n  if (oGregorian.year < 1941 && oGregorian.month < 3) {\n    iYear -= 1;\n  }\n  if (oGregorian.year === null) {\n    iYear = undefined;\n  }\n  return {\n    year: iYear,\n    month: oGregorian.month,\n    day: oGregorian.day\n  };\n}\n\n/**\n * Calculate gregorian year from Buddhist year and month\n *\n * @param {{year: int, month: int, day: int}} oBuddhist Buddhist date\n * @return {{year: int, month: int, day: int}} the resulting Gregorian date\n */\nfunction toGregorian(oBuddhist) {\n  var iEraStartYear = UniversalDate.getEraStartDate(CalendarType.Buddhist, 0).year,\n    iYear = oBuddhist.year + iEraStartYear - 1;\n  // Before 1941 new year started on 1st of April\n  if (iYear < 1941 && oBuddhist.month < 3) {\n    iYear += 1;\n  }\n  if (oBuddhist.year === null) {\n    iYear = undefined;\n  }\n  return {\n    year: iYear,\n    month: oBuddhist.month,\n    day: oBuddhist.day\n  };\n}\n\n/**\n * Convert arguments array from Buddhist date to Gregorian data.\n *\n * @param {int[]} aArgs Array with year, month, day (optional) according to Buddhist calendar\n * @returns {int[]} Array with year, month, day according to Gregorian calendar\n */\nfunction toGregorianArguments(aArgs) {\n  var oBuddhist, oGregorian;\n  oBuddhist = {\n    year: aArgs[0],\n    month: aArgs[1],\n    day: aArgs[2] !== undefined ? aArgs[2] : 1\n  };\n  oGregorian = toGregorian(oBuddhist);\n  aArgs[0] = oGregorian.year;\n  return aArgs;\n}\n\n/**\n * Get the Buddhist year from this.oDate\n *\n * @return {object}\n */\nBuddhist.prototype._getBuddhist = function () {\n  var oGregorian = {\n    year: this.oDate.getFullYear(),\n    month: this.oDate.getMonth(),\n    day: this.oDate.getDate()\n  };\n  return toBuddhist(oGregorian);\n};\n\n/**\n * Set the Buddhist year to this.oDate\n */\nBuddhist.prototype._setBuddhist = function (oBuddhist) {\n  var oGregorian = toGregorian(oBuddhist);\n  return this.oDate.setFullYear(oGregorian.year, oGregorian.month, oGregorian.day);\n};\n\n/**\n * Get the Buddhist year from this.oDate in UTC\n *\n * @return {object}\n */\nBuddhist.prototype._getUTCBuddhist = function () {\n  var oGregorian = {\n    year: this.oDate.getUTCFullYear(),\n    month: this.oDate.getUTCMonth(),\n    day: this.oDate.getUTCDate()\n  };\n  return toBuddhist(oGregorian);\n};\n\n/**\n * Set the Buddhist year to this.oDate in UTC\n */\nBuddhist.prototype._setUTCBuddhist = function (oBuddhist) {\n  var oGregorian = toGregorian(oBuddhist);\n  return this.oDate.setUTCFullYear(oGregorian.year, oGregorian.month, oGregorian.day);\n};\n\n/*\n * Override relevant getters/setters\n */\nBuddhist.prototype.getYear = function () {\n  return this._getBuddhist().year;\n};\nBuddhist.prototype.getFullYear = function () {\n  return this._getBuddhist().year;\n};\nBuddhist.prototype.getUTCFullYear = function () {\n  return this._getUTCBuddhist().year;\n};\nBuddhist.prototype.setYear = function (iYear) {\n  var oBuddhist = this._getBuddhist();\n  oBuddhist.year = iYear;\n  return this._setBuddhist(oBuddhist);\n};\nBuddhist.prototype.setFullYear = function (iYear, iMonth, iDay) {\n  var oBuddhist = this._getBuddhist();\n  oBuddhist.year = iYear;\n  if (iMonth !== undefined) {\n    oBuddhist.month = iMonth;\n  }\n  if (iDay !== undefined) {\n    oBuddhist.day = iDay;\n  }\n  return this._setBuddhist(oBuddhist);\n};\nBuddhist.prototype.setUTCFullYear = function (iYear, iMonth, iDay) {\n  var oBuddhist = this._getUTCBuddhist();\n  oBuddhist.year = iYear;\n  if (iMonth !== undefined) {\n    oBuddhist.month = iMonth;\n  }\n  if (iDay !== undefined) {\n    oBuddhist.day = iDay;\n  }\n  return this._setUTCBuddhist(oBuddhist);\n};\n_Calendars.set(CalendarType.Buddhist, Buddhist);\nexport default Buddhist;"],
  "mappings": "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",
  "names": []
}
