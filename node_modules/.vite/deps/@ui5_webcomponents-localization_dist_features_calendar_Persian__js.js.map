{
  "version": 3,
  "sources": ["../../@ui5/webcomponents-localization/dist/sap/ui/core/date/Persian.js"],
  "sourcesContent": ["/*!\n * OpenUI5\n * (c) Copyright 2009-2024 SAP SE or an SAP affiliate company.\n * Licensed under the Apache License, Version 2.0 - see LICENSE.txt.\n */\n// Provides class sap.ui.core.date.Persian\nimport UniversalDate from \"./UniversalDate.js\";\nimport CalendarType from \"../CalendarType.js\";\nimport _Calendars from \"./_Calendars.js\";\n/**\n * The Persian date class\n *\n * @class\n * The Persian date does conversion of day, month and year values based on the vernal equinox.\n * Calculation taken from jalaali-js.\n *\n * @private\n * @alias sap.ui.core.date.Persian\n * @extends sap.ui.core.date.UniversalDate\n */\nvar Persian = UniversalDate.extend(\"sap.ui.core.date.Persian\", /** @lends sap.ui.core.date.Persian.prototype */{\n  constructor: function () {\n    var aArgs = arguments;\n    if (aArgs.length > 1) {\n      aArgs = toGregorianArguments(aArgs);\n    }\n    this.oDate = this.createDate(Date, aArgs);\n    this.sCalendarType = CalendarType.Persian;\n  }\n});\nPersian.UTC = function () {\n  var aArgs = toGregorianArguments(arguments);\n  return Date.UTC.apply(Date, aArgs);\n};\nPersian.now = function () {\n  return Date.now();\n};\nvar BASE_YEAR = 1300;\n\n/**\n * Calculate Persian date from gregorian\n *\n * @param {object} oGregorian a JS object containing day, month and year in the gregorian calendar\n * @private\n */\nfunction toPersian(oGregorian) {\n  var iJulianDayNumber = g2d(oGregorian.year, oGregorian.month + 1, oGregorian.day);\n  return d2j(iJulianDayNumber);\n}\n\n/**\n * Calculate gregorian date from Persian\n *\n * @param {object} oPersian a JS object containing day, month and year in the Persian calendar\n * @private\n */\nfunction toGregorian(oPersian) {\n  var iJulianDayNumber = j2d(oPersian.year, oPersian.month + 1, oPersian.day);\n  return d2g(iJulianDayNumber);\n}\nfunction toGregorianArguments(aArgs) {\n  var aGregorianArgs = Array.prototype.slice.call(aArgs),\n    oPersian,\n    oGregorian;\n  // Validate arguments\n  if (typeof aArgs[0] !== \"number\" || typeof aArgs[1] !== \"number\" || aArgs[2] !== undefined && typeof aArgs[2] != \"number\") {\n    aGregorianArgs[0] = NaN;\n    aGregorianArgs[1] = NaN;\n    aGregorianArgs[2] = NaN;\n    return aGregorianArgs;\n  }\n  oPersian = {\n    year: aArgs[0],\n    month: aArgs[1],\n    day: aArgs[2] !== undefined ? aArgs[2] : 1\n  };\n  oGregorian = toGregorian(oPersian);\n  aGregorianArgs[0] = oGregorian.year;\n  aGregorianArgs[1] = oGregorian.month;\n  aGregorianArgs[2] = oGregorian.day;\n  return aGregorianArgs;\n}\n\n/*\n\tThis function determines if the Jalaali (Persian) year is\n\tleap (366-day long) or is the common year (365 days), and\n\tfinds the day in March (Gregorian calendar) of the first\n\tday of the Jalaali year (jy).\n\t@param jy Jalaali calendar year (-61 to 3177)\n\t@return\n\t\tleap: number of years since the last leap year (0 to 4)\n\t\tgy: Gregorian year of the beginning of Jalaali year\n\t\tmarch: the March day of Farvardin the 1st (1st day of jy)\n\t@see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n\t@see: http://www.fourmilab.ch/documents/calendar/\n*/\nfunction jalCal(jy) {\n  // Jalaali years starting the 33-year rule.\n  var breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178],\n    bl = breaks.length,\n    gy = jy + 621,\n    leapJ = -14,\n    jp = breaks[0],\n    jm,\n    jump,\n    leap,\n    leapG,\n    march,\n    n,\n    i;\n\n  // Find the limiting years for the Jalaali year jy.\n  for (i = 1; i < bl; i += 1) {\n    jm = breaks[i];\n    jump = jm - jp;\n    if (jy < jm) {\n      break;\n    }\n    leapJ = leapJ + div(jump, 33) * 8 + div(mod(jump, 33), 4);\n    jp = jm;\n  }\n  n = jy - jp;\n\n  // Find the number of leap years from AD 621 to the beginning\n  // of the current Jalaali year in the Persian calendar.\n  leapJ = leapJ + div(n, 33) * 8 + div(mod(n, 33) + 3, 4);\n  if (mod(jump, 33) === 4 && jump - n === 4) {\n    leapJ += 1;\n  }\n\n  // And the same in the Gregorian calendar (until the year gy).\n  leapG = div(gy, 4) - div((div(gy, 100) + 1) * 3, 4) - 150;\n\n  // Determine the Gregorian date of Farvardin the 1st.\n  march = 20 + leapJ - leapG;\n\n  // Find how many years have passed since the last leap year.\n  if (jump - n < 6) {\n    n = n - jump + div(jump + 4, 33) * 33;\n  }\n  leap = mod(mod(n + 1, 33) - 1, 4);\n  if (leap === -1) {\n    leap = 4;\n  }\n  return {\n    leap: leap,\n    gy: gy,\n    march: march\n  };\n}\n\n/*\n\tConverts a date of the Jalaali calendar to the Julian Day number.\n\t@param jy Jalaali year (1 to 3100)\n\t@param jm Jalaali month (1 to 12)\n\t@param jd Jalaali day (1 to 29/31)\n\t@return Julian Day number\n*/\nfunction j2d(jy, jm, jd) {\n  // Correct month overflow/underflow for correct day calculation\n  while (jm < 1) {\n    jm += 12;\n    jy--;\n  }\n  while (jm > 12) {\n    jm -= 12;\n    jy++;\n  }\n  var r = jalCal(jy);\n  return g2d(r.gy, 3, r.march) + (jm - 1) * 31 - div(jm, 7) * (jm - 7) + jd - 1;\n}\n\n/*\n\tConverts the Julian Day number to a date in the Jalaali calendar.\n\t@param jdn Julian Day number\n\t@return\n\t\tjy: Jalaali year (1 to 3100)\n\t\tjm: Jalaali month (1 to 12)\n\t\tjd: Jalaali day (1 to 29/31)\n*/\nfunction d2j(jdn) {\n  var gy = d2g(jdn).year,\n    jy = gy - 621,\n    r = jalCal(jy),\n    jdn1f = g2d(gy, 3, r.march),\n    jd,\n    jm,\n    k;\n\n  // Find number of days that passed since 1 Farvardin.\n  k = jdn - jdn1f;\n  if (k >= 0) {\n    if (k <= 185) {\n      // The first 6 months.\n      jm = 1 + div(k, 31);\n      jd = mod(k, 31) + 1;\n      return {\n        year: jy,\n        month: jm - 1,\n        day: jd\n      };\n    } else {\n      // The remaining months.\n      k -= 186;\n    }\n  } else {\n    // Previous Jalaali year.\n    jy -= 1;\n    k += 179;\n    if (r.leap === 1) {\n      k += 1;\n    }\n  }\n  jm = 7 + div(k, 30);\n  jd = mod(k, 30) + 1;\n  return {\n    year: jy,\n    month: jm - 1,\n    day: jd\n  };\n}\n\n/*\n\tCalculates the Julian Day number from Gregorian or Julian\n\tcalendar dates. This integer number corresponds to the noon of\n\tthe date (i.e. 12 hours of Universal Time).\n\tThe procedure was tested to be good since 1 March, -100100 (of both\n\tcalendars) up to a few million years into the future.\n\t@param gy Calendar year (years BC numbered 0, -1, -2, ...)\n\t@param gm Calendar month (1 to 12)\n\t@param gd Calendar day of the month (1 to 28/29/30/31)\n\t@return Julian Day number\n*/\nfunction g2d(gy, gm, gd) {\n  var d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408;\n  d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n  return d;\n}\n\n/*\n\tCalculates Gregorian and Julian calendar dates from the Julian Day number\n\t(jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n\tcalendars) to some millions years ahead of the present.\n\t@param jdn Julian Day number\n\t@return\n\t\tgy: Calendar year (years BC numbered 0, -1, -2, ...)\n\t\tgm: Calendar month (1 to 12)\n\t\tgd: Calendar day of the month M (1 to 28/29/30/31)\n*/\nfunction d2g(jdn) {\n  var j, i, gd, gm, gy;\n  j = 4 * jdn + 139361631;\n  j = j + div(div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908;\n  i = div(mod(j, 1461), 4) * 5 + 308;\n  gd = div(mod(i, 153), 5) + 1;\n  gm = mod(div(i, 153), 12) + 1;\n  gy = div(j, 1461) - 100100 + div(8 - gm, 6);\n  return {\n    year: gy,\n    month: gm - 1,\n    day: gd\n  };\n}\n\n/*\n\tUtility helper functions.\n*/\n\nfunction div(a, b) {\n  return ~~(a / b);\n}\nfunction mod(a, b) {\n  return a - ~~(a / b) * b;\n}\n\n/**\n * Get the Persian date from the this.oDate\n */\nPersian.prototype._getPersian = function () {\n  return toPersian({\n    day: this.oDate.getDate(),\n    month: this.oDate.getMonth(),\n    year: this.oDate.getFullYear()\n  });\n};\n\n/**\n * Set the Persian date to the current this.oDate object\n * @param {object} oPersian a JS object containing day, month and year in the Persian calendar\n */\nPersian.prototype._setPersian = function (oPersian) {\n  var oGregorian = toGregorian(oPersian);\n  return this.oDate.setFullYear(oGregorian.year, oGregorian.month, oGregorian.day);\n};\n\n/**\n * Get the Persian date from the this.oDate\n */\nPersian.prototype._getUTCPersian = function () {\n  return toPersian({\n    day: this.oDate.getUTCDate(),\n    month: this.oDate.getUTCMonth(),\n    year: this.oDate.getUTCFullYear()\n  });\n};\n\n/**\n * Set the Persian date to the current this.oDate object\n * @param {object} oPersian a JS object containing day, month and year in the Persian calendar\n */\nPersian.prototype._setUTCPersian = function (oPersian) {\n  var oGregorian = toGregorian(oPersian);\n  return this.oDate.setUTCFullYear(oGregorian.year, oGregorian.month, oGregorian.day);\n};\n\n/*\n * Override setters and getters specific to the Persian date\n */\nPersian.prototype.getDate = function (iDate) {\n  return this._getPersian().day;\n};\nPersian.prototype.getMonth = function () {\n  return this._getPersian().month;\n};\nPersian.prototype.getYear = function () {\n  return this._getPersian().year - BASE_YEAR;\n};\nPersian.prototype.getFullYear = function () {\n  return this._getPersian().year;\n};\nPersian.prototype.setDate = function (iDate) {\n  var oPersian = this._getPersian();\n  oPersian.day = iDate;\n  return this._setPersian(oPersian);\n};\nPersian.prototype.setMonth = function (iMonth, iDay) {\n  var oPersian = this._getPersian();\n  oPersian.month = iMonth;\n  if (iDay !== undefined) {\n    oPersian.day = iDay;\n  }\n  return this._setPersian(oPersian);\n};\nPersian.prototype.setYear = function (iYear) {\n  var oPersian = this._getPersian();\n  oPersian.year = iYear + BASE_YEAR;\n  return this._setPersian(oPersian);\n};\nPersian.prototype.setFullYear = function (iYear, iMonth, iDay) {\n  var oPersian = this._getPersian();\n  oPersian.year = iYear;\n  if (iMonth !== undefined) {\n    oPersian.month = iMonth;\n  }\n  if (iDay !== undefined) {\n    oPersian.day = iDay;\n  }\n  return this._setPersian(oPersian);\n};\nPersian.prototype.getUTCDate = function (iDate) {\n  return this._getUTCPersian().day;\n};\nPersian.prototype.getUTCMonth = function () {\n  return this._getUTCPersian().month;\n};\nPersian.prototype.getUTCFullYear = function () {\n  return this._getUTCPersian().year;\n};\nPersian.prototype.setUTCDate = function (iDate) {\n  var oPersian = this._getUTCPersian();\n  oPersian.day = iDate;\n  return this._setUTCPersian(oPersian);\n};\nPersian.prototype.setUTCMonth = function (iMonth, iDay) {\n  var oPersian = this._getUTCPersian();\n  oPersian.month = iMonth;\n  if (iDay !== undefined) {\n    oPersian.day = iDay;\n  }\n  return this._setUTCPersian(oPersian);\n};\nPersian.prototype.setUTCFullYear = function (iYear, iMonth, iDay) {\n  var oPersian = this._getUTCPersian();\n  oPersian.year = iYear;\n  if (iMonth !== undefined) {\n    oPersian.month = iMonth;\n  }\n  if (iDay !== undefined) {\n    oPersian.day = iDay;\n  }\n  return this._setUTCPersian(oPersian);\n};\n_Calendars.set(CalendarType.Persian, Persian);\nexport default Persian;"],
  "mappings": "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",
  "names": []
}
